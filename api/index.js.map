{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/icons.tsx", "../app/authProvider.ts", "../app/constants.ts", "../app/contexts/index.tsx", "../app/routes/_apps.tsx", "../app/components/Layout/index.tsx", "../app/components/Layout/Header.tsx", "../app/components/Layout/Sider.tsx", "../app/components/Layout/Title.tsx", "../app/routes/_apps.apps.tsx", "../app/components/buttons/DropdownActions.tsx", "../app/components/buttons/DeleteButton.tsx", "../app/routes/_apps.apps.create.tsx", "../app/components/apps/AppForm.tsx", "../app/components/crud/CreateDrawer.tsx", "../app/components/buttons/SaveButton.tsx", "../app/routes/_auth.tsx", "../app/routes/_auth.login.tsx", "../app/components/auth/Login.tsx", "../app/routes/_auth.register.tsx", "../app/components/auth/Register.tsx", "../app/routes/_layout.tsx", "../app/routes/_layout.$.tsx", "../app/routes/_layout.calendar.tsx", "../app/components/calendar/CalendarComponents.tsx", "../app/components/calendar/Create.tsx", "../app/components/calendar/Form.tsx", "../app/components/controls/DatePicker.tsx", "../app/components/controls/TimePicker.tsx", "../app/components/doctors/controls/SelectDoctor.tsx", "../app/components/patients/controls/SelectPatient.tsx", "../app/components/treatments/controls/SelectTreatment.tsx", "../app/components/controls/RichEditor/theme.ts", "../app/components/controls/RichEditor/index.tsx", "../app/components/controls/RichEditor/plugins/ToolbarPlugin.tsx", "../app/components/controls/RichEditor/plugins/ListMaxIndentLevelPlugin.tsx", "../app/components/controls/RichEditor/plugins/AutoLinkPlugin.tsx", "../app/components/calendar/styles.ts", "../app/routes/_layout.doctors.tsx", "../app/components/buttons/ShowLink.tsx", "../app/routes/_layout.doctors.create.tsx", "../app/components/doctors/form.tsx", "../app/routes/_layout.patients.tsx", "../app/components/buttons/RefreshButton.tsx", "../app/components/buttons/CreateButton.tsx", "../app/components/patients/Edit.tsx", "../app/components/patients/form.tsx", "../app/components/controls/UploadAvatar.tsx", "../app/components/controls/SelectSex.tsx", "../app/components/crud/EditDrawer.tsx", "../app/routes/_layout.patients.create.tsx", "../app/routes/_layout.patients_.$id.tsx", "../app/components/patients/TreatmentsTable.tsx", "../app/components/crud/Show.tsx", "../app/components/notes/NoteCreate.tsx", "../app/components/notes/NoteForm.tsx", "../app/components/notes/NoteList.tsx", "../app/components/fields/AvatarField.tsx", "../app/components/notes/NoteEdit.tsx", "../app/routes/_layout.patients_.$id.edit.tsx", "../app/routes/_layout.procedures.tsx", "../app/components/procedures/LoadButton.tsx", "../app/routes/_layout.treatments.tsx", "../app/components/treatments/fields/HeaderStatusField.tsx", "../app/components/treatments/constants.ts", "../app/components/treatments/Edit.tsx", "../app/components/treatments/form.tsx", "../app/components/treatments/controls/HeaderStatusControl.tsx", "../app/components/treatments/ProceduresList.tsx", "../app/components/treatments/ItemsTable.tsx", "../app/components/treatments/controls/StatusSelectControl.tsx", "../app/routes/_layout.treatments.create.tsx", "../app/routes/_layout.treatments_.$id.tsx", "../app/components/fields/DateField.tsx", "../app/routes/_layout.treatments_.$id.edit.tsx", "../app/routes/_layout._index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\"\r\nimport type { EntryContext } from \"@remix-run/node\"\r\nimport { Response } from \"@remix-run/node\"\r\nimport { RemixServer } from \"@remix-run/react\"\r\nimport { renderToPipeableStream } from \"react-dom/server\"\r\nimport { createCache, extractStyle, StyleProvider } from '@ant-design/cssinjs'\r\nimport { extractStaticStyle, StyleProvider as StyleProviderStyle } from 'antd-style'\r\n\r\n\r\nconst ABORT_DELAY = 5000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let didError = false;\r\n    const cache = createCache()\r\n\r\n    let { pipe, abort } = renderToPipeableStream(\r\n      <StyleProviderStyle cache={extractStaticStyle.cache}>\r\n        <StyleProvider cache={cache}>\r\n          <RemixServer context={remixContext} url={request.url} />\r\n        </StyleProvider>\r\n      </StyleProviderStyle>,\r\n      {\r\n        onShellReady: () => {\r\n          const styleText = extractStyle(cache)\r\n          let body = new PassThrough({\r\n            transform: (chunk, _, callback) => {\r\n              // add styles to response\r\n              const styles = extractStaticStyle(chunk.toString()).map((item) => item.style)\r\n\r\n              if (chunk.toString().match(/__STYLES__/) && styleText) {\r\n                chunk = chunk.toString().replace(/__STYLES__/, styleText + styles.join(''))\r\n              }\r\n              return callback(null, chunk)\r\n            }\r\n          })\r\n          responseHeaders.set(\"Content-Type\", \"text/html\")\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: didError ? 500 : responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError: (err) => {\r\n          reject(err);\r\n        },\r\n        onError: (error) => {\r\n          didError = true;\r\n\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from \"@remix-run/react\";\r\nimport { CalendarIcon, PatientIcon, SettingsIcon, TreatmentIcon } from \"./components/icons\"\r\nimport routerProvider, { UnsavedChangesNotifier } from \"@refinedev/remix-router\"\r\nimport { notificationProvider } from \"@refinedev/antd\"\r\nimport { RefineKbar, RefineKbarProvider } from \"@refinedev/kbar\"\r\nimport { authProvider, axiosInstance } from \"~/authProvider\"\r\nimport localizedFormat from \"dayjs/plugin/localizedFormat\"\r\nimport resetStyle from \"@refinedev/antd/dist/reset.css\"\r\nimport { ColorModeContextProvider } from \"@contexts\"\r\nimport { DataProvider } from \"@refinedev/strapi-v4\"\r\nimport { HeadersFunction, json, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\"\r\nimport { API_URL, TOKEN_KEY } from \"~/constants\"\r\nimport timezone from 'dayjs/plugin/timezone'\r\nimport { Refine } from \"@refinedev/core\"\r\nimport * as cookie from \"cookie\"\r\nimport dayjs from \"dayjs\"\r\nimport \"dayjs/locale/es\"\r\n\r\n\r\ndayjs.extend(localizedFormat)\r\ndayjs.extend(timezone)\r\ndayjs.locale('es')\r\n\r\nexport const loader = async ({ request }: LoaderArgs) => {\r\n  const parsedCookie = cookie.parse(request.headers.get(\"Cookie\") ?? \"\")\r\n  const token = parsedCookie[TOKEN_KEY]\r\n  const mode = parsedCookie[\"theme\"]\r\n\r\n  return json({\r\n    token,\r\n    mode,\r\n  })\r\n}\r\n\r\nexport const meta: V2_MetaFunction = () => {\r\n  return [\r\n    { title: \"Dental Clinic\" },\r\n    { name: \"viewport\", content: \"width=device-width, initial-scale=1\" }\r\n  ]\r\n}\r\nexport default function App() {\r\n  const { token, mode } = useLoaderData()\r\n  if (token) {\r\n    axiosInstance.defaults.headers.common = {\r\n      Authorization: `Bearer ${token}`,\r\n    }\r\n  }\r\n\r\n  return <html lang=\"es\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n        {typeof document === \"undefined\"\r\n          ? \"__STYLES__\"\r\n          : null}\r\n      </head>\r\n      <body>\r\n        <RefineKbarProvider>\r\n          <ColorModeContextProvider defaultMode={mode}>\r\n            <RefineKbarProvider>\r\n              <Refine\r\n                routerProvider={routerProvider}\r\n                authProvider={authProvider}\r\n                dataProvider={DataProvider(API_URL + `/api`, axiosInstance)}\r\n                notificationProvider={notificationProvider}\r\n                resources={[\r\n                  {\r\n                    name: \"apps\",\r\n                    create: \"/apps/create\",\r\n                    list: \"/apps\",\r\n                    meta: {\r\n                      //hide: true,\r\n                    },\r\n                  },\r\n                  {\r\n                    name: \"dc-events\",\r\n                    list: \"/calendar\",\r\n                    create: \"/calendar/create\",\r\n                    edit: \"/calendar/:id/edit\",\r\n                    meta: {\r\n                      label: \"Calendario\",\r\n                      route: \"calendar\",\r\n                      icon: <CalendarIcon />,\r\n                    },\r\n                  },\r\n                  {\r\n                    name: \"dc-patients\",\r\n                    list: \"/patients\",\r\n                    create: \"/patients/create\",\r\n                    edit: \"/patients/:id/edit\",\r\n                    show: \"/patients/:id\",\r\n                    meta: {\r\n                      label: \"Pacientes\",\r\n                      route: \"patients\",\r\n                      icon: <PatientIcon />,\r\n                    },\r\n                  },\r\n                  {\r\n                    name: \"dc-treatments\",\r\n                    meta: {\r\n                      label: \"Tratamientos\",\r\n                      route: \"treatments\",\r\n                      icon: <TreatmentIcon />,\r\n                    },\r\n                    list: \"/treatments\",\r\n                    create: \"/treatments/create\",\r\n                    edit: \"/treatments/:id/edit\",\r\n                    show: \"/treatments/:id\",\r\n                  },\r\n                  {\r\n                    name: \"settings\",\r\n                    meta: {\r\n                      label: \"Configuraciones\",\r\n                      icon: <SettingsIcon />,\r\n                    },\r\n                  },\r\n                  {\r\n                    name: \"dc-doctors\",\r\n                    meta: {\r\n                      label: \"Doctores\",\r\n                      route: \"doctors\",\r\n                      parent: \"settings\",\r\n                    },\r\n                    list: \"/doctors\",\r\n                    create: \"/doctors/create\",\r\n                    edit: \"/doctors/:id/edit\",\r\n                    show: \"/doctors/:id\",\r\n                  },\r\n                  {\r\n                    name: \"dc-procedures\",\r\n                    meta: {\r\n                      label: \"Procedimientos\",\r\n                      route: \"procedures\",\r\n                      parent: \"settings\",\r\n                    },\r\n                    list: \"/procedures\",\r\n                  },\r\n                ]}\r\n                options={{\r\n                  syncWithLocation: true,\r\n                  warnWhenUnsavedChanges: true,\r\n                  mutationMode: \"optimistic\",\r\n                }}\r\n              >\r\n                <>\r\n                  <Outlet />\r\n                  <UnsavedChangesNotifier />\r\n                  <RefineKbar />\r\n                </>\r\n              </Refine>\r\n            </RefineKbarProvider>\r\n          </ColorModeContextProvider>\r\n        </RefineKbarProvider>\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n}\r\n\r\nexport function links() {\r\n  return [{ rel: \"stylesheet\", href: resetStyle }];\r\n}\r\n", "import Icon from '@ant-design/icons'\r\nimport { \r\n    BsClipboard2Plus, \r\n    BsPersonVcard, \r\n    BsPlusSquare, \r\n    BsTrash,\r\n    BsEye,\r\n    BsPencilSquare,\r\n    BsGearWide, \r\n    BsPerson,\r\n    BsThreeDotsVertical,\r\n    BsSave,\r\n    BsXSquare,\r\n    BsChevronRight,\r\n    BsChevronLeft,\r\n    BsCircle,\r\n    BsCalendar3,\r\n    BsFillMoonStarsFill,\r\n    BsSun,\r\n    BsArrowCounterclockwise,\r\n    BsArrowClockwise,\r\n    BsTextParagraph,\r\n    BsTypeH1,\r\n    BsTypeH2,\r\n    BsListUl,\r\n    BsListOl,\r\n    BsBlockquoteRight,\r\n    BsChatSquareQuote,\r\n    BsQuote,\r\n    BsTypeBold,\r\n    BsTypeItalic,\r\n    BsTypeUnderline,\r\n    BsTypeStrikethrough,\r\n    BsLink,\r\n    BsFileEarmarkCheck,\r\n    BsStopwatch,\r\n    BsCalendar3Event,\r\n    BsWatch,\r\n    BsFileEarmarkText\r\n} from \"react-icons/bs\"\r\nimport { AiOutlineFileDone } from \"react-icons/ai\"\r\nimport { CiStickyNote } from \"react-icons/ci\"\r\n\r\nexport const CreateIcon = () => {\r\n    return <Icon component={BsPlusSquare} />\r\n}\r\n\r\nexport const EditIcon = () => {\r\n    return <Icon component={BsPencilSquare} />\r\n}\r\n\r\nexport const ShowIcon = () => {\r\n    return <Icon component={BsEye} />\r\n}\r\n\r\nexport const SaveIcon = () => {\r\n    return <Icon component={BsSave} />\r\n}\r\n\r\nexport const DeleteIcon = () => {\r\n    return <Icon component={BsTrash} />\r\n}\r\n\r\nexport const CloseIcon = () => {\r\n    return <Icon component={BsXSquare} />\r\n}\r\n\r\n\r\nexport const CalendarIcon = () => {\r\n    return <Icon component={BsCalendar3} />\r\n}\r\n\r\nexport const PatientIcon = () => {\r\n    return <Icon component={BsPersonVcard} />\r\n}\r\n\r\nexport const TreatmentIcon = () => {\r\n    return <Icon component={BsClipboard2Plus} />\r\n}\r\n\r\nexport const SettingsIcon = () => {\r\n    return <Icon component={BsGearWide} />\r\n}\r\n\r\nexport const UserIcon = (props: any) => {\r\n    return <Icon {...props} component={BsPerson} />\r\n}\r\n\r\nexport const MoreIcon = () => {\r\n    return <Icon component={BsThreeDotsVertical} />\r\n}\r\n\r\n\r\n/***************************\r\n * CALENDAR ICONS\r\n ***************************/\r\n\r\nexport const PrevIcon = () => {\r\n    return <Icon component={BsChevronLeft} />\r\n}\r\n\r\nexport const NextIcon = () => {\r\n    return <Icon component={BsChevronRight} />\r\n}\r\n\r\nexport const TodayIcon = () => {\r\n    return <Icon component={BsCircle} />\r\n}\r\n\r\n/***********************************\r\n *  MODE SWITCHER ICONS\r\n */\r\n\r\nexport const LightIcon = () => {\r\n    return <Icon component={BsFillMoonStarsFill} />\r\n}\r\n\r\nexport const DarkIcon = () => {\r\n    return <Icon component={BsSun} />\r\n}\r\n\r\n\r\n/************************************\r\n * editor icons\r\n */\r\n\r\nexport const UndoIcon = () => {\r\n    return <Icon component={BsArrowCounterclockwise} />\r\n}\r\n\r\nexport const RedoIcon = () => {\r\n    return <Icon component={BsArrowClockwise} />\r\n}\r\n\r\nexport const ParagraphIcon = () => {\r\n    return <Icon component={BsTextParagraph} />\r\n}\r\n\r\nexport const H1Icon = () => {\r\n    return <Icon component={BsTypeH1} />\r\n}\r\n\r\nexport const H2Icon = () => {\r\n    return <Icon component={BsTypeH2} />\r\n}\r\n\r\nexport const BulletedListIcon = () => {\r\n    return <Icon component={BsListUl} />\r\n}\r\n\r\nexport const NumberedListIcon = () => {\r\n    return <Icon component={BsListOl} />\r\n}\r\n\r\nexport const QuoteIcon = () => {\r\n    return <Icon component={BsQuote} />\r\n}\r\n\r\nexport const BoldIcon = () => {\r\n    return <Icon component={BsTypeBold} />\r\n}  \r\n\r\nexport const ItalicIcon = () => {\r\n    return <Icon component={BsTypeItalic} />\r\n}\r\n\r\nexport const UnderlineIcon = () => {\r\n    return <Icon component={BsTypeUnderline} />\r\n}\r\n\r\nexport const StrikethroughIcon = () => {\r\n    return <Icon component={BsTypeStrikethrough} />\r\n}\r\n\r\nexport const LinkIcon = () => {\r\n    return <Icon component={BsLink} />\r\n}\r\n\r\n/************************************\r\n *  events icons\r\n ************************************/\r\n\r\nexport const AppointmentIcon = () => {\r\n    return <Icon component={BsCalendar3Event} />\r\n}\r\n\r\n\r\nexport const TaskIcon = () => {\r\n    return <Icon component={BsFileEarmarkCheck} />\r\n}\r\n\r\nexport const ReminderIcon = () => {\r\n    return <Icon component={BsWatch} />\r\n}\r\n\r\nexport const NoteIcon = () => {\r\n    return <Icon component={BsFileEarmarkText} />\r\n}\r\n\r\n\r\n/************************************\r\n * Logo\r\n ************************************/\r\nconst LogoSvg = () => {\r\n    return <svg width=\"1em\" height=\"1em\" version=\"1.1\" viewBox=\"0 0 700 700\"><g><path d=\"m404.2 655.18v-17h34v34h-34zm-71.333-37.667c-0.36667-0.36666-0.66667-18.817-0.66667-41v-40.333h82v82h-40.333c-22.183 0-40.633-0.3-41-0.66667zm-66.667-71.333v-21h42v42h-42zm-64-32.093c-17.496-1.1564-28.932-3.4557-45.5-9.1478-59.841-20.559-105.06-74.162-114.94-136.26-2.2655-14.234-2.8929-30.848-1.6351-43.299 4.2444-42.014 19.345-75.375 47.488-104.92 15.803-16.587 29.766-26.926 50.088-37.088 6.6567-3.3286 24.302-10.198 26.196-10.198 0.29525 0 0.24487 2.8125-0.11195 6.25s-0.71097 11.447-0.78699 17.8l-0.13822 11.55-8.4825 3.9029c-25.225 11.606-50.076 34.61-63.692 58.958-7.836 14.012-15.191 36.521-17.005 52.039-1.1858 10.147-0.68398 29.681 1.0138 39.466 1.9297 11.122 8.0195 30.136 12.517 39.082 9.9709 19.832 29.052 41.839 46.489 53.617 49.289 33.293 109.85 33.494 159.5 0.52833 4.675-3.1039 12.127-9.1223 16.56-13.374l8.0601-7.7309 23.81 23.872-3.465 3.6014c-1.9057 1.9808-7.065 6.6514-11.465 10.379-34.828 29.506-78.828 43.984-124.5 40.966zm279.5 0.47114c-31.61-2.3157-59.382-11.993-86.368-30.095-13.236-8.8786-21.325-16.505-91.446-86.225-24.648-24.507-45.997-46.545-47.442-48.974-3.0636-5.1476-3.4829-11.905-1.0291-16.584 0.86529-1.65 15.234-16.6 31.929-33.223l30.356-30.223 23.987 23.943-46.987 47.036 55 54.827c59.986 59.797 62.216 61.711 84.113 72.194 19.145 9.1656 37.892 13.283 60.387 13.262 16.178-0.0149 26.777-1.6504 41.722-6.4376 43.017-13.78 76.718-46.905 90.767-89.218 4.9603-14.939 6.5504-23.547 7.2089-39.025 2.6768-62.917-36.858-119.39-97.482-139.25-14.15-4.6353-26.702-6.4931-43.618-6.4558-36.706 0.081-67.272 12.313-96.192 38.494l-7.0932 6.4215-23.814-23.977 8.2969-7.9218c21.323-20.359 51.177-36.395 79.703-42.811 15.973-3.5929 23.69-4.434 40-4.3595 34.284 0.1567 62.569 7.9794 90.5 25.029 33.458 20.424 59.698 52.375 73.442 89.427 11.606 31.289 13.657 69.704 5.459 102.27-7.5877 30.142-24.105 58.919-46.612 81.209-23.23 23.006-45.607 35.76-80.288 45.762-11.82 3.4088-40.143 5.959-54.5 4.9072zm-141.5-18.378v-11h22v22h-22zm37.501-96.999-11.977-12.009 46.965-46.997-51.494-51.565c-61.746-61.831-65.66-65.207-87.494-75.468-12.353-5.8049-20.517-8.5184-32.627-10.844l-9.3733-1.8 0.15192-10.41c0.0836-5.7252 0.80212-13.11 1.5968-16.41l1.4449-6 5.4032 0.34294c7.9089 0.50198 26.193 5.363 38.057 10.118 12.534 5.0234 30.327 15.06 41.272 23.282 10.343 7.7689 130.27 127.05 132.18 131.48 1.8026 4.1663 1.7817 11.648-0.042 15.082-0.78881 1.4852-15.081 16.315-31.761 32.955l-30.327 30.255zm89.794-72.751c-1.2061-2.6125-5.8577-8.6929-10.337-13.512l-8.1439-8.7619 7.4744-7.9453c20.096-21.363 33.015-47.847 37.272-76.413l0.57856-3.8818 8.18 0.67197c8.0117 0.65814 24.162 3.7408 25.239 4.8173 1.0101 1.01-4.7049 26.078-8.0552 35.334-9.5088 26.269-21.733 45.755-41.208 65.691-4.7013 4.8125-8.6063 8.75-8.6777 8.75-0.0714 0-1.1167-2.1375-2.3228-4.75zm-237.81-4.5c-32.978-35.398-49.572-76.154-49.557-121.72 0.0158-47.905 17.269-89.857 50.949-123.89 24.094-24.343 54.37-40.754 89.12-48.307 9.1975-1.999 13.353-2.2856 33.5-2.31 19.929-0.02416 24.469 0.27052 34 2.2067 15.377 3.1237 27.962 7.3742 42.36 14.307 15.336 7.3842 29.375 16.833 41.735 27.965 16.876 15.198 30.622 33.533 40.264 54.029 4.9752 10.577 10.747 25.74 10.03 26.351-0.21415 0.18257-3.0894-0.0167-6.3894-0.44293-3.3-0.42618-11.302-0.81285-17.783-0.85926l-11.783-0.0844-4.4423-9.5712c-8.6139-18.559-26.681-40.52-43.485-52.857-34.082-25.022-77.224-33.459-118.02-23.08-26.53 6.7493-44.703 17.152-64.568 36.96-20.413 20.354-32.881 42.954-38.924 70.548-2.5954 11.852-3.1182 37.583-1.0188 50.139 4.7912 28.653 16.543 52.842 35.527 73.123l8.2019 8.7624-8.471 8.9015c-4.659 4.8958-9.47 10.965-10.691 13.488-1.221 2.5223-2.3659 4.586-2.5442 4.586-0.17829 0-3.7829-3.7125-8.0103-8.25z\" display=\"none\"/><g fill=\"#60a5fa\" stroke=\"#60a5fa\"><path d=\"m229.33 320.12c-21.385-22.86-36.404-50.062-43.785-79.301-4.4114-17.475-5.5005-49.362-2.3681-69.339 5.6447-36 21.94-67.369 49.185-94.684 20.682-20.735 43.592-34.776 70.714-43.34 19.89-6.2805 24.623-6.9097 51.639-6.865 22.01 0.03636 26.685 0.40028 36.885 2.871 51.881 12.567 95.811 46.69 117.85 91.539 6.0665 12.344 12.035 27.492 11.114 28.208-0.26557 0.20666-7.9756 0.13268-17.133-0.1644l-16.65-0.54015-5.9013-11.571c-11.276-22.109-31.919-44.945-51.549-57.026-21.456-13.204-42.829-19.555-69.085-20.528-43.18-1.5999-78.774 12.928-108.28 44.194-17.34 18.377-28.267 38.062-34.594 62.323-2.6977 10.344-3.0744 14.38-3.1066 33.287-0.0328 19.237 0.29729 22.782 3.1158 33.468 6.6436 25.188 17.388 45.242 33.247 62.053l8.0792 8.5643-6.1527 6.0516c-3.384 3.3284-8.1561 8.9563-10.605 12.506-2.4486 3.5502-4.5732 6.4549-4.7214 6.4549s-3.7051-3.6728-7.9043-8.1617z\"/><path d=\"m341.19 496.11v-10.451h20.902v20.902h-20.902z\" strokeWidth=\"1.2295\"/><path d=\"m405.12 655.33v-15.984h31.967v31.967h-31.967z\" strokeWidth=\"1.2295\"/></g><g fill=\"#2563eb\" stroke=\"#2563eb\" strokeWidth=\"1.2295\"><path d=\"m192.42 512.56c-73.344-8.3941-136.27-68.018-149.64-141.79-2.8197-15.555-2.7869-45.635 0.06646-60.932 2.841-15.232 9.1219-33.919 15.97-47.513 14.74-29.264 41.735-57.497 70.194-73.415 9.0853-5.0817 30.261-14.317 32.828-14.317 1.1727 0 1.4735 27.284 0.34713 31.48-0.44672 1.6641-3.3977 3.8563-8.2755 6.1475-18.92 8.8874-42.627 28.373-54.717 44.975-10.818 14.854-18.647 32.527-23.855 53.848-3.889 15.919-3.5133 44.061 0.81248 60.864 4.1077 15.956 8.5867 27.756 14.009 36.907 22.134 37.356 55.072 61.238 96.73 70.134 13.106 2.7988 40.789 2.832 53.484 0.0641 27.601-6.0182 50-17.341 68.875-34.817l8.7746-8.124 22.555 22.695-9.5637 9.0881c-35.673 33.899-87.358 50.572-138.59 44.709z\"/><path d=\"m333.36 614.45c-0.40775-1.5215-0.74892-19.503-0.75815-39.959l-0.0168-37.193h81.148v79.918h-79.631z\"/><path d=\"m377.45 398.35-11.021-11.072 47.347-47.394-50.741-50.428c-50.764-50.45-61.548-60.553-72.658-68.069-12.206-8.257-34.161-17.004-49.608-19.765l-8.6806-1.5513 0.5651-11.205c0.3108-6.1629 1.1075-13.352 1.7705-15.975l1.2054-4.7693 6.5031 0.76431c20.979 2.4656 53.217 16.068 74.705 31.52 4.2316 3.043 36.289 34.027 71.238 68.852 68.223 67.982 65.73 65.04 63.785 75.25-0.42608 2.2367-10.469 13.395-30.707 34.119-16.541 16.937-30.661 30.795-31.378 30.795-0.71707 0-6.2633-4.9826-12.325-11.072z\"/></g><g strokeWidth=\"1.2295\"><path d=\"m467.58 325.46c-1.0624-2.2278-4.6321-7.069-7.9328-10.758-10.464-11.696-10.317-9.9406-1.615-19.243 17.606-18.821 30.797-45.063 35.583-70.787l1.5483-8.3225 6.3113 0.72583c8.0636 0.92734 24.402 4.0921 25.189 4.8791 0.33113 0.33112-0.0527 4.1556-0.85301 8.4989-4.0655 22.064-13.94 46.277-26.565 65.14-6.5102 9.7269-27.082 33.917-28.844 33.917-0.48944 0-1.7591-1.8228-2.8215-4.0506z\" fill=\"#60a5fa\" stroke=\"#60a5fa\"/><path d=\"m466.14 512.08c-30.203-4.9244-60.318-18.91-84.337-39.166-5.7243-4.8274-36.212-34.505-67.75-65.949-50.933-50.782-57.482-57.746-58.599-62.308-0.69124-2.8248-0.96826-6.6454-0.61561-8.4902 0.43907-2.2969 10.443-13.274 31.737-34.823l31.096-31.469 11.149 11.046c6.1318 6.0755 11.008 11.446 10.835 11.934-0.17258 0.48851-10.411 11.112-22.752 23.607-12.341 12.495-22.439 23.239-22.439 23.874 0 2.2664 105.54 105.64 115.68 113.31 12.921 9.7694 31.663 18.841 47.426 22.955 14.658 3.8255 43.376 5.3046 58.184 2.9966 20.817-3.2446 46.846-14.554 63.952-27.788 9.4746-7.3297 24.411-23.105 30.675-32.4 17.945-26.624 26.672-61.045 23.466-92.557-3.4383-33.802-16.838-62.254-40.511-86.02-29.919-30.036-71.447-44.88-113.61-40.606-19.54 1.981-31.168 5.2858-48.18 13.694-13.465 6.655-18.491 10.136-39.055 27.049l-3.725 3.0637-21.97-23.341 8.3997-7.6849c23.545-21.541 53.862-36.91 85.731-43.461 16.207-3.3312 44.993-3.554 62.833-0.48626 33.723 5.7991 64.224 21.439 89.392 45.84 16.299 15.801 26.341 29.42 36.001 48.824 13.86 27.841 18.467 49.761 17.44 82.992-0.65254 21.12-2.1704 30.44-7.7099 47.336-13.774 42.015-47.293 81.256-85.943 100.62-13.673 6.8492-32.913 13.587-46.376 16.24-14.252 2.8092-46.539 3.4333-60.432 1.1682z\" fill=\"#60a5fa\" stroke=\"#60a5fa\"/><path d=\"m470.1 511.82c-26.753-3.5982-53.087-14.219-77.033-31.067-9.9712-7.016-95.425-89.792-120.66-116.88-17.144-18.402-19.404-22.544-15.905-29.152 0.93067-1.758 15.072-16.791 31.425-33.406l29.733-30.21 21.455 21.308-22.018 22.866c-12.11 12.576-22.221 23.813-22.469 24.971-0.30707 1.4342 12.037 14.416 38.73 40.731 74.648 73.593 82.739 80.396 107.73 90.584 17.59 7.1709 25.314 8.3847 53.787 8.452 24.199 0.0573 25.647-0.0772 36.27-3.3678 13.505-4.1831 33.317-13.488 43.628-20.49 9.549-6.4846 25.993-22.665 33.752-33.21 10.986-14.932 20.177-36.68 24.162-57.172 2.1637-11.128 2.1676-40.571 6e-3 -51.639-4.1903-21.468-12.508-40.637-24.805-57.168-32.497-43.687-84.126-64.502-138.61-55.883-23.062 3.6479-43.899 13.224-65.51 30.106-7.7079 6.0214-14.353 10.964-14.767 10.983-0.41398 0.0194-5.3101-4.7119-10.88-10.514l-10.128-10.549 2.8884-3.1087c5.3664-5.7756 22.498-18.935 32.759-25.163 17.86-10.84 37.029-18.241 59.518-22.978 15.531-3.2716 48.427-2.8436 65.817 0.85631 34.14 7.2639 64.248 24.381 89.681 50.984 23.416 24.493 40.235 57.449 45.353 88.866 2.2851 14.027 2.534 40.339 0.53525 56.579-2.484 20.182-13.084 47.303-26.135 66.865-24.522 36.759-57.3 60.78-99.7 73.068-19.272 5.5847-47.7 7.5461-68.61 4.7337z\" fill=\"#1e40af\" stroke=\"#1e40af\"/><path d=\"m267.42 546.52v-20.287h40.574v40.574h-40.574z\" fill=\"#1e40af\" stroke=\"#1e40af\"/></g></g></svg>\r\n}\r\nexport const LogoIcon = (props: any) => {\r\n    return <Icon component={LogoSvg} {...props} />\r\n}\r\n", "import { AuthBindings } from \"@refinedev/core\";\r\nimport Cookies from \"js-cookie\";\r\nimport * as cookie from \"cookie\";\r\nimport { TOKEN_KEY, API_URL } from \"./constants\";\r\nimport { AuthHelper } from \"@refinedev/strapi-v4\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const axiosInstance = axios.create();\r\nconst strapiAuthHelper = AuthHelper(API_URL + \"/api\");\r\n\r\n\r\nexport const authProvider: AuthBindings = {\r\n    login: async ({ email, password }) => {\r\n        const { data, status } = await strapiAuthHelper.login(\r\n            email,\r\n            password,\r\n        );\r\n        if (status === 200) {\r\n            // save token to cookie with access to all subdomains\r\n            Cookies.set(TOKEN_KEY, data.jwt, {\r\n                path: \"/\",\r\n                domain: window.location.hostname,\r\n            });\r\n            // set header axios instance\r\n            axiosInstance.defaults.headers.common[\r\n                \"Authorization\"\r\n            ] = `Bearer ${data.jwt}`;\r\n\r\n            return {\r\n                success: true,\r\n                redirectTo: \"/\",\r\n            };\r\n        }\r\n        return {\r\n            success: false,\r\n            error: new Error(\"Invalid email or password\"),\r\n        };\r\n    },\r\n    logout: async () => {\r\n        // remove token from cookie\r\n        Cookies.remove(TOKEN_KEY, {\r\n            path: \"/\",\r\n            domain: window.location.hostname,\r\n        });\r\n        return {\r\n            success: true,\r\n            redirectTo: \"/login\",\r\n        };\r\n    },\r\n    onError: async (error) => {\r\n        if (error && error.statusCode === 401) {\r\n            return {\r\n                error: new Error(\"Unauthorized\"),\r\n                logout: true,\r\n                redirectTo: \"/login\",\r\n            };\r\n        }\r\n\r\n        return {};\r\n    },\r\n    check: async (request) => {\r\n        let token = undefined;\r\n        if (request) {\r\n            const hasCookie = request.headers.get(\"Cookie\");\r\n            if (hasCookie) {\r\n                const parsedCookie = cookie.parse(\r\n                    request.headers.get(\"Cookie\"),\r\n                );\r\n                token = parsedCookie[TOKEN_KEY];\r\n            }\r\n        } else {\r\n            const parsedCookie = Cookies.get(TOKEN_KEY);\r\n            token = parsedCookie ? JSON.parse(parsedCookie) : undefined;\r\n        }\r\n\r\n        const { pathname } = new URL(request.url);\r\n\r\n        const query =\r\n            pathname === \"/\" ? \"\" : `?to=${encodeURIComponent(pathname)}`;\r\n\r\n        if (!token) {\r\n            return {\r\n                authenticated: false,\r\n                error: new Error(\"Unauthorized\"),\r\n                logout: true,\r\n                redirectTo: `/login${query}`,\r\n            };\r\n        }\r\n\r\n        axiosInstance.defaults.headers.common = {\r\n            Authorization: `Bearer ${token}`,\r\n        }\r\n        return {\r\n            authenticated: true,\r\n        }\r\n    },\r\n    getPermissions: async () => {\r\n        return null;\r\n    },\r\n    getIdentity: async () => {\r\n        const token = Cookies.get(TOKEN_KEY);\r\n        if (!token) {\r\n            return null;\r\n        }\r\n\r\n        const { data, status } = await strapiAuthHelper.me(token);\r\n        if (status === 200) {\r\n            const { id, username, email } = data;\r\n            return {\r\n                id,\r\n                username,\r\n                email,\r\n            };\r\n        }\r\n\r\n        return null;\r\n    },\r\n};\r\n\r\n\r\n\r\n\r\n", "\r\nexport const API_URL = \"http://127.0.0.1:1337\"\r\nexport const TOKEN_KEY = \"c23f6aa82dd15d424ff0f191a3c4da0f73e71f498e3bb3d81865adfb60454d67b2174b9a1c8de900c1e468ec56871da8d57ffdf438e7d4239fd546645aaca1a976c51270dc8aaf0cac30396f3ae4323a59c4abde01e757e5936790d392e1bbeb53d9d4f4956bfe270204d6962d7f5746b5c72fb5c94d25c42f7480040be95934\"\r\n", "import React, {\r\n  createContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { ConfigProvider, theme } from \"antd\";\r\nimport { parseCookies, setCookie } from \"nookies\";\r\nimport { generate } from '@ant-design/colors';\r\nimport esES from 'antd/locale/es_ES'\r\n\r\ntype ColorModeContextType = {\r\n  mode: string;\r\n  setMode: (mode: string) => void;\r\n};\r\n\r\nexport const ColorModeContext = createContext<ColorModeContextType>(\r\n  {} as ColorModeContextType\r\n);\r\n\r\nexport function ColorModeContextProvider ({\r\n  children,\r\n  defaultMode=\"light\",\r\n}: {\r\n  children: React.ReactNode;\r\n  defaultMode: string;\r\n}) {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [mode, setMode] = useState(defaultMode);\r\n  const [color, setColor] = useState(generate('#1890ff', {\r\n    theme: defaultMode === \"light\" ? 'default' : 'dark',\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      setMode(parseCookies()[\"theme\"]);\r\n    }\r\n  }, [isMounted]);\r\n\r\n  useEffect(() => {\r\n    setColor(generate('#1890ff', {\r\n      theme: mode === \"light\" ? 'default' : 'dark',\r\n    }));\r\n  }, [mode]);\r\n\r\n  const setColorMode = () => {\r\n    const newMode = mode === \"light\" ? \"dark\" : \"light\";\r\n    // save in cookies including expiration date and all subdomains\r\n    setCookie(null, \"theme\", newMode, {\r\n      maxAge: 30 * 24 * 60 * 60,\r\n      path: \"/\",\r\n    });\r\n    setMode(newMode);\r\n  }\r\n\r\n  const { darkAlgorithm, defaultAlgorithm } = theme;\r\n\r\n  return (\r\n    <ColorModeContext.Provider\r\n      value={{\r\n        setMode: setColorMode,\r\n        mode,\r\n      }}\r\n    >\r\n      <ConfigProvider\r\n        theme={{\r\n          //algorithm: mode === \"light\" ? defaultAlgorithm : darkAlgorithm,\r\n          token: {\r\n            colorPrimary: color[5],\r\n          },\r\n          components: {\r\n            Layout: {\r\n              colorBgHeader: mode === \"light\" ? '#fff' : color[0],\r\n            },\r\n            Menu: {\r\n              colorBgMask: color[0],\r\n            },\r\n          }\r\n        }}\r\n        locale={{ \r\n          ...esES\r\n        }}\r\n      >\r\n        {children}\r\n      </ConfigProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n};\r\n", "import type { LoaderArgs } from \"@remix-run/node\"\r\nimport { authProvider } from \"~/authProvider\"\r\nimport { redirect } from \"@remix-run/node\"\r\nimport { Outlet } from \"@remix-run/react\"\r\nimport Layout from \"~/components/Layout\"\r\n\r\nexport default function BaseLayout() {\r\n    return <Layout hasSider={false}>\r\n        <Outlet />\r\n    </Layout>\r\n}\r\n\r\n/**\r\n * We're checking if the current session is authenticated.\r\n * If not, we're redirecting the user to the login page.\r\n * This is applied for all routes that are nested under this layout (_protected).\r\n */\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const { authenticated, redirectTo } = await authProvider.check(request);\r\n\r\n  if (!authenticated) {\r\n    throw redirect(redirectTo ?? \"/login\");\r\n  }\r\n\r\n  return {};\r\n}\r\n", "import type { RefineThemedLayoutV2Props } from \"@refinedev/antd\";\nimport { ThemedLayoutContextProvider } from \"@refinedev/antd\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\nimport DefaultHeader from \"./Header\";\nimport DefaultSider from \"./Sider\";\n\n\nexport default function ThemedLayoutV2({\n  children,\n  Header,\n  hasSider=true,\n  Sider,\n  Title,\n  Footer,\n  OffLayoutArea,\n}: RefineThemedLayoutV2Props & { hasSider?: boolean }) {\n  const breakpoint = Grid.useBreakpoint();\n  const SiderToRender = Sider ?? DefaultSider;\n  const HeaderToRender = Header ?? DefaultHeader;\n  const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n\n  return (\n    <ThemedLayoutContextProvider >\n      <AntdLayout hasSider={hasSider} style={{ minHeight: \"100vh\", display: \"flex\" }}>\n        {hasSider? <SiderToRender Title={Title} />: <div></div>}\n        <AntdLayout>\n          <HeaderToRender />\n          <AntdLayout.Content>\n            <div\n              style={{\n                minHeight: 360,\n                padding: isSmall ? 24 : 12,\n              }}\n            >\n              {children}\n            </div>\n            {OffLayoutArea && <OffLayoutArea />}\n          </AntdLayout.Content>\n          {Footer && <Footer />}\n        </AntdLayout>\n      </AntdLayout>\n    </ThemedLayoutContextProvider>\n  );\n};\n", "import { Layout as AntdLayout, Typography, Avatar, Space, theme } from \"antd\"\r\nimport { useActiveAuthProvider, useGetIdentity } from \"@refinedev/core\"\r\nimport type { RefineThemedLayoutV2HeaderProps } from \"@refinedev/antd\"\r\n\r\n\r\nconst { Text } = Typography;\r\nconst { useToken } = theme;\r\n\r\nexport default function ThemedHeaderV2 (\r\n  props: RefineThemedLayoutV2HeaderProps\r\n) {\r\n  const { token } = useToken()\r\n  const authProvider = useActiveAuthProvider()\r\n  const { data: user } = useGetIdentity({\r\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\r\n  })\r\n\r\n  return (\r\n    <AntdLayout.Header\r\n      style={{\r\n        backgroundColor: 'transparent'\r\n      }}\r\n    >\r\n      <Space>\r\n        <Space size=\"middle\">\r\n          {user?.name && <Text strong>{user.name}</Text>}\r\n          {user?.avatar && <Avatar src={user?.avatar} alt={user?.name} />}\r\n        </Space>\r\n      </Space>\r\n    </AntdLayout.Header>\r\n  )\r\n}\r\n", "import React, { CSSProperties } from \"react\";\r\nimport {\r\n  useTranslate,\r\n  useLogout,\r\n  useTitle,\r\n  CanAccess,\r\n  ITreeMenu,\r\n  useIsExistAuthentication,\r\n  useRouterContext,\r\n  useMenu,\r\n  useRefineContext,\r\n  useLink,\r\n  useRouterType,\r\n  useActiveAuthProvider,\r\n  pickNotDeprecated,\r\n  useWarnAboutChange,\r\n} from \"@refinedev/core\";\r\nimport { useSiderVisible } from \"@refinedev/antd\"\r\nimport ThemedTitleV2 from \"./Title\"\r\nimport {\r\n  DashboardOutlined,\r\n  LogoutOutlined,\r\n  UnorderedListOutlined,\r\n  BarsOutlined,\r\n  LeftOutlined,\r\n  RightOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Layout, Menu, Grid, Drawer, Button, theme } from \"antd\";\r\nimport type { RefineThemedLayoutV2SiderProps } from \"@refinedev/antd\";\r\n\r\nconst drawerButtonStyles: CSSProperties = {\r\n  borderTopLeftRadius: 0,\r\n  borderBottomLeftRadius: 0,\r\n  position: \"fixed\",\r\n  top: 64,\r\n  zIndex: 999,\r\n};\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useToken } = theme;\r\n\r\nexport default function ThemedSiderV2 ({\r\n  Title: TitleFromProps,\r\n  render,\r\n  meta,\r\n}: RefineThemedLayoutV2SiderProps){\r\n  const { token } = useToken();\r\n  const {\r\n    siderVisible,\r\n    setSiderVisible,\r\n    drawerSiderVisible,\r\n    setDrawerSiderVisible,\r\n  } = useSiderVisible();\r\n\r\n  const isExistAuthentication = useIsExistAuthentication();\r\n  const routerType = useRouterType();\r\n  const NewLink = useLink();\r\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\r\n  const { Link: LegacyLink } = useRouterContext();\r\n  const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\r\n  const TitleFromContext = useTitle();\r\n  const translate = useTranslate();\r\n  const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\r\n  const breakpoint = Grid.useBreakpoint();\r\n  const { hasDashboard } = useRefineContext();\r\n  const authProvider = useActiveAuthProvider();\r\n  const { mutate: mutateLogout } = useLogout({\r\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\r\n  });\r\n\r\n  const isMobile =\r\n    typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\r\n\r\n  const RenderToTitle = TitleFromProps ?? TitleFromContext ?? ThemedTitleV2;\r\n\r\n  const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\r\n    return tree.map((item: ITreeMenu) => {\r\n      const {\r\n        icon,\r\n        label,\r\n        route,\r\n        key,\r\n        name,\r\n        children,\r\n        parentName,\r\n        meta,\r\n        options,\r\n      } = item;\r\n\r\n      if (children.length > 0) {\r\n        return (\r\n          <CanAccess\r\n            key={item.key}\r\n            resource={name.toLowerCase()}\r\n            action=\"list\"\r\n            params={{\r\n              resource: item,\r\n            }}\r\n          >\r\n            <SubMenu\r\n              key={item.key}\r\n              icon={icon ?? <UnorderedListOutlined />}\r\n              title={label}\r\n            >\r\n              {renderTreeView(children, selectedKey)}\r\n            </SubMenu>\r\n          </CanAccess>\r\n        );\r\n      }\r\n      const isSelected = key === selectedKey;\r\n      const isRoute = !(\r\n        pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\r\n          undefined && children.length === 0\r\n      );\r\n\r\n      return (\r\n        <CanAccess\r\n          key={item.key}\r\n          resource={name.toLowerCase()}\r\n          action=\"list\"\r\n          params={{\r\n            resource: item,\r\n          }}\r\n        >\r\n          <Menu.Item\r\n            key={item.key}\r\n            icon={icon ?? (isRoute && <UnorderedListOutlined />)}\r\n          >\r\n            <Link to={route ?? \"\"}>{label}</Link>\r\n            {!drawerSiderVisible && isSelected && (\r\n              <div className=\"ant-menu-tree-arrow\" />\r\n            )}\r\n          </Menu.Item>\r\n        </CanAccess>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    if (warnWhen) {\r\n      const confirm = window.confirm(\r\n        translate(\r\n          \"warnWhenUnsavedChanges\",\r\n          \"Are you sure you want to leave? You have unsaved changes.\"\r\n        )\r\n      );\r\n\r\n      if (confirm) {\r\n        setWarnWhen(false);\r\n        mutateLogout();\r\n      }\r\n    } else {\r\n      mutateLogout();\r\n    }\r\n  };\r\n\r\n  const logout = isExistAuthentication && (\r\n    <Menu.Item\r\n      key=\"logout\"\r\n      onClick={() => handleLogout()}\r\n      icon={<LogoutOutlined />}\r\n    >\r\n      {translate(\"buttons.logout\", \"Logout\")}\r\n    </Menu.Item>\r\n  );\r\n\r\n  const dashboard = hasDashboard ? (\r\n    <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\r\n      <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\r\n      {!drawerSiderVisible && selectedKey === \"/\" && (\r\n        <div className=\"ant-menu-tree-arrow\" />\r\n      )}\r\n    </Menu.Item>\r\n  ) : null;\r\n\r\n  const items = renderTreeView(menuItems, selectedKey);\r\n\r\n  const renderSider = () => {\r\n    if (render) {\r\n      return render({\r\n        dashboard,\r\n        items,\r\n        logout,\r\n        collapsed: drawerSiderVisible,\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        {dashboard}\r\n        {items}\r\n        {logout}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderMenu = () => {\r\n    return (\r\n      <>\r\n        <Menu\r\n          selectedKeys={selectedKey ? [selectedKey] : []}\r\n          defaultOpenKeys={defaultOpenKeys}\r\n          mode=\"inline\"\r\n          style={{\r\n            marginTop: \"8px\",\r\n            border: \"none\",\r\n          }}\r\n          onClick={() => {\r\n            setSiderVisible?.(false);\r\n            if (!breakpoint.lg) {\r\n              setDrawerSiderVisible?.(true);\r\n            }\r\n          }}\r\n        >\r\n          {renderSider()}\r\n        </Menu>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderDrawerSider = () => {\r\n    return (\r\n      <>\r\n        <Drawer\r\n          open={siderVisible}\r\n          onClose={() => setSiderVisible?.(false)}\r\n          placement=\"left\"\r\n          closable={false}\r\n          width={200}\r\n          bodyStyle={{\r\n            padding: 0,\r\n          }}\r\n          maskClosable={true}\r\n        >\r\n          <Layout>\r\n            <Layout.Sider\r\n              style={{\r\n                height: \"100vh\",\r\n                overflow: \"hidden\",\r\n                backgroundColor: token.colorBgContainer,\r\n                borderRight: `1px solid ${token.colorBgElevated}`,\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"200px\",\r\n                  padding: \"0 16px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-start\",\r\n                  alignItems: \"center\",\r\n                  height: \"64px\",\r\n                  backgroundColor: token.colorBgElevated,\r\n                }}\r\n              >\r\n                <RenderToTitle collapsed={false}  size=\"small\" />\r\n              </div>\r\n              {renderMenu()}\r\n            </Layout.Sider>\r\n          </Layout>\r\n        </Drawer>\r\n        <Button\r\n          style={drawerButtonStyles}\r\n          size=\"large\"\r\n          onClick={() => setSiderVisible?.(true)}\r\n          icon={<BarsOutlined />}\r\n        ></Button>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (isMobile) {\r\n    return renderDrawerSider();\r\n  }\r\n\r\n  return (\r\n    <Layout.Sider\r\n      style={{\r\n        backgroundColor: token.colorBgContainer,\r\n        borderRight: `1px solid ${token.colorBgElevated}`,\r\n      }}\r\n      collapsible\r\n      collapsed={drawerSiderVisible}\r\n      onCollapse={(collapsed) => setDrawerSiderVisible?.(collapsed)}\r\n      collapsedWidth={80}\r\n      breakpoint=\"lg\"\r\n      trigger={\r\n        <Button\r\n          type=\"text\"\r\n          style={{\r\n            borderRadius: 0,\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            backgroundColor: token.colorBgElevated,\r\n          }}\r\n        >\r\n          {drawerSiderVisible ? (\r\n            <RightOutlined\r\n              style={{\r\n                color: token.colorPrimary,\r\n              }}\r\n            />\r\n          ) : (\r\n            <LeftOutlined\r\n              style={{\r\n                color: token.colorPrimary,\r\n              }}\r\n            />\r\n          )}\r\n        </Button>\r\n      }\r\n    >\r\n      <div\r\n        style={{\r\n          width: drawerSiderVisible ? \"80px\" : \"200px\",\r\n          padding: drawerSiderVisible ? \"0\" : \"0 16px\",\r\n          display: \"flex\",\r\n          justifyContent: drawerSiderVisible ? \"center\" : \"flex-start\",\r\n          alignItems: \"center\",\r\n          height: \"64px\",\r\n          backgroundColor: token.colorBgElevated,\r\n          fontSize: \"14px\",\r\n        }}\r\n      >\r\n        <RenderToTitle collapsed={drawerSiderVisible} />\r\n      </div>\r\n      {renderMenu()}\r\n    </Layout.Sider>\r\n  );\r\n};\r\n", "\r\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\"\r\nimport type { RefineLayoutThemedTitleProps } from \"@refinedev/antd\"\r\nimport { Typography, theme, Space } from \"antd\"\r\nimport { LogoIcon } from \"~/components/icons\"\r\n\r\nconst { useToken } = theme\r\n\r\nconst defaultText = \"CLOUDBIT\"\r\n\r\n\r\nexport default function ThemedTitleV2({\r\n  collapsed,\r\n  text = defaultText,\r\n  size = \"large\",\r\n}: RefineLayoutThemedTitleProps & { size?: \"large\" | \"small\" }){\r\n  const { token } = useToken();\r\n  const routerType = useRouterType();\r\n  const Link = useLink();\r\n  const { Link: LegacyLink } = useRouterContext();\r\n\r\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\r\n\r\n  return <ActiveLink\r\n      to=\"/\"\r\n      style={{\r\n        display: \"inline-block\",\r\n        textDecoration: \"none\",\r\n      }}\r\n    >\r\n      <Space style={{\r\n        display: \"flex\",\r\n        justifyItems: \"center\",\r\n      }} >\r\n          <LogoIcon style={{\r\n            fontSize: collapsed ? '2.5rem': '2rem'\r\n          }} />\r\n        {!collapsed && (\r\n          <Typography.Title style={{\r\n            fontSize: size === \"large\" ? 24 : 20,\r\n            margin: 0,\r\n            color: token.colorPrimary,\r\n          }}>\r\n            {text}\r\n          </Typography.Title>\r\n        )}\r\n      </Space>\r\n    </ActiveLink>\r\n};\r\n", "\r\nimport { Edit, List, useSimpleList } from \"@refinedev/antd\"\r\nimport { Button, Card, List as ListAnt } from \"antd\"\r\nimport { Outlet, useSearchParams } from \"@remix-run/react\"\r\nimport DropdownActions from \"~/components/buttons/DropdownActions\"\r\n\r\nexport default function AppPage () {\r\n\r\n    const { queryResult, listProps } = useSimpleList({})\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    const getAppUrl = (appCode: string) => {\r\n        // verify is exists subdomain and get only domain\r\n        const domain = window.location.host.split('.').slice(-2).join('.')\r\n        // check https or http\r\n        const protocol = window.location.protocol\r\n        return `${protocol}//${appCode}.${domain}`\r\n    }\r\n\r\n\r\n    return <List\r\n        title=\"Mis aplicaciones\"\r\n    >\r\n        <ListAnt \r\n            {...listProps}\r\n            grid={{ gutter: 16, column: 4 }}\r\n            dataSource={queryResult?.data?.data}\r\n            renderItem={item => <ListAnt.Item>\r\n                <Card title={item.name}\r\n                    actions={[\r\n                        <Button type=\"link\" href={item.url} onClick={()=> {}}>Ir a app</Button>,\r\n                        <DropdownActions\r\n                            showItem={{\r\n                                url: () => {\r\n                                    return getAppUrl(item.code)\r\n                                }\r\n                            }}\r\n                            editItem={{\r\n                                url: () => {\r\n                                    searchParams.set('edit', item.id as string)\r\n                                    return `?${searchParams.toString()}`\r\n                                }\r\n                            }}\r\n                        />,\r\n                    ]}\r\n                />\r\n            </ListAnt.Item>\r\n            }\r\n        />\r\n        <Outlet />\r\n    </List>\r\n}", "\r\nimport type { EditButtonProps, ShowButtonProps, DeleteButtonProps } from \"@refinedev/antd\"\r\nimport { useCan, useNavigation, useTranslate, useResource } from \"@refinedev/core\"\r\nimport { DeleteIcon, EditIcon, MoreIcon, ShowIcon } from \"../icons\"\r\nimport { Button, Dropdown, Space } from \"antd\"\r\nimport DeleteButton from \"./DeleteButton\"\r\nimport { Link } from \"@remix-run/react\"\r\nimport React from \"react\"\r\n\r\n/**\r\n * `<EditButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\r\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\r\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/buttons/edit-button} for more details.\r\n */\r\n\r\ntype ItemProps = {\r\n    url?: string | ((record?: any) => string) ,\r\n    hideText?: boolean,\r\n    hide?: boolean\r\n}\r\n\r\ntype DropdownActionsProps = {\r\n    editItem?: ItemProps,\r\n    deleteItem?: ItemProps,\r\n    showItem?: ItemProps,\r\n}\r\n\r\n\r\nexport default function DropdownActions ({\r\n  resource: resourceNameFromProps,\r\n  recordItemId,\r\n  hideText = false,\r\n  editItem,\r\n  deleteItem,\r\n  showItem,\r\n  accessControl,\r\n  meta,\r\n  children,\r\n  ...rest\r\n}: EditButtonProps & ShowButtonProps & DeleteButtonProps & DropdownActionsProps ) {\r\n    const accessControlEnabled = accessControl?.enabled ?? true\r\n    const translate = useTranslate()\r\n\r\n    // const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\r\n\r\n    const { editUrl: generateEditUrl, showUrl: generateShowUrl } = useNavigation()\r\n\r\n    const { id, resource } = useResource(\r\n        resourceNameFromProps \r\n    );\r\n\r\n    const { data: editData } = useCan({\r\n        resource: resource?.name,\r\n        action: \"edit\",\r\n        params: { id: recordItemId ?? id, resource },\r\n        queryOptions: {\r\n        enabled: accessControlEnabled,\r\n        },\r\n    });\r\n    const { data: showData} = useCan({\r\n        resource: resource?.name,\r\n        action: \"show\",\r\n        params: { id: recordItemId ?? id, resource },\r\n        queryOptions: {\r\n          enabled: accessControlEnabled,\r\n        },\r\n    });\r\n    const { data: deleteData } = useCan({\r\n        resource: resource?.name,\r\n        action: \"delete\",\r\n        params: { id: recordItemId ?? id, resource },\r\n        queryOptions: {\r\n          enabled: accessControlEnabled,\r\n        },\r\n      });\r\n\r\n    const showUrl = (typeof showItem?.url === 'function'? showItem?.url(): showItem?.url ) ||\r\n      (resource && (recordItemId || id)\r\n        ? generateShowUrl(resource, recordItemId! ?? id!, meta)\r\n        : \"\")\r\n\r\n    const createButtonDisabledTitle = (data: any) => {\r\n        if (data?.can) return \"\";\r\n        else if (data?.reason) return data.reason;\r\n        else\r\n        return translate(\r\n            \"buttons.notAccessTitle\",\r\n            \"You don't have permission to access\"\r\n        );\r\n    };\r\n\r\n    let editUrl = (typeof editItem?.url === 'function'? editItem.url(): editItem?.url ) ||\r\n        (resource && (recordItemId ?? id)\r\n        ? generateEditUrl(resource, recordItemId! ?? id!, meta)\r\n        : \"\")\r\n\r\n    const [confirmDelete, setConfirmDelete] = React.useState(false)\r\n\r\n    return <>\r\n         {!confirmDelete && <Dropdown \r\n            menu={{\r\n                items: [\r\n                    {\r\n                        key: \"show\",\r\n                        label: <Link to={showUrl}>\r\n                            <Space>\r\n                                <ShowIcon />\r\n                                {!hideText && translate(\"buttons.show\", \"Ver\")}\r\n                            </Space>\r\n                        </Link>,\r\n                        title: createButtonDisabledTitle(showData),\r\n                        disabled: showData?.can === false,\r\n                    },\r\n                    {\r\n                        key: \"edit\",\r\n                        label: <Link to={editUrl}>\r\n                            <Space>\r\n                                <EditIcon />\r\n                                {!hideText && translate(\"buttons.edit\", \"Editar\")}\r\n                            </Space>\r\n                        </Link>,\r\n                        title: createButtonDisabledTitle(editData),\r\n                        disabled: editData?.can === false,\r\n                    },\r\n                    {\r\n                        key: \"delete\",\r\n                        label: <Space>\r\n                            <DeleteIcon />\r\n                            {!hideText && translate(\"buttons.delete\", \"Eliminar\")}\r\n                        </Space>,\r\n                        title: createButtonDisabledTitle(deleteData),\r\n                        disabled: deleteData?.can === false,\r\n                        onClick: () => setConfirmDelete(true),\r\n                        danger: true,\r\n                    }\r\n                ]\r\n            }}\r\n        >\r\n            <Button type=\"link\" icon={<MoreIcon />} />\r\n        </Dropdown>}\r\n        {confirmDelete && <DeleteButton\r\n            hideText\r\n            type=\"link\"\r\n            resource={resourceNameFromProps}\r\n            recordItemId={recordItemId} \r\n            onCancel={() => setConfirmDelete(false)} />}\r\n    </>\r\n}\r\n", "import React from \"react\";\r\nimport {\r\n  useDelete,\r\n  useTranslate,\r\n  useMutationMode,\r\n  useCan,\r\n  useResource,\r\n  pickNotDeprecated,\r\n} from \"@refinedev/core\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Button, Popconfirm } from \"antd\";\r\nimport type { DeleteButtonProps as DeleteButtonPropsAntd } from \"@refinedev/antd\";\r\n\r\n\r\n\r\ninterface DeleteButtonProps extends DeleteButtonPropsAntd {\r\n  onCancel?: () => void;\r\n}\r\n\r\n/**\r\n * `<DeleteButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} and {@link https://ant.design/components/button/ `<Popconfirm>`} components.\r\n * When you try to delete something, a pop-up shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/buttons/delete-button} for more details.\r\n */\r\nexport default function DeleteButton({\r\n  resource: resourceNameFromProps,\r\n  recordItemId,\r\n  onSuccess,\r\n  onCancel,\r\n  mutationMode: mutationModeProp,\r\n  children,\r\n  successNotification,\r\n  errorNotification,\r\n  hideText = false,\r\n  accessControl,\r\n  meta,\r\n  dataProviderName,\r\n  confirmTitle,\r\n  confirmOkText,\r\n  confirmCancelText,\r\n  invalidates,\r\n  ...rest\r\n}: DeleteButtonProps) {\r\n  const accessControlEnabled = accessControl?.enabled ?? true;\r\n  const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\r\n  const translate = useTranslate()\r\n\r\n  const { id, resource } = useResource(\r\n    resourceNameFromProps\r\n  )\r\n\r\n  console.log(\"resource\", resource, id)\r\n\r\n  const { mutationMode: mutationModeContext } = useMutationMode();\r\n\r\n  const mutationMode = mutationModeProp ?? mutationModeContext;\r\n\r\n  const { mutate, isLoading, variables } = useDelete();\r\n\r\n  const { data } = useCan({\r\n    resource: resource?.name,\r\n    action: \"delete\",\r\n    params: { id: recordItemId ?? id, resource },\r\n    queryOptions: {\r\n      enabled: accessControlEnabled,\r\n    },\r\n  });\r\n\r\n  if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Popconfirm\r\n      key=\"delete\"\r\n      okText={confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\r\n      cancelText={confirmCancelText ?? translate(\"buttons.cancel\", \"Cancel\")}\r\n      okType=\"danger\"\r\n      title={confirmTitle ?? translate(\"buttons.confirm\", \"Are you sure?\")}\r\n      okButtonProps={{ disabled: isLoading }}\r\n      onCancel={onCancel}\r\n      open\r\n      onConfirm={(): void => {\r\n        if ((recordItemId ?? id) && resource?.name) {\r\n          mutate(\r\n            {\r\n              id: recordItemId ?? id ?? \"\",\r\n              resource: resource?.name,\r\n              mutationMode,\r\n              successNotification,\r\n              errorNotification,\r\n              meta: meta,\r\n              dataProviderName,\r\n              invalidates,\r\n            },\r\n            {\r\n              onSuccess: (value) => {\r\n                onSuccess && onSuccess(value);\r\n              },\r\n            }\r\n          );\r\n        }\r\n      }}\r\n      disabled={\r\n        typeof rest?.disabled !== \"undefined\"\r\n          ? rest.disabled\r\n          : data?.can === false\r\n      }\r\n    >\r\n      <Button\r\n        danger\r\n        loading={(recordItemId ?? id) === variables?.id && isLoading}\r\n        icon={<DeleteOutlined />}\r\n        disabled={data?.can === false}\r\n        {...rest}\r\n      >\r\n        {!hideText && (children ?? translate(\"buttons.delete\", \"Delete\"))}\r\n      </Button>\r\n    </Popconfirm>\r\n  )\r\n}\r\n", "import { useForm } from \"@refinedev/antd\"\r\nimport AppForm from \"~/components/apps/AppForm\"\r\nimport CreateDrawer from \"~/components/crud/CreateDrawer\"\r\n\r\n\r\n\r\nexport default function CreateApp() {\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"create\",\r\n    })\r\n\r\n    return <div>\r\n        <CreateDrawer\r\n            open={true}\r\n            title=\"Crear aplicaci\u00F3n\"\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <AppForm formProps={formProps}  />\r\n        </CreateDrawer>\r\n    </div>\r\n}", "import { Form } from \"antd\";\r\n\r\n\r\n\r\nexport default function AppForm ({\r\n    formProps\r\n} : {\r\n    formProps: any,\r\n}) {\r\n\r\n    return <Form\r\n        {...formProps}\r\n        layout=\"vertical\"\r\n    >\r\n        \r\n    </Form>\r\n} \r\n", "\r\nimport { useNavigate } from \"@remix-run/react\"\r\nimport { Drawer, Space, Spin } from \"antd\"\r\nimport { useEffect, useState } from \"react\"\r\nimport SaveButton from \"../buttons/SaveButton\"\r\n\r\n\r\nexport default function CreateDrawer ({\r\n    children,\r\n    back=true,\r\n    title,\r\n    size = \"large\",\r\n    open,\r\n    onClose,\r\n    saveButtonProps,\r\n}: {\r\n    children: React.ReactNode\r\n    open: boolean\r\n    back?: boolean\r\n    title?: string\r\n    size?: \"default\" | \"large\" | \"extraLarge\" | \"full\"\r\n    onClose?: () => void,\r\n    saveButtonProps?: any\r\n}) {\r\n    const [_open, setOpen] = useState(false)\r\n    useEffect(() => {\r\n        setOpen(open)\r\n    }, [open])\r\n    const navigate = useNavigate()\r\n\r\n    const maxWidth = size === \"default\" ? '40rem' : size === \"large\" ? '60rem' : size === \"extraLarge\" ? '80rem' : '100%'\r\n\r\n    return <Drawer\r\n        title={title}\r\n        placement=\"right\"\r\n        width={'100%'}\r\n        contentWrapperStyle={{ maxWidth }}\r\n        mask={false}\r\n        open={_open}\r\n        destroyOnClose\r\n        onClose={() => {\r\n            onClose?.()\r\n            if (back) {\r\n                navigate(-1)\r\n            }\r\n        }}\r\n        footer={<Space>\r\n            <SaveButton\r\n                loading={saveButtonProps?.disabled}\r\n                {...saveButtonProps} />\r\n        </Space>}\r\n    >\r\n        <Spin spinning={saveButtonProps?.disabled} >\r\n        {children}\r\n        </Spin>\r\n    </Drawer>\r\n}", "import React from \"react\"\r\nimport { useTranslate } from \"@refinedev/core\"\r\nimport { Button } from \"antd\"\r\nimport type { SaveButtonProps } from \"@refinedev/antd\"\r\nimport { SaveIcon } from \"../icons\";\r\n\r\n/**\r\n * `<SaveButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\r\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/buttons/save-button} for more details.\r\n */\r\nexport default function SaveButton({\r\n  hideText = false,\r\n  children,\r\n  ...rest\r\n}: SaveButtonProps) {\r\n  const translate = useTranslate();\r\n\r\n  return (\r\n    <Button type=\"primary\" icon={<SaveIcon />} {...rest}>\r\n      {!hideText && (children ?? translate(\"buttons.save\", \"Guardar\"))}\r\n    </Button>\r\n  );\r\n};\r\n", "import { LoaderArgs, redirect } from \"@remix-run/node\";\r\nimport { Outlet } from \"@remix-run/react\";\r\n\r\nimport { authProvider } from \"~/authProvider\";\r\n\r\nexport default function AuthLayout() {\r\n    // no layout is applied for the auth routes\r\n    return <Outlet />;\r\n}\r\n\r\n/**\r\n * If the current session is authenticated, we're redirecting the user to the home page.\r\n * Alternatively, we could also use the `Authenticated` component inside the `AuthLayout` to handle the redirect.\r\n * But, server-side redirects are more performant.\r\n */\r\nexport async function loader({ request }: LoaderArgs) {\r\n    const { authenticated, redirectTo } = await authProvider.check(request);\r\n\r\n    if (authenticated) {\r\n        throw redirect(redirectTo ?? \"/\");\r\n    }\r\n\r\n    return {};\r\n}\r\n", "import Login from \"~/components/auth/Login\";\r\n\r\nexport default function LoginPage() {\r\n    return <Login />\r\n}", "import {\r\n  LoginPageProps,\r\n  LoginFormTypes,\r\n  useLink,\r\n  useRouterType,\r\n  useActiveAuthProvider,\r\n  useLogin,\r\n  useTranslate,\r\n  useRouterContext,\r\n} from \"@refinedev/core\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Layout,\r\n  Card,\r\n  Typography,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  CardProps,\r\n  LayoutProps,\r\n  Divider,\r\n  FormProps,\r\n  theme,\r\n  Grid,\r\n} from \"antd\";\r\nimport ThemedTitleV2 from \"../Layout/Title\";\r\n\r\nconst { useToken } = theme\r\n\r\ntype LoginProps = LoginPageProps<LayoutProps, CardProps, FormProps>;\r\n/**\r\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#login} for more details.\r\n */\r\nexport default function Login ({\r\n  providers,\r\n  registerLink,\r\n  forgotPasswordLink,\r\n  rememberMe,\r\n  contentProps,\r\n  wrapperProps,\r\n  renderContent,\r\n  formProps,\r\n  title,\r\n}: LoginProps){\r\n  const { token } = useToken();\r\n  const [form] = Form.useForm<LoginFormTypes>();\r\n  const translate = useTranslate();\r\n  const routerType = useRouterType();\r\n  const Link = useLink();\r\n  const { Link: LegacyLink } = useRouterContext();\r\n\r\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\r\n\r\n  const authProvider = useActiveAuthProvider();\r\n  const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\r\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\r\n  });\r\n\r\n  const screens = Grid.useBreakpoint()\r\n\r\n  const PageTitle =\r\n    title === false ? null : (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"32px\",\r\n          fontSize: \"20px\",\r\n        }}\r\n      >\r\n        {title ?? <ThemedTitleV2 collapsed={false} />}\r\n      </div>\r\n    );\r\n\r\n  const CardTitle = (\r\n    <Typography.Title\r\n      level={3}\r\n      style={{\r\n        color: token.colorPrimaryTextHover,\r\n      }}\r\n    >\r\n      {translate(\"pages.login.title\", \"Iniciar sesi\u00F3n\")}\r\n    </Typography.Title>\r\n  );\r\n\r\n  const renderProviders = () => {\r\n    if (providers && providers.length > 0) {\r\n      return (\r\n        <>\r\n          {providers.map((provider) => {\r\n            return (\r\n              <Button\r\n                key={provider.name}\r\n                type=\"default\"\r\n                block\r\n                icon={provider.icon}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  width: \"100%\",\r\n                  marginBottom: \"8px\",\r\n                }}\r\n                onClick={() =>\r\n                  login({\r\n                    providerName: provider.name,\r\n                  })\r\n                }\r\n              >\r\n                {provider.label}\r\n              </Button>\r\n            );\r\n          })}\r\n          <Divider>\r\n            <Typography.Text\r\n              style={{\r\n                color: token.colorTextLabel,\r\n              }}\r\n            >\r\n              {translate(\"pages.login.divider\", \"or\")}\r\n            </Typography.Text>\r\n          </Divider>\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const CardContent = (\r\n    <Card\r\n      title={CardTitle}\r\n      style={{\r\n        backgroundColor: token.colorBgElevated,\r\n        maxWidth: \"400px\",\r\n        margin: \"0 auto\",\r\n      }}\r\n      {...(contentProps ?? {})}\r\n    >\r\n      {renderProviders()}\r\n      <Form<LoginFormTypes>\r\n        size=\"large\"\r\n        layout=\"vertical\"\r\n        form={form}\r\n        onFinish={(values) => login(values)}\r\n        requiredMark={false}\r\n        initialValues={{\r\n          remember: false,\r\n        }}\r\n        {...formProps}\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label={translate(\"pages.login.fields.email\", \"Correo electr\u00F3nico\")}\r\n          rules={[\r\n            { required: true },\r\n            {\r\n              type: \"email\",\r\n              message: translate(\r\n                \"pages.login.errors.validEmail\",\r\n                \"El correo electr\u00F3nico no es v\u00E1lido\"\r\n              ),\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder={translate(\"pages.login.fields.email\", \"Correo electr\u00F3nico\")}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label={translate(\"pages.login.fields.password\", \"Contrase\u00F1a\")}\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Input type=\"password\" placeholder=\"\u25CF\u25CF\u25CF\u25CF\u25CF\u25CF\u25CF\u25CF\" />\r\n        </Form.Item>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"24px\",\r\n          }}\r\n        >\r\n          {rememberMe ?? (\r\n            <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n              <Checkbox\r\n                style={{\r\n                  fontSize: \"12px\",\r\n                }}\r\n              >\r\n                {translate(\"pages.login.buttons.rememberMe\", \"Recuerdame\")}\r\n              </Checkbox>\r\n            </Form.Item>\r\n          )}\r\n          {forgotPasswordLink ?? (\r\n            <ActiveLink\r\n              style={{\r\n                color: token.colorPrimaryTextHover,\r\n                fontSize: \"12px\",\r\n                marginLeft: \"auto\",\r\n              }}\r\n              to=\"/forgot-password\"\r\n            >\r\n              {translate(\r\n                \"pages.login.buttons.forgotPassword\",\r\n                \"\u00BFOlvidaste tu contrase\u00F1a?\"\r\n              )}\r\n            </ActiveLink>\r\n          )}\r\n        </div>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            loading={isLoading}\r\n            block\r\n          >\r\n            {translate(\"pages.login.signin\", \"Iniciar sesi\u00F3n\")}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div style={{ marginTop: 8 }}>\r\n        {registerLink ?? (\r\n          <Typography.Text style={{ fontSize: 12 }}>\r\n            {translate(\r\n              \"pages.login.buttons.noAccount\",\r\n              \"\u00BFNo tienes una cuenta?\"\r\n            )}{\" \"}\r\n            <ActiveLink\r\n              to=\"/register\"\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                color: token.colorPrimaryTextHover,\r\n              }}\r\n            >\r\n              {translate(\"pages.login.signup\", \"Registrate\")}\r\n            </ActiveLink>\r\n          </Typography.Text>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n\r\n  return <Layout>\r\n      <Row\r\n        justify=\"center\"\r\n        align=\"middle\"\r\n        style={{\r\n          height: \"100vh\",\r\n        }}\r\n      >\r\n        <Col style={{\r\n          padding: \"0 24px\",\r\n          minWidth: \"30%\",\r\n        }}>\r\n          {renderContent ? (\r\n            renderContent(CardContent, PageTitle)\r\n          ) : (\r\n            <>\r\n              {PageTitle}\r\n              {CardContent}\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col flex='auto'\r\n          style={{\r\n            display: screens.xs ? \"none\" : \"block\",\r\n            height: \"100vh\",\r\n            backgroundColor: token.colorPrimaryActive,\r\n          }}\r\n        >\r\n        </Col>\r\n      </Row>\r\n    </Layout>\r\n}\r\n", "import Register from \"~/components/auth/Register\";\r\n\r\nexport default function LoginPage() {\r\n    return <Register />\r\n}", "import React from \"react\";\nimport {\n  RegisterPageProps,\n  RegisterFormTypes,\n  useRouterType,\n  useLink,\n  useActiveAuthProvider,\n  useTranslate,\n  useRouterContext,\n  useRegister,\n} from \"@refinedev/core\";\nimport { ThemedTitleV2 as ThemedTitle } from \"@refinedev/antd\";\nimport {\n  Row,\n  Col,\n  Layout,\n  Card,\n  Typography,\n  Form,\n  Input,\n  Button,\n  LayoutProps,\n  CardProps,\n  FormProps,\n  Divider,\n  theme,\n  Grid,\n} from \"antd\";\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ntype RegisterProps = RegisterPageProps<LayoutProps, CardProps, FormProps>;\n/**\n * **refine** has register page form which is served on `/register` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#register} for more details.\n */\nexport default function RegisterPage ({\n  providers,\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title,\n}: RegisterProps) {\n  const { token } = useToken();\n  const [form] = Form.useForm<RegisterFormTypes>();\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: register, isLoading } = useRegister<RegisterFormTypes>()\n\n  const screens = Grid.useBreakpoint()\n\n  const PageTitle =\n    title === false ? null : (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginBottom: \"32px\",\n          fontSize: \"20px\",\n        }}\n      >\n        {title ?? <ThemedTitle collapsed={false} />}\n      </div>\n    );\n\n  const CardTitle = (\n    <Title\n      level={3}\n      style={{\n        color: token.colorPrimaryTextHover,\n      }}\n    >\n      {translate(\"pages.register.title\", \"Crea una cuenta\")}\n    </Title>\n  );\n\n  const renderProviders = () => {\n    if (providers && providers.length > 0) {\n      return (\n        <>\n          {providers.map((provider) => {\n            return (\n              <Button\n                key={provider.name}\n                type=\"default\"\n                block\n                icon={provider.icon}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  width: \"100%\",\n                  marginBottom: \"8px\",\n                }}\n                onClick={() =>\n                  register({\n                    providerName: provider.name,\n                  })\n                }\n              >\n                {provider.label}\n              </Button>\n            );\n          })}\n          <Divider>\n            <Text\n              style={{\n                color: token.colorTextLabel,\n              }}\n            >\n              {translate(\"pages.login.divider\", \"o\")}\n            </Text>\n          </Divider>\n        </>\n      );\n    }\n    return null;\n  };\n  console.log(register)\n  const CardContent = (\n    <Card\n      title={CardTitle}\n      style={{\n        backgroundColor: token.colorBgElevated,\n        maxWidth: \"400px\",\n        margin: \"0 auto\",\n      }}\n      {...(contentProps ?? {})}\n    >\n      {renderProviders()}\n      <Form<RegisterFormTypes>\n        layout=\"vertical\"\n        form={form}\n        onFinish={(values) => {\n          const data = {\n            ...values,\n            username: values.email,\n          }\n          register(data, {\n            onSuccess: (data) => {\n              console.log(data)\n            }\n          })\n        }}\n        requiredMark={false}\n        {...formProps}\n      >\n        <Form.Item\n          name=\"email\"\n          label={translate(\"pages.register.email\", \"Correo electr\u00F3nico\")}\n          rules={[\n            { required: true },\n            {\n              type: \"email\",\n              message: translate(\n                \"pages.register.errors.validEmail\",\n                \"El correo electr\u00F3nico no es v\u00E1lido\"\n              ),\n            },\n          ]}\n        >\n          <Input\n            size=\"large\"\n            placeholder={translate(\"pages.register.fields.email\", \"Correo electr\u00F3nico\")}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label={translate(\"pages.register.fields.password\", \"Contrase\u00F1a\")}\n          rules={[{ required: true }]}\n        >\n          <Input type=\"password\" placeholder=\"\u25CF\u25CF\u25CF\u25CF\u25CF\u25CF\u25CF\u25CF\" size=\"large\" />\n        </Form.Item>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: \"24px\",\n          }}\n        >\n          {loginLink ?? (\n            <Text\n              style={{\n                fontSize: 12,\n                marginLeft: \"auto\",\n              }}\n            >\n              {translate(\"pages.login.buttons.haveAccount\", \"\u00BFTienes una cuenta?\")}{\" \"}\n              <ActiveLink\n                style={{\n                  fontWeight: \"bold\",\n                  color: token.colorPrimaryTextHover,\n                }}\n                to=\"/login\"\n              >\n                {translate(\"pages.login.signin\", \"Iniciar sesi\u00F3n\")}\n              </ActiveLink>\n            </Text>\n          )}\n        </div>\n\n        <Form.Item\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            htmlType=\"submit\"\n            loading={isLoading}\n            block\n          >\n            {translate(\"pages.register.buttons.submit\", \"Registrate\")}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Card>\n  );\n\n  return (\n    <Layout {...(wrapperProps ?? {})}>\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{\n          height: \"100vh\",\n        }}\n      >\n        <Col style={{\n          padding: \"0 24px\",\n          minWidth: \"30%\",\n        }}>\n          {renderContent ? (\n            renderContent(CardContent, PageTitle)\n          ) : (\n            <>\n              {PageTitle}\n              {CardContent}\n            </>\n          )}\n        </Col>\n        <Col flex='auto'\n          style={{\n            display: screens.xs ? \"none\" : \"block\",\n            height: \"100vh\",\n            backgroundColor: token.colorPrimaryActive,\n          }}\n        >\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n", "\r\nimport type { LoaderArgs } from \"@remix-run/node\"\r\nimport Layout from \"~/components/Layout\"\r\nimport { authProvider } from \"~/authProvider\"\r\nimport { redirect } from \"@remix-run/node\"\r\nimport { Outlet } from \"@remix-run/react\"\r\n\r\n\r\nexport default function BaseLayout() {\r\n    return <Layout>\r\n        <Outlet />\r\n    </Layout>\r\n}\r\n\r\n/**\r\n * We're checking if the current session is authenticated.\r\n * If not, we're redirecting the user to the login page.\r\n * This is applied for all routes that are nested under this layout (_protected).\r\n */\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const { authenticated, redirectTo } = await authProvider.check(request);\r\n\r\n  if (!authenticated) {\r\n    throw redirect(redirectTo ?? \"/login\");\r\n  }\r\n\r\n  return {};\r\n}\r\n", "import { ErrorComponent } from \"@refinedev/antd\";\r\n\r\n/**\r\n * We're using a splat route to catch all routes that don't match any other route and render the `ErrorComponent` as 404 page.\r\n */\r\nexport default function Index() {\r\n    return <ErrorComponent />;\r\n}", "\r\nimport CalendarComponents from '~/components/calendar/CalendarComponents'\r\nimport { dayjsLocalizer, View } from 'react-big-calendar'\r\nimport EventCreate from '~/components/calendar/Create'\r\nimport { useSearchParams } from '@remix-run/react'\r\nimport calendarStyle from '~/styles/calendar.css'\r\nimport { Calendar } from 'react-big-calendar'\r\nimport { useTable } from '@refinedev/antd'\r\nimport { useMemo, useState } from 'react'\r\nimport dayjs from 'dayjs'\r\nimport { useStylesCalendar } from '~/components/calendar/styles'\r\nimport { AppointmentIcon, ReminderIcon, TaskIcon } from '~/components/icons'\r\nimport { Space } from 'antd'\r\n\r\n\r\nconst localizer = dayjsLocalizer(dayjs)\r\n\r\nconst resourceMap = [\r\n    { resourceId: 'appt', resourceTitle: <Space><AppointmentIcon />Citas</Space>},\r\n    { resourceId: 'task', resourceTitle: <Space><TaskIcon />Tareas</Space> },\r\n    { resourceId: 'rem', resourceTitle: <Space><ReminderIcon />Recordatorios</Space> },\r\n]\r\n\r\nexport default function CalendarPage() {\r\n\r\n    const { tableQueryResult: queryResult } = useTable({\r\n        syncWithLocation: false\r\n    })\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n    const { styles, cx } = useStylesCalendar()\r\n\r\n    // data for create event\r\n    const [isCreateOpen, setIsCreateOpen] = useState(false)\r\n    const [initialValues, setInitialValues] = useState({})\r\n\r\n    const { components } = useMemo(() => ({\r\n        components: CalendarComponents\r\n    }), [])\r\n\r\n    const events = useMemo(() => {\r\n        return queryResult?.data?.data?.map((event: any) => {\r\n            const start = dayjs(`${event.date} ${event.time}`)\r\n            const end = start.add(event.duration, 'minute')\r\n            let icon = <AppointmentIcon />\r\n            if (event.type === 'task') {\r\n                icon = <TaskIcon />\r\n            } else if (event.type === 'rem') {\r\n                icon = <ReminderIcon />\r\n            }\r\n\r\n            return {\r\n                id: event.id,\r\n                title: event.title,\r\n                start: start.toDate(),\r\n                end: end.toDate(),\r\n                resourceId: !!event.type? event.type : 'appt',\r\n                icon,\r\n                data: event\r\n            }\r\n        })\r\n    }, [queryResult])\r\n\r\n    return <div>\r\n        <Calendar\r\n            className={cx(styles.calendar)}\r\n            events={events}\r\n            components={components}\r\n            localizer={localizer}\r\n            style={{ height: \"calc(100vh - 128px)\" }}\r\n            defaultView={searchParams.get('view') as View || 'week'}\r\n            onSelectSlot={(slotInfo, ...props) => {\r\n                setIsCreateOpen(true)\r\n                setInitialValues({\r\n                    date: dayjs(slotInfo.start).format('YYYY-MM-DD'),\r\n                    time: dayjs(slotInfo.start).format('HH:mm:ss.SSS'),\r\n                    duration: dayjs(slotInfo.end).diff(dayjs(slotInfo.start), 'minute'),\r\n                    type: !!slotInfo.resourceId? slotInfo.resourceId : 'appt',\r\n                })\r\n            }}\r\n            resourceIdAccessor=\"resourceId\"\r\n            resources={searchParams.get('view') !== 'week'? resourceMap: undefined}\r\n            resourceTitleAccessor=\"resourceTitle\"\r\n            selectable\r\n            popup={false}\r\n            onView={(view) => {\r\n                console.log(view)\r\n            }}\r\n        />\r\n        {isCreateOpen &&\r\n            <EventCreate \r\n                open={isCreateOpen}\r\n                onClose={() => setIsCreateOpen(false)}\r\n                initialValues={initialValues}\r\n            />\r\n        }\r\n    </div>\r\n}\r\n\r\nexport function links () {\r\n    return [{ rel: 'stylesheet', href: calendarStyle }]\r\n}\r\n\r\n\r\n", "import { Button, Col, Popover, Row, Segmented, Space, Tooltip, Typography } from 'antd'\r\nimport dayjs from 'dayjs'\r\nimport { CloseIcon, DeleteIcon, EditIcon, NextIcon, PrevIcon, TodayIcon } from '../icons'\r\nimport { Navigate } from \"react-big-calendar\"\r\nimport { useSearchParams } from '@remix-run/react'\r\nimport { useState } from 'react'\r\n\r\nexport const CalendarComponents = {\r\n    toolbar({ label, localizer, onNavigate, onView, view, views }: any){\r\n        const { messages } = localizer\r\n        const [ searchParams, setSearchParams ] = useSearchParams()\r\n        return <Row justify=\"space-between\" align=\"middle\" style={{paddingBottom: '1rem'}}>\r\n            <Col>\r\n                <Space.Compact>\r\n                    <Button icon={<TodayIcon />} onClick={() => onNavigate(Navigate.TODAY)} title={messages.today}/>\r\n                    <Button icon={<PrevIcon />} onClick={() => onNavigate(Navigate.PREVIOUS)}  title={messages.next}/>\r\n                    <Button icon={<NextIcon />} onClick={() => onNavigate(Navigate.NEXT)} title={messages.previous}/>\r\n                </Space.Compact>\r\n    \r\n            </Col>\r\n            <Col>\r\n                <Typography.Text>{label}</Typography.Text>\r\n            </Col>\r\n            <Col>\r\n                <Segmented\r\n                    value={view}\r\n                    onChange={(value: any) => {\r\n                        onView(value)\r\n                        searchParams.set('view', value)\r\n                        setSearchParams(searchParams)\r\n                    }}\r\n                    options={(views as []).map((view) => ({\r\n                        value: view,\r\n                        label: view,\r\n                    }))}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    },\r\n    month: {\r\n        header ({ label, date }: any) {\r\n            return <Tooltip title={dayjs(date).format('dddd')}>\r\n                <Typography.Title level={5}>{label}</Typography.Title>\r\n            </Tooltip>\r\n        },\r\n        dateHeader ({ label, date, onDrillDown }: any) {\r\n            return <Tooltip title={dayjs(date).format('dddd, LL')}>\r\n                <Button type='text'\r\n                    onClick={onDrillDown}\r\n                >\r\n                    {label}\r\n                </Button>\r\n            </Tooltip> \r\n        }\r\n    },\r\n    event: ({ event }: any) => {\r\n        const [open, setOpen] = useState(false)\r\n        return <Popover title={<Row justify=\"end\">\r\n            <Col flex='auto'>\r\n                <Space.Compact>\r\n                    <Button type='link' size='small' icon={<EditIcon />}/>\r\n                    <Button type='link' size='small' icon={<DeleteIcon />} danger/>\r\n                </Space.Compact>\r\n            </Col>\r\n            <Col>\r\n                <Button \r\n                    type=\"text\" \r\n                    size=\"small\" \r\n                    icon={<CloseIcon />}\r\n                    onClick={() => setOpen(false)}\r\n                />\r\n            </Col>\r\n        </Row>}\r\n            open={open}\r\n            content={<div>\r\n                \r\n            </div>}\r\n        >\r\n            <div\r\n                onClick={() => setOpen(true)}\r\n                style={{\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                {event.title}\r\n            </div>\r\n        </Popover>\r\n    },\r\n}\r\n\r\nexport default CalendarComponents\r\n", "import { useForm } from \"@refinedev/antd\"\r\nimport CreateDrawer from \"../crud/CreateDrawer\"\r\nimport EventForm from \"./Form\"\r\n\r\n\r\n\r\n\r\nexport default function EventCreate ({\r\n    open,\r\n    onClose,\r\n    initialValues\r\n}: {\r\n    open: boolean,\r\n    onClose: () => void,\r\n    initialValues: any  \r\n}) {\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"create\",\r\n    })\r\n    return <div>\r\n        <CreateDrawer\r\n            open={open}\r\n            back={false}\r\n            onClose={onClose}\r\n            size=\"default\"\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <EventForm \r\n                {...formProps} \r\n                initialValues={initialValues}\r\n            />\r\n        </CreateDrawer>\r\n    </div>\r\n}", "import { AutoComplete, Collapse, Form, Input, Segmented, Space, Tag } from \"antd\"\r\nimport type { FormProps } from \"antd\"\r\nimport DatePicker from \"../controls/DatePicker\"\r\nimport TimePicker from \"../controls/TimePicker\"\r\nimport SelectDoctor from \"../doctors/controls/SelectDoctor\";\r\nimport SelectPatient from \"../patients/controls/SelectPatient\";\r\nimport SelectTreatment from \"../treatments/controls/SelectTreatment\";\r\nimport RichEditor from \"../controls/RichEditor\";\r\n\r\n\r\nexport default function EventForm({\r\n    ...props\r\n}: FormProps) {\r\n\r\n    console.log(props)\r\n    return <Form \r\n        layout=\"vertical\"\r\n        {...props}\r\n    >\r\n        <Form.Item \r\n            name=\"title\"\r\n            rules={[{ required: true, message: 'Por favor ingrese un t\u00EDtulo' }]}\r\n        >\r\n            <Input size=\"large\" placeholder=\"Agregar un titulo\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n            name=\"type\"\r\n            rules={[{ required: true, message: 'Por favor seleccione un tipo' }]}\r\n        >\r\n            <Segmented\r\n                block\r\n                size=\"large\"\r\n                options={[\r\n                    { label: 'Cita', value: 'appt' },\r\n                    { label: 'Tarea', value: 'task' },\r\n                    { label: 'Recordatorio', value: 'rem'}\r\n                ]}\r\n            />\r\n        </Form.Item>\r\n        <Form.Item label=\"Horario\" required>\r\n            <Space.Compact block>\r\n                <Form.Item\r\n                    name=\"date\"\r\n                    noStyle\r\n                    rules={[{ required: true, message: 'Por favor seleccione una fecha' }]}\r\n                >\r\n                    <DatePicker style={{ width: '50%' }} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"time\"\r\n                    noStyle\r\n                    rules={[{ required: true, message: 'Por favor seleccione una hora' }]}\r\n                >\r\n                    <TimePicker style={{ width: '30%' }} />\r\n                </Form.Item>\r\n            \r\n                <Form.Item\r\n                    name=\"duration\"\r\n                    rules={[{ required: true, message: 'Por favor seleccione una duraci\u00F3n' }]}\r\n                    noStyle\r\n                >\r\n                    <AutoComplete\r\n                        placeholder=\"Duraci\u00F3n\"\r\n                        style={{ width: '20%' }}\r\n                        tagRender={({ label }) => <Tag>{label}</Tag>}\r\n                        options={[\r\n                            { label: '15 minutos', value: '15' },\r\n                            { label: '30 minutos', value: '30' },\r\n                            { label: '45 minutos', value: '45' },\r\n                            { label: '1 hora', value: '60' },\r\n                            { label: '1 hora 15 minutos', value: '75' },\r\n                            { label: '1 hora 30 minutos', value: '90' },\r\n                            { label: '1 hora 45 minutos', value: '105' },\r\n                            { label: '2 horas', value: '120' },\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n            </Space.Compact>\r\n        </Form.Item>\r\n        <Collapse defaultActiveKey={['1']} ghost>\r\n            <Collapse.Panel header=\"Relacionado con\" key=\"1\">\r\n                <Space.Compact block>\r\n                    <Form.Item\r\n                        name=\"doctor\"\r\n                        label=\"Doctor\"\r\n                        style={{ width: '50%' }}\r\n                    >\r\n                        <SelectDoctor />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"patient\"\r\n                        label=\"Paciente\"\r\n                        style={{ width: '50%' }}\r\n                    >\r\n                        <SelectPatient />\r\n                    </Form.Item>\r\n                </Space.Compact>\r\n                <Form.Item\r\n                    name=\"treatment\"\r\n                    label=\"Tratamiento\"   \r\n                >\r\n                    <SelectTreatment />\r\n                </Form.Item>\r\n            </Collapse.Panel>\r\n        </Collapse>\r\n        <Form.Item\r\n            name=\"description\"\r\n            label=\"Descripci\u00F3n\"\r\n        >\r\n            <RichEditor />\r\n        </Form.Item>\r\n    </Form>\r\n}\r\n", "import { DatePicker as DatePickerAnt } from \"antd\"\r\nimport type { DatePickerProps } from \"antd\"\r\nimport dayjs from \"dayjs\"\r\n\r\n\r\n\r\nexport default function DatePicker({\r\n    value,\r\n    onChange,\r\n    style,\r\n    ...props\r\n}: {\r\n    value?: string | undefined\r\n    onChange?: (value: string | undefined) => void\r\n    style?: React.CSSProperties\r\n}) {\r\n    return <DatePickerAnt\r\n        {...props}\r\n        showTime={false} \r\n        value={value ? dayjs(value) : undefined}\r\n        format=\"dddd, DD MMMM YYYY\"\r\n        onChange={(value) => onChange?.(value ? value.format('YYYY-MM-DD') : undefined)}\r\n    />\r\n}", "\r\nimport { TimePicker as TimePickerAnt } from 'antd'\r\nimport dayjs from 'dayjs'\r\n\r\n/*\r\n TimePiker return text with custom format\r\n */\r\nexport default function TimePicker({\r\n    value,\r\n    onChange,\r\n    style,\r\n    ...props\r\n}: {\r\n    date?: string | undefined\r\n    value?: string | undefined\r\n    onChange?: (value: string | undefined) => void\r\n    style?: React.CSSProperties\r\n}) {\r\n    const format = 'HH:mm:ss.SSS'\r\n    return <TimePickerAnt\r\n        {...props}\r\n        value={value ? dayjs(value, [format]) : undefined}\r\n        format=\"hh:mm a\"\r\n        onChange={(value) =>{\r\n            onChange?.(value ? value.format(format): undefined)\r\n        }}\r\n    />\r\n}", "import { Select } from \"antd\"\r\nimport type { SelectProps } from \"antd\"\r\nimport { useSelect } from \"@refinedev/antd\"\r\n\r\n\r\n\r\n/*\r\ncontrol Antd Select component\r\n*/\r\nexport default function SelectDoctor({\r\n    ...props\r\n}: SelectProps) {\r\n    \r\n    const { selectProps: doctorSelectProps, queryResult,  } = useSelect({\r\n        resource: \"dc-doctors\",\r\n        debounce: 500,\r\n        pagination: {\r\n            mode: \"server\"\r\n        },\r\n        onSearch: (query) => [\r\n            {\r\n                operator: \"or\",\r\n                value: [\r\n                    {\r\n                        field: \"firstName\",\r\n                        operator: \"contains\",\r\n                        value: query\r\n                    },\r\n                    {\r\n                        field: \"lastName\",\r\n                        operator: \"contains\",\r\n                        value: query\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    })\r\n    return <Select \r\n        {...props} \r\n        {...doctorSelectProps}\r\n        options={queryResult.data?.data.map((doctor: any) => ({\r\n            label: `${doctor.firstName} ${doctor.lastName}`,\r\n            value: doctor.id\r\n        }))}\r\n    />\r\n}\r\n", "\r\nimport { useSelect } from \"@refinedev/antd\";\r\nimport { Select } from \"antd\";\r\nimport type { SelectProps } from \"antd\"\r\n\r\n\r\n/*\r\n Select patient control using antd\r\n*/\r\nexport default function SelectPatient({\r\n    ...props\r\n}: SelectProps) {\r\n    \r\n    const { selectProps: patientSelectProps, queryResult,  } = useSelect({\r\n        resource: \"dc-patients\",\r\n        debounce: 500,\r\n        pagination: {\r\n            mode: \"server\"\r\n        },\r\n        onSearch: (query) => [\r\n            {\r\n                operator: \"or\",\r\n                value: [\r\n                    {\r\n                        field: \"firstName\",\r\n                        operator: \"contains\",\r\n                        value: query\r\n                    },\r\n                    {\r\n                        field: \"lastName\",\r\n                        operator: \"contains\",\r\n                        value: query\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    })\r\n    return <Select \r\n        {...props} \r\n        {...patientSelectProps}\r\n        options={queryResult.data?.data.map((patient: any) => ({\r\n            label: `${patient.firstName} ${patient.lastName}`,\r\n            value: patient.id\r\n        }))}\r\n    />\r\n}", "\r\nimport { Select } from \"antd\"\r\nimport type { SelectProps } from \"antd\"\r\nimport { useSelect } from \"@refinedev/antd\"\r\n\r\n\r\n/*\r\ncontrol select treatment implementing in antd\r\n*/\r\n\r\nexport default function SelectTreatment({\r\n    ...props\r\n}: SelectProps) {\r\n    \r\n    const { selectProps: treatmentSelectProps, queryResult,  } = useSelect({\r\n        resource: \"dc-treatments\",\r\n        debounce: 500,\r\n        pagination: {\r\n            mode: \"server\"\r\n        },\r\n        onSearch: (query) => [\r\n            {\r\n                operator: \"or\",\r\n                value: [\r\n                    {\r\n                        field: \"name\",\r\n                        operator: \"contains\",\r\n                        value: query\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    })\r\n    return <Select \r\n        {...props} \r\n        {...treatmentSelectProps}\r\n        options={queryResult.data?.data.map((treatment: any) => ({\r\n            label: `${treatment.name}`,\r\n            value: treatment.id\r\n        }))}\r\n    />\r\n}", "const customTheme = {\r\n    ltr: \"ltr\",\r\n    rtl: \"rtl\",\r\n    placeholder: \"editor-placeholder\",\r\n    paragraph: \"editor-paragraph\",\r\n    quote: \"editor-quote\",\r\n    heading: {\r\n      h1: \"editor-heading-h1\",\r\n      h2: \"editor-heading-h2\",\r\n      h3: \"editor-heading-h3\",\r\n      h4: \"editor-heading-h4\",\r\n      h5: \"editor-heading-h5\"\r\n    },\r\n    list: {\r\n      nested: {\r\n        listitem: \"editor-nested-listitem\"\r\n      },\r\n      ol: \"editor-list-ol\",\r\n      ul: \"editor-list-ul\",\r\n      listitem: \"editor-listitem\"\r\n    },\r\n    image: \"editor-image\",\r\n    link: \"editor-link\",\r\n    text: {\r\n      bold: \"editor-text-bold\",\r\n      italic: \"editor-text-italic\",\r\n      overflowed: \"editor-text-overflowed\",\r\n      hashtag: \"editor-text-hashtag\",\r\n      underline: \"editor-text-underline\",\r\n      strikethrough: \"editor-text-strikethrough\",\r\n      underlineStrikethrough: \"editor-text-underlineStrikethrough\",\r\n      code: \"editor-text-code\"\r\n    },\r\n    code: \"editor-code\",\r\n    codeHighlight: {\r\n      atrule: \"editor-tokenAttr\",\r\n      attr: \"editor-tokenAttr\",\r\n      boolean: \"editor-tokenProperty\",\r\n      builtin: \"editor-tokenSelector\",\r\n      cdata: \"editor-tokenComment\",\r\n      char: \"editor-tokenSelector\",\r\n      class: \"editor-tokenFunction\",\r\n      \"class-name\": \"editor-tokenFunction\",\r\n      comment: \"editor-tokenComment\",\r\n      constant: \"editor-tokenProperty\",\r\n      deleted: \"editor-tokenProperty\",\r\n      doctype: \"editor-tokenComment\",\r\n      entity: \"editor-tokenOperator\",\r\n      function: \"editor-tokenFunction\",\r\n      important: \"editor-tokenVariable\",\r\n      inserted: \"editor-tokenSelector\",\r\n      keyword: \"editor-tokenAttr\",\r\n      namespace: \"editor-tokenVariable\",\r\n      number: \"editor-tokenProperty\",\r\n      operator: \"editor-tokenOperator\",\r\n      prolog: \"editor-tokenComment\",\r\n      property: \"editor-tokenProperty\",\r\n      punctuation: \"editor-tokenPunctuation\",\r\n      regex: \"editor-tokenVariable\",\r\n      selector: \"editor-tokenSelector\",\r\n      string: \"editor-tokenSelector\",\r\n      symbol: \"editor-tokenProperty\",\r\n      tag: \"editor-tokenProperty\",\r\n      url: \"editor-tokenOperator\",\r\n      variable: \"editor-tokenVariable\"\r\n    }\r\n  };\r\n  \r\n  export default customTheme;\r\n  ", "import customTheme from \"./theme\";\r\nimport { LexicalComposer } from \"@lexical/react/LexicalComposer\";\r\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\";\r\nimport { ContentEditable } from \"@lexical/react/LexicalContentEditable\";\r\nimport { HistoryPlugin } from \"@lexical/react/LexicalHistoryPlugin\";\r\nimport {OnChangePlugin} from '@lexical/react/LexicalOnChangePlugin';\r\nimport LexicalErrorBoundary from \"@lexical/react/LexicalErrorBoundary\";\r\nimport ToolbarPlugin from \"./plugins/ToolbarPlugin\";\r\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\";\r\nimport { TableCellNode, TableNode, TableRowNode } from \"@lexical/table\";\r\nimport { ListItemNode, ListNode } from \"@lexical/list\";\r\nimport { CodeHighlightNode, CodeNode } from \"@lexical/code\";\r\nimport { AutoLinkNode, LinkNode } from \"@lexical/link\";\r\nimport { LinkPlugin } from \"@lexical/react/LexicalLinkPlugin\";\r\nimport { ListPlugin } from \"@lexical/react/LexicalListPlugin\";\r\nimport { MarkdownShortcutPlugin } from \"@lexical/react/LexicalMarkdownShortcutPlugin\";\r\nimport { TRANSFORMERS } from \"@lexical/markdown\";\r\nimport { $generateHtmlFromNodes } from '@lexical/html';\r\nimport { $rootTextContent } from '@lexical/text';\r\nimport ListMaxIndentLevelPlugin from \"./plugins/ListMaxIndentLevelPlugin\";\r\nimport AutoLinkPlugin from \"./plugins/AutoLinkPlugin\";\r\nimport { Typography } from \"antd\";\r\nimport { $getRoot, $getSelection } from \"lexical\";\r\n\r\nfunction Placeholder({\r\n  children,\r\n}: {\r\n  children?: React.ReactNode;\r\n}) {\r\n  return <Typography.Text \r\n    type=\"secondary\"\r\n    style={{\r\n      position: \"absolute\",\r\n      top: 0,\r\n      padding: \"0.5rem\",\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\",\r\n      userSelect: \"none\",\r\n      pointerEvents: \"none\",\r\n    }}\r\n  >\r\n    {children||\"Start typing here...\"}\r\n  </Typography.Text>\r\n}\r\n\r\nconst editorConfig: any = {\r\n  // The editor theme\r\n  theme: customTheme,\r\n  // Handling of errors during update\r\n  onError(error: any) {\r\n    throw error;\r\n  },\r\n  // Any custom nodes go here\r\n  nodes: [\r\n    HeadingNode,\r\n    ListNode,\r\n    ListItemNode,\r\n    QuoteNode,\r\n    CodeNode,\r\n    CodeHighlightNode,\r\n    TableNode,\r\n    TableCellNode,\r\n    TableRowNode,\r\n    AutoLinkNode,\r\n    LinkNode\r\n  ]\r\n};\r\n\r\ntype valueProps ={\r\n  json: string;\r\n  text: string;\r\n  html: string;\r\n}\r\n\r\nexport default function RichEditor({\r\n    value,\r\n    onChange,\r\n}: {\r\n    value?: valueProps;\r\n    onChange?: (value: valueProps) => void;\r\n}) {\r\n  return (\r\n    <LexicalComposer initialConfig={{\r\n      ...editorConfig,\r\n      editorState: value?.json\r\n    }}>\r\n      <div>\r\n        <ToolbarPlugin />\r\n        <div style={{\r\n          position: \"relative\",\r\n        }}>\r\n          <RichTextPlugin\r\n            contentEditable={<ContentEditable style={{\r\n              padding: \"0.5rem\",\r\n              userSelect: \"text\",\r\n              whiteSpace: \"pre-wrap\",\r\n              wordBreak: \"break-word\",\r\n              outline: 0,\r\n              tabSize:1\r\n            }} />}\r\n            placeholder={<Placeholder />}\r\n            ErrorBoundary={LexicalErrorBoundary}\r\n          />\r\n          <OnChangePlugin onChange={(editorState: any, editor: any) => {\r\n            editorState.read(() => {\r\n              // Read the contents of the EditorState here.\r\n              const root = $getRoot()\r\n              const selection = $getSelection()\r\n              const json = JSON.stringify(editorState) \r\n              const text = $rootTextContent()\r\n              const html = $generateHtmlFromNodes(editor, null)\r\n              onChange?.({\r\n                json,\r\n                text,\r\n                html\r\n              })\r\n            });\r\n            //onChange?.()\r\n          }} />\r\n          <HistoryPlugin />\r\n          <ListPlugin />\r\n          <LinkPlugin />\r\n          <AutoLinkPlugin />\r\n          <ListMaxIndentLevelPlugin maxDepth={7} />\r\n          <MarkdownShortcutPlugin transformers={TRANSFORMERS} />\r\n        </div>\r\n      </div>\r\n    </LexicalComposer>\r\n  );\r\n}\r\n", "import { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport {\r\n  CAN_REDO_COMMAND,\r\n  CAN_UNDO_COMMAND,\r\n  REDO_COMMAND,\r\n  UNDO_COMMAND,\r\n  SELECTION_CHANGE_COMMAND,\r\n  FORMAT_TEXT_COMMAND,\r\n  FORMAT_ELEMENT_COMMAND,\r\n  $getSelection,\r\n  $isRangeSelection,\r\n  $createParagraphNode,\r\n  $getNodeByKey\r\n} from \"lexical\";\r\nimport { $isLinkNode, TOGGLE_LINK_COMMAND } from \"@lexical/link\";\r\nimport {\r\n  $isParentElementRTL,\r\n  $wrapNodes,\r\n  $isAtNodeEnd\r\n} from \"@lexical/selection\";\r\nimport { $getNearestNodeOfType, mergeRegister } from \"@lexical/utils\";\r\nimport {\r\n  INSERT_ORDERED_LIST_COMMAND,\r\n  INSERT_UNORDERED_LIST_COMMAND,\r\n  REMOVE_LIST_COMMAND,\r\n  $isListNode,\r\n  ListNode\r\n} from \"@lexical/list\";\r\nimport { createPortal } from \"react-dom\";\r\nimport {\r\n  $createHeadingNode,\r\n  $createQuoteNode,\r\n  $isHeadingNode\r\n} from \"@lexical/rich-text\";\r\nimport {\r\n  $createCodeNode,\r\n  $isCodeNode,\r\n  getDefaultCodeLanguage,\r\n  getCodeLanguages\r\n} from \"@lexical/code\";\r\nimport { Button, Divider, Dropdown, Space } from \"antd\";\r\nimport { BoldIcon, BulletedListIcon, H1Icon, H2Icon, ItalicIcon, LinkIcon, NumberedListIcon, ParagraphIcon, QuoteIcon, RedoIcon, StrikethroughIcon, UnderlineIcon, UndoIcon } from \"~/components/icons\";\r\n\r\nconst LowPriority = 1;\r\n\r\nconst supportedBlockTypes = new Set([\r\n  \"paragraph\",\r\n  \"quote\",\r\n  \"code\",\r\n  \"h1\",\r\n  \"h2\",\r\n  \"ul\",\r\n  \"ol\"\r\n]);\r\n\r\nconst blockTypeToBlockName: any = {\r\n  code: {\r\n    name: \"Code Block\"\r\n  },\r\n  h1: {\r\n    name: \"Large Heading\",\r\n    icon: <H1Icon />\r\n  },\r\n  h2: {\r\n    name: \"Medium Heading\",\r\n    icon: <H2Icon />\r\n  },\r\n  h3: {\r\n    name: \"Small Heading\"\r\n  },\r\n  h4: {\r\n    name: \"Tiny Heading\"\r\n  },\r\n  h5: {\r\n    name: \"Tiny Heading\"\r\n  },\r\n  ol: {\r\n    name: \"Numbered List\",\r\n    icon: <NumberedListIcon />\r\n  },\r\n  paragraph: {\r\n    name: \"Paragraph\",\r\n    icon: <ParagraphIcon />\r\n  },\r\n  quote: {\r\n    name: \"Quote\",\r\n    icon: <QuoteIcon />\r\n  },\r\n  ul: {\r\n    name: \"Bulleted List\",\r\n    icon: <BulletedListIcon />\r\n  }\r\n}\r\n\r\nfunction positionEditorElement(editor: any, rect: any) {\r\n  if (rect === null) {\r\n    editor.style.opacity = \"0\";\r\n    editor.style.top = \"-1000px\";\r\n    editor.style.left = \"-1000px\";\r\n  } else {\r\n    editor.style.opacity = \"1\";\r\n    editor.style.top = `${rect.top + rect.height + window.pageYOffset + 10}px`;\r\n    editor.style.left = `${\r\n      rect.left + window.pageXOffset - editor.offsetWidth / 2 + rect.width / 2\r\n    }px`;\r\n  }\r\n}\r\n\r\nfunction getSelectedNode(selection: any) {\r\n  const anchor = selection.anchor;\r\n  const focus = selection.focus;\r\n  const anchorNode = selection.anchor.getNode();\r\n  const focusNode = selection.focus.getNode();\r\n  if (anchorNode === focusNode) {\r\n    return anchorNode;\r\n  }\r\n  const isBackward = selection.isBackward();\r\n  if (isBackward) {\r\n    return $isAtNodeEnd(focus) ? anchorNode : focusNode;\r\n  } else {\r\n    return $isAtNodeEnd(anchor) ? focusNode : anchorNode;\r\n  }\r\n}\r\n\r\n\r\nexport default function ToolbarPlugin() {\r\n  const [editor]: any = useLexicalComposerContext();\r\n  const toolbarRef = useRef(null);\r\n  const [canUndo, setCanUndo] = useState(false);\r\n  const [canRedo, setCanRedo] = useState(false);\r\n  const [blockType, setBlockType] = useState(\"paragraph\");\r\n  const [selectedElementKey, setSelectedElementKey] = useState(null);\r\n  const [showBlockOptionsDropDown, setShowBlockOptionsDropDown] = useState(\r\n    false\r\n  );\r\n  const [isLink, setIsLink] = useState(false);\r\n  const [isBold, setIsBold] = useState(false);\r\n  const [isItalic, setIsItalic] = useState(false);\r\n  const [isUnderline, setIsUnderline] = useState(false);\r\n  const [isStrikethrough, setIsStrikethrough] = useState(false);\r\n\r\n  const updateToolbar = useCallback(() => {\r\n    const selection = $getSelection();\r\n    if ($isRangeSelection(selection)) {\r\n      const anchorNode = selection.anchor.getNode();\r\n      const element =\r\n        anchorNode.getKey() === \"root\"\r\n          ? anchorNode\r\n          : anchorNode.getTopLevelElementOrThrow();\r\n      const elementKey: any = element.getKey();\r\n      const elementDOM = editor.getElementByKey(elementKey);\r\n      if (elementDOM !== null) {\r\n        setSelectedElementKey(elementKey);\r\n        if ($isListNode(element)) {\r\n          const parentList = $getNearestNodeOfType(anchorNode, ListNode);\r\n          const type = parentList ? parentList.getTag() : element.getTag();\r\n          setBlockType(type);\r\n        } else {\r\n          const type = $isHeadingNode(element)\r\n            ? element.getTag()\r\n            : element.getType();\r\n          setBlockType(type);\r\n        }\r\n      }\r\n      // Update text format\r\n      setIsBold(selection.hasFormat(\"bold\"));\r\n      setIsItalic(selection.hasFormat(\"italic\"));\r\n      setIsUnderline(selection.hasFormat(\"underline\"));\r\n      setIsStrikethrough(selection.hasFormat(\"strikethrough\"));\r\n\r\n      // Update links\r\n      const node = getSelectedNode(selection);\r\n      const parent = node.getParent();\r\n      if ($isLinkNode(parent) || $isLinkNode(node)) {\r\n        setIsLink(true);\r\n      } else {\r\n        setIsLink(false);\r\n      }\r\n    }\r\n\r\n  }, [editor]);\r\n\r\n  useEffect(() => {\r\n    return mergeRegister(\r\n      editor.registerUpdateListener(({ editorState }: any) => {\r\n        editorState.read(() => {\r\n          updateToolbar();\r\n        });\r\n      }),\r\n      editor.registerCommand(\r\n        SELECTION_CHANGE_COMMAND,\r\n        (_payload: any, newEditor: any) => {\r\n          updateToolbar();\r\n          return false;\r\n        },\r\n        LowPriority\r\n      ),\r\n      editor.registerCommand(\r\n        CAN_UNDO_COMMAND,\r\n        (payload: any) => {\r\n          setCanUndo(payload);\r\n          return false;\r\n        },\r\n        LowPriority\r\n      ),\r\n      editor.registerCommand(\r\n        CAN_REDO_COMMAND,\r\n        (payload: any) => {\r\n          setCanRedo(payload);\r\n          return false;\r\n        },\r\n        LowPriority\r\n      )\r\n    );\r\n  }, [editor, updateToolbar]);\r\n\r\n      // block options dropdown\r\n      const formatParagraph = () => {\r\n        if (blockType !== \"paragraph\") {\r\n          editor.update(() => {\r\n            const selection = $getSelection();\r\n    \r\n            if ($isRangeSelection(selection)) {\r\n              $wrapNodes(selection, () => $createParagraphNode());\r\n            }\r\n          });\r\n        }\r\n        setShowBlockOptionsDropDown(false);\r\n      };\r\n  \r\n      const formatLargeHeading = () => {\r\n        if (blockType !== \"h1\") {\r\n          editor.update(() => {\r\n            const selection = $getSelection();\r\n    \r\n            if ($isRangeSelection(selection)) {\r\n              $wrapNodes(selection, () => $createHeadingNode(\"h1\"));\r\n            }\r\n          });\r\n        }\r\n        setShowBlockOptionsDropDown(false);\r\n      };\r\n    \r\n      const formatSmallHeading = () => {\r\n        if (blockType !== \"h2\") {\r\n          editor.update(() => {\r\n            const selection = $getSelection();\r\n    \r\n            if ($isRangeSelection(selection)) {\r\n              $wrapNodes(selection, () => $createHeadingNode(\"h2\"));\r\n            }\r\n          });\r\n        }\r\n        setShowBlockOptionsDropDown(false);\r\n      };\r\n    \r\n      const formatBulletList = () => {\r\n        if (blockType !== \"ul\") {\r\n          editor.dispatchCommand(INSERT_UNORDERED_LIST_COMMAND);\r\n        } else {\r\n          editor.dispatchCommand(REMOVE_LIST_COMMAND);\r\n        }\r\n        setShowBlockOptionsDropDown(false);\r\n      };\r\n    \r\n      const formatNumberedList = () => {\r\n        if (blockType !== \"ol\") {\r\n          editor.dispatchCommand(INSERT_ORDERED_LIST_COMMAND);\r\n        } else {\r\n          editor.dispatchCommand(REMOVE_LIST_COMMAND);\r\n        }\r\n        setShowBlockOptionsDropDown(false);\r\n      };\r\n    \r\n      const formatQuote = () => {\r\n        if (blockType !== \"quote\") {\r\n          editor.update(() => {\r\n            const selection = $getSelection();\r\n    \r\n            if ($isRangeSelection(selection)) {\r\n              $wrapNodes(selection, () => $createQuoteNode());\r\n            }\r\n          });\r\n        }\r\n        setShowBlockOptionsDropDown(false);\r\n      };\r\n    \r\n      const formatCode = () => {\r\n        if (blockType !== \"code\") {\r\n          editor.update(() => {\r\n            const selection = $getSelection();\r\n    \r\n            if ($isRangeSelection(selection)) {\r\n              $wrapNodes(selection, () => $createCodeNode());\r\n            }\r\n          });\r\n        }\r\n        setShowBlockOptionsDropDown(false);\r\n      }\r\n\r\n  return (\r\n    <div className=\"toolbar\" ref={toolbarRef}\r\n      style={{\r\n        display: 'flex'\r\n      }}\r\n    >\r\n      <Space.Compact>\r\n        <Button\r\n          disabled={!canUndo}\r\n          type=\"text\"\r\n          onClick={() => {\r\n            editor.dispatchCommand(UNDO_COMMAND);\r\n          }}\r\n          className=\"toolbar-item spaced\"\r\n          aria-label=\"Undo\"\r\n          icon={<UndoIcon />}\r\n        />\r\n        <Button\r\n          disabled={!canRedo}\r\n          type=\"text\"\r\n          onClick={() => {\r\n            editor.dispatchCommand(REDO_COMMAND);\r\n          }}\r\n          className=\"toolbar-item\"\r\n          aria-label=\"Redo\"\r\n          icon={<RedoIcon />}\r\n        />\r\n      </Space.Compact>\r\n      <Divider type=\"vertical\" />\r\n      {supportedBlockTypes.has(blockType) && (\r\n        <>\r\n          <Dropdown\r\n            menu={{\r\n              items: [\r\n                {\r\n                  key: \"paragraph\",\r\n                  label: <Space> \r\n                    {blockTypeToBlockName[\"paragraph\"].icon}\r\n                    <span>{blockTypeToBlockName[\"paragraph\"].name}</span>\r\n                  </Space>,\r\n                  onClick: formatParagraph\r\n                },\r\n                {\r\n                  key: \"h1\",\r\n                  label: <Space>\r\n                    {blockTypeToBlockName[\"h1\"].icon}\r\n                    <span>{blockTypeToBlockName[\"h1\"].name}</span>\r\n                  </Space>\r\n                },\r\n                {\r\n                  key: \"h2\",\r\n                  label: <Space>\r\n                    {blockTypeToBlockName[\"h2\"].icon}\r\n                    <span>{blockTypeToBlockName[\"h2\"].name}</span>\r\n                  </Space>\r\n                },\r\n                {\r\n                  key: \"ul\",\r\n                  label: <Space>\r\n                    {blockTypeToBlockName[\"ul\"].icon}\r\n                    <span>{blockTypeToBlockName[\"ul\"].name}</span>\r\n                  </Space>\r\n                },\r\n                {\r\n                  key: \"ol\",\r\n                  label: <Space>\r\n                    {blockTypeToBlockName[\"ol\"].icon}\r\n                    <span>{blockTypeToBlockName[\"ol\"].name}</span>\r\n                  </Space>\r\n                },\r\n                {\r\n                  key: \"quote\",\r\n                  label: <Space>\r\n                    {blockTypeToBlockName[\"quote\"].icon}\r\n                    <span>{blockTypeToBlockName[\"quote\"].name}</span>\r\n                  </Space>\r\n                },\r\n              ]\r\n            }}\r\n          >\r\n            <Button\r\n              className=\"toolbar-item block-controls\"\r\n              onClick={() =>\r\n                setShowBlockOptionsDropDown(!showBlockOptionsDropDown)\r\n              }\r\n              type=\"text\"\r\n              aria-label=\"Formatting Options\"\r\n              icon={blockTypeToBlockName[blockType as string].icon}\r\n            >\r\n              {blockTypeToBlockName[blockType as string].name} \r\n            </Button>\r\n          </Dropdown>\r\n          <Divider type=\"vertical\" />\r\n        </>\r\n      )}\r\n      <Space.Compact>\r\n        <Button\r\n          onClick={() => {\r\n            editor.dispatchCommand(FORMAT_TEXT_COMMAND, \"bold\");\r\n          }}\r\n          className={\"toolbar-item spaced \" + (isBold ? \"active\" : \"\")}\r\n          aria-label=\"Format Bold\"\r\n          type={isBold ? 'link' : 'text'}\r\n          icon={<BoldIcon />}\r\n        />\r\n          <Button\r\n            onClick={() => {\r\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, \"italic\");\r\n            }}\r\n            className={\"toolbar-item spaced \" + (isItalic ? \"active\" : \"\")}\r\n            aria-label=\"Format Italics\"\r\n            type={isItalic ? 'link' : 'text'}\r\n            icon={<ItalicIcon />}\r\n          />\r\n          <Button\r\n            onClick={() => {\r\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, \"underline\");\r\n            }}\r\n            className={\"toolbar-item spaced \" + (isUnderline ? \"active\" : \"\")}\r\n            aria-label=\"Format Underline\"\r\n            type={isUnderline ? 'link' : 'text'}\r\n            icon={<UnderlineIcon />}\r\n          />\r\n          <Button\r\n            onClick={() => {\r\n              editor.dispatchCommand(FORMAT_TEXT_COMMAND, \"strikethrough\");\r\n            }}\r\n            className={\r\n              \"toolbar-item spaced \" + (isStrikethrough ? \"active\" : \"\")\r\n            }\r\n            aria-label=\"Format Strikethrough\"\r\n            type={isStrikethrough ? 'link' : 'text'}\r\n            icon={<StrikethroughIcon />}\r\n          />\r\n      </Space.Compact>\r\n    </div>\r\n  );\r\n}\r\n", "import { $getListDepth, $isListItemNode, $isListNode } from \"@lexical/list\";\r\nimport { useLexicalComposerContext } from \"@lexical/react/LexicalComposerContext\";\r\nimport {\r\n  $getSelection,\r\n  $isElementNode,\r\n  $isRangeSelection,\r\n  INDENT_CONTENT_COMMAND,\r\n  COMMAND_PRIORITY_HIGH\r\n} from \"lexical\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction getElementNodesInSelection(selection: any) {\r\n  const nodesInSelection = selection.getNodes();\r\n\r\n  if (nodesInSelection.length === 0) {\r\n    return new Set([\r\n      selection.anchor.getNode().getParentOrThrow(),\r\n      selection.focus.getNode().getParentOrThrow()\r\n    ]);\r\n  }\r\n\r\n  return new Set(\r\n    nodesInSelection.map((n: any) => ($isElementNode(n) ? n : n.getParentOrThrow()))\r\n  );\r\n}\r\n\r\nfunction isIndentPermitted(maxDepth: any) {\r\n  const selection = $getSelection();\r\n\r\n  if (!$isRangeSelection(selection)) {\r\n    return false;\r\n  }\r\n\r\n  const elementNodesInSelection = getElementNodesInSelection(selection);\r\n\r\n  let totalDepth = 0;\r\n\r\n  for (const elementNode of elementNodesInSelection) {\r\n    if ($isListNode(elementNode)) {\r\n      totalDepth = Math.max($getListDepth(elementNode) + 1, totalDepth);\r\n    } else if ($isListItemNode(elementNode)) {\r\n      const parent = elementNode.getParent();\r\n      if (!$isListNode(parent)) {\r\n        throw new Error(\r\n          \"ListMaxIndentLevelPlugin: A ListItemNode must have a ListNode for a parent.\"\r\n        );\r\n      }\r\n\r\n      totalDepth = Math.max($getListDepth(parent) + 1, totalDepth);\r\n    }\r\n  }\r\n\r\n  return totalDepth <= maxDepth;\r\n}\r\n\r\nexport default function ListMaxIndentLevelPlugin({ maxDepth }: any) {\r\n  const [editor] = useLexicalComposerContext();\r\n\r\n  useEffect(() => {\r\n    return editor.registerCommand(\r\n      INDENT_CONTENT_COMMAND,\r\n      () => !isIndentPermitted(maxDepth ?? 7),\r\n      COMMAND_PRIORITY_HIGH\r\n    );\r\n  }, [editor, maxDepth]);\r\n\r\n  return null;\r\n}\r\n", "import { AutoLinkPlugin } from \"@lexical/react/LexicalAutoLinkPlugin\";\r\n\r\nconst URL_MATCHER = /((https?:\\/\\/(www\\.)?)|(www\\.))[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\r\n\r\nconst EMAIL_MATCHER = /(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/;\r\n\r\nconst MATCHERS = [\r\n  (text: string) => {\r\n    const match = URL_MATCHER.exec(text);\r\n    return (\r\n      match && {\r\n        index: match.index,\r\n        length: match[0].length,\r\n        text: match[0],\r\n        url: match[0]\r\n      }\r\n    );\r\n  },\r\n  (text: string) => {\r\n    const match = EMAIL_MATCHER.exec(text);\r\n    return (\r\n      match && {\r\n        index: match.index,\r\n        length: match[0].length,\r\n        text: match[0],\r\n        url: `mailto:${match[0]}`\r\n      }\r\n    );\r\n  }\r\n];\r\n\r\nexport default function PlaygroundAutoLinkPlugin() {\r\n  return <AutoLinkPlugin matchers={MATCHERS} />;\r\n}\r\n", "import { createStyles } from 'antd-style'\r\n\r\n\r\nexport const useStylesCalendar =  createStyles(({ token }) => ({\r\n    calendar: {\r\n        '.rbc-event': {\r\n            backgroundColor: token.colorPrimaryText,\r\n            borderColor: token.colorPrimaryBorder,\r\n            color: token.colorWhite,\r\n            '&.rbc-selected': {\r\n                backgroundColor: token.colorPrimaryTextActive,\r\n                borderColor: token.colorPrimaryBorderHover,\r\n            },\r\n            '&:hover': {\r\n                backgroundColor: token.colorPrimaryTextHover,\r\n                borderColor: token.colorPrimaryBorderHover,\r\n            }\r\n        },\r\n        '.rbc-button-link': {\r\n            color: token.colorTextLabel,\r\n        },\r\n        '.rbc-day-bg.rbc-off-range-bg': {\r\n            backgroundColor: token.colorFill,\r\n        },\r\n        '.rbc-today': {\r\n            backgroundColor: token.colorPrimaryBg,\r\n        },\r\n        '.rbc-day-bg + .rbc-day-bg': {\r\n            borderLeft: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-month-row + .rbc-month-row': {\r\n            borderTop: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-month-view, .rbc-time-view': {\r\n            border: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-header + .rbc-header': {\r\n            borderLeft: `1px solid ${token.colorBorder}`,\r\n        },  \r\n        '.rbc-header': {\r\n            backgroundColor: token.colorPrimaryBg,\r\n            color: token.colorPrimaryText,\r\n            borderBottom: `2px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-time-content': {\r\n            borderTop: `2px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-time-header-content': {\r\n            borderLeft: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-time-header.rbc-overflowing': {\r\n            borderRight: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-time-content > * + * > *': {\r\n            borderLeft: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-timeslot-group': {\r\n            borderBottom: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-day-slot .rbc-time-slot':{\r\n            borderTop: `1px solid ${token.colorBorder}`,\r\n        },\r\n        '.rbc-current-time-indicator': {\r\n            backgroundColor: token.colorPrimary,\r\n            height: '1.5px',\r\n        },\r\n        '.rbc-agenda-empty': {\r\n            color: token.colorTextLabel,\r\n        },\r\n    }\r\n}))\r\n", "\r\nimport DropdownActions from \"~/components/buttons/DropdownActions\"\r\nimport { List, useTable } from \"@refinedev/antd\"\r\nimport ShowLink from \"~/components/buttons/ShowLink\"\r\nimport { Outlet } from \"@remix-run/react\"\r\nimport { Table, Tooltip } from \"antd\"\r\nimport dayjs from \"dayjs\"\r\n\r\n\r\n\r\nexport default function Patients() {\r\n    const { tableProps } = useTable({})\r\n\r\n    return <List>\r\n        <Table \r\n            {...tableProps} rowKey=\"id\"\r\n            columns={[\r\n                {\r\n                    title: \"Name\",\r\n                    render: (_, record) => <ShowLink recordItemId={record.id}>\r\n                        {record.firstName} {record.lastName}\r\n                    </ShowLink>\r\n                },\r\n                {\r\n                    title: \"Correo electr\u00F3nico\",\r\n                    dataIndex: \"email\",\r\n                },\r\n                {\r\n                    title: \"Tel\u00E9fono\",\r\n                    dataIndex: \"phone\",\r\n                },\r\n                {\r\n                    title: \"edad\",\r\n                    dataIndex: \"birthDate\",\r\n                    render: (_, record) => {\r\n                        if (!record.birthDate) return '-'\r\n                        const birthDate = dayjs(record.birthDate);\r\n                        const today = dayjs();\r\n                        const age = today.diff(birthDate, \"year\");\r\n                        return  <Tooltip title={birthDate.format(\"LL\")}><span>{age}</span></Tooltip>\r\n                    }\r\n                },\r\n                {\r\n                    dataIndex: \"actions\",\r\n                    render: (_, record) => <DropdownActions recordItemId={record.id} />\r\n                }\r\n            ]}\r\n        />\r\n        <Outlet />\r\n    </List>\r\n}\r\n", "import React from \"react\";\r\nimport {\r\n  useCan,\r\n  useNavigation,\r\n  useTranslate,\r\n  useResource,\r\n} from \"@refinedev/core\";\r\nimport { EyeOutlined } from \"@ant-design/icons\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport type { ShowButtonProps } from \"@refinedev/antd\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\n/**\r\n * `<ShowButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\r\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\r\n * It can be useful when redirecting the app to the show page with the record id route of resource.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/buttons/show-button} for more details.\r\n */\r\nexport default function ShowLink ({\r\n  resource: resourceNameFromProps,\r\n  recordItemId,\r\n  hideText = false,\r\n  accessControl,\r\n  meta,\r\n  children,\r\n  onClick,\r\n  ...rest\r\n}: ShowButtonProps){\r\n  const accessControlEnabled = accessControl?.enabled ?? true;\r\n  const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\r\n  const { showUrl: generateShowUrl } = useNavigation();\r\n\r\n  const translate = useTranslate();\r\n\r\n  const { id, resource } = useResource(\r\n    resourceNameFromProps\r\n  );\r\n\r\n  const { data } = useCan({\r\n    resource: resource?.name,\r\n    action: \"show\",\r\n    params: { id: recordItemId ?? id, resource },\r\n    queryOptions: {\r\n      enabled: accessControlEnabled,\r\n    },\r\n  });\r\n\r\n  const createButtonDisabledTitle = () => {\r\n    if (data?.can) return \"\";\r\n    else if (data?.reason) return data.reason;\r\n    else\r\n      return translate(\r\n        \"buttons.notAccessTitle\",\r\n        \"You don't have permission to access\"\r\n      );\r\n  };\r\n\r\n  const showUrl =\r\n    resource && (recordItemId || id)\r\n      ? generateShowUrl(resource, recordItemId! ?? id!, meta)\r\n      : \"\";\r\n\r\n  if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\r\n    return null;\r\n  }\r\n\r\n\r\n  return <Tooltip title={createButtonDisabledTitle()}>\r\n    {data?.can && <Link to={showUrl}>{children ?? translate(\"buttons.show\", \"Show\")}</Link>}\r\n    {!data?.can && (children ?? translate(\"buttons.show\", \"Show\"))}\r\n  </Tooltip>\r\n}\r\n", "import CreateDrawer from \"~/components/crud/CreateDrawer\"\r\nimport DoctorForm from \"~/components/doctors/form\"\r\nimport { useForm } from \"@refinedev/antd\"\r\n\r\n\r\nexport default function Patients() {\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"create\",\r\n    })\r\n\r\n    return <div>\r\n        <CreateDrawer\r\n            open={true}\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <DoctorForm formProps={formProps}  />\r\n        </CreateDrawer>\r\n    </div>\r\n}\r\n", "\r\nimport { useSelect } from \"@refinedev/antd\";\r\nimport { Form, Input, Select, DatePicker, Space, Divider } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function DoctorForm(\r\n    { formProps} : any\r\n) {\r\n    const { selectProps: countrySelectProps } = useSelect({\r\n        resource: \"countries\",\r\n        optionLabel: \"name\",\r\n        optionValue: \"id\",\r\n\r\n        pagination: {\r\n            mode: \"server\"\r\n        }\r\n    })\r\n    return <Form {...formProps} layout=\"vertical\">\r\n    <Form.Item label=\"Nombre\" required>\r\n        <Input.Group compact style={{display: \"flex\"}}>\r\n            <Form.Item\r\n                name={[\"firstName\"]}\r\n                noStyle\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"Nombres\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name={[\"lastName\"]}\r\n                noStyle\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"Apellidos\"/>\r\n            </Form.Item>\r\n        </Input.Group>\r\n    </Form.Item>\r\n    <Space.Compact block>\r\n        <Form.Item\r\n            label=\"Fecha de nacimiento\"\r\n            name={[\"birthDate\"]}\r\n            style={{width: \"50%\"}}\r\n            getValueProps={(value) => ({\r\n                value: value ? dayjs(value) : undefined,\r\n            })}\r\n        >\r\n            <DatePicker style={{width: '100%'}}  />\r\n        </Form.Item>\r\n        <Form.Item\r\n            label=\"Sexo\"\r\n            name={['sex']}\r\n            style={{width: \"50%\"}}\r\n        >\r\n            <Select placeholder=\"Seleccionar\" options={[\r\n                {label: \"Masculino\", value: \"M\"},\r\n                {label: \"Femenino\", value: \"F\"},\r\n            ]}/>\r\n        </Form.Item>\r\n    </Space.Compact>\r\n    <Form.Item\r\n        label=\"Documento de identidad\"\r\n        name={[\"idCardNumber\"]}\r\n    >\r\n        <Input />\r\n    </Form.Item>\r\n    <Space.Compact block>\r\n        <Form.Item\r\n            label=\"Correo electr\u00F3nico\"\r\n            name={[\"email\"]}\r\n            rules={[{ type: 'email' }]}\r\n            style={{width: \"60%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n            label=\"Tel\u00E9fono\"\r\n            name={[\"phone\"]}\r\n            style={{width: \"40%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n    </Space.Compact>\r\n    <Divider>Direci\u00F3n</Divider>\r\n    <Form.Item\r\n        label=\"Pais\"\r\n        name={['country', 'id']}\r\n    >\r\n        <Select\r\n            placeholder=\"Selecione um pa\u00EDs\"\r\n            {...countrySelectProps} \r\n        />\r\n    </Form.Item>\r\n    <Space.Compact block>\r\n        <Form.Item\r\n            label=\"Estado\"\r\n            name={[\"state\"]}\r\n            style={{width: \"50%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n            label=\"Ciudad\"\r\n            name={[\"city\"]}\r\n            style={{width: \"50%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n    </Space.Compact>\r\n    <Form.Item \r\n        label=\"Direcci\u00F3n\"\r\n        name={[\"address\"]}\r\n    >\r\n        <Input.TextArea />\r\n    </Form.Item>\r\n</Form>\r\n}", "import DropdownActions from \"~/components/buttons/DropdownActions\"\r\nimport { Link, Outlet,  useSearchParams } from \"@remix-run/react\"\r\nimport RefreshButton from \"~/components/buttons/RefreshButton\"\r\nimport CreateButton from \"~/components/buttons/CreateButton\"\r\nimport { PatientEdit } from \"~/components/patients\"\r\nimport { List, useTable } from \"@refinedev/antd\"\r\nimport { Table, Tooltip } from \"antd\"\r\nimport dayjs from \"dayjs\"\r\n\r\n\r\nexport default function Patients() {\r\n    const { tableProps } = useTable({})\r\n\r\n    const [ searchParams, setSearchParams ] = useSearchParams()\r\n\r\n    return <div>\r\n        <List\r\n            headerButtons={[\r\n                <CreateButton key=\"create\" />,\r\n                <RefreshButton key=\"refresh\" />,\r\n            ]}\r\n        >\r\n            <Table \r\n                {...tableProps} rowKey=\"id\"\r\n                columns={[\r\n                    {\r\n                        title: \"Name\",\r\n                        render: (_, record) => <Link to={`/patients/${record.id}`}>\r\n                            {record.firstName} {record.lastName}\r\n                        </Link>\r\n                    },\r\n                    {\r\n                        title: \"Correo electr\u00F3nico\",\r\n                        dataIndex: \"email\",\r\n                    },\r\n                    {\r\n                        title: \"Tel\u00E9fono\",\r\n                        dataIndex: \"phone\",\r\n                    },\r\n                    {\r\n                        title: \"edad\",\r\n                        dataIndex: \"birthDate\",\r\n                        render: (_, record) => {\r\n                            if (!record.birthDate) return '-'\r\n                            const birthDate = dayjs(record.birthDate);\r\n                            const today = dayjs();\r\n                            const age = today.diff(birthDate, \"year\");\r\n                            return  <Tooltip title={birthDate.format(\"LL\")}><span>{age}</span></Tooltip>\r\n                        }\r\n                    },\r\n                    {\r\n                        dataIndex: \"actions\",\r\n                        render: (_, record) => <DropdownActions \r\n                            recordItemId={record.id}\r\n                            editItem={{\r\n                                url: () => {\r\n                                    searchParams.set('edit', record.id as string)\r\n                                    return `?${searchParams.toString()}`\r\n                                }\r\n                            }} \r\n                        />\r\n                    }\r\n                ]}\r\n            />\r\n        </List>\r\n        <Outlet />\r\n        {\r\n            !!searchParams.get('edit') && <PatientEdit\r\n                open={true}\r\n                id={searchParams.get('edit')!}\r\n                redirect=\"show\"\r\n            />\r\n        }\r\n    </div>\r\n}\r\n", "import React from \"react\";\r\nimport {\r\n  useOne,\r\n  useTranslate,\r\n  useResource,\r\n  pickNotDeprecated,\r\n} from \"@refinedev/core\";\r\nimport { RedoOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport type { RefreshButtonProps } from \"@refinedev/antd\";\r\n\r\n/**\r\n * `<RefreshButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component\r\n * to update the data shown on the page via the {@link https://refine.dev/docs/core/hooks/data/useOne `useOne`} method provided by your dataProvider.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/buttons/refresh-button} for more details.\r\n */\r\nexport default function RefreshButton({\r\n  resource: resourceNameFromProps,\r\n  recordItemId,\r\n  hideText = false,\r\n  meta,\r\n  metaData,\r\n  dataProviderName,\r\n  children,\r\n  onClick,\r\n  ...rest\r\n}: RefreshButtonProps) {\r\n  const translate = useTranslate();\r\n\r\n  const { resource, id } = useResource(\r\n    resourceNameFromProps\r\n  );\r\n\r\n  const { refetch, isFetching } = useOne({\r\n    resource: resource?.name,\r\n    id: recordItemId ?? id,\r\n    queryOptions: {\r\n      enabled: false,\r\n    },\r\n    meta: pickNotDeprecated(meta, metaData),\r\n    metaData: pickNotDeprecated(meta, metaData),\r\n    liveMode: \"off\",\r\n    dataProviderName,\r\n  });\r\n\r\n  return (\r\n    <Button\r\n      // TODO: fix any type\r\n      onClick={(e) => (onClick ? onClick(e as any) : refetch())}\r\n      icon={<RedoOutlined spin={isFetching} />}\r\n      {...rest}\r\n    >\r\n      {!hideText && (children ?? translate(\"buttons.refresh\", \"Refresh\"))}\r\n    </Button>\r\n  );\r\n};\r\n", "import React from \"react\";\r\nimport {\r\n  useNavigation,\r\n  useTranslate,\r\n  useCan,\r\n  useResource,\r\n  useRouterContext,\r\n  useRouterType,\r\n  useLink,\r\n} from \"@refinedev/core\";\r\nimport { Button } from \"antd\";\r\nimport type { CreateButtonProps } from \"@refinedev/antd\";\r\nimport { CreateIcon } from \"../icons\";\r\n\r\n/**\r\n * <CreateButton> uses Ant Design's {@link https://ant.design/components/button/ `<Button> component`}.\r\n * It uses the {@link https://refine.dev/docs/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\r\n * It can be useful to redirect the app to the create page route of resource}.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/buttons/create-button} for more details.\r\n */\r\nexport default function CreateButton({\r\n  resource: resourceNameFromProps,\r\n  hideText = false,\r\n  accessControl,\r\n  meta,\r\n  children,\r\n  onClick,\r\n  ...rest\r\n}: CreateButtonProps) {\r\n  const accessControlEnabled = accessControl?.enabled ?? true;\r\n  const hideIfUnauthorized = accessControl?.hideIfUnauthorized ?? false;\r\n  const translate = useTranslate();\r\n  const routerType = useRouterType();\r\n  const Link = useLink();\r\n  const { Link: LegacyLink } = useRouterContext();\r\n\r\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\r\n\r\n  const { createUrl: generateCreateUrl } = useNavigation();\r\n\r\n  const { resource } = useResource(\r\n    resourceNameFromProps\r\n  );\r\n\r\n  const { data } = useCan({\r\n    resource: resource?.name,\r\n    action: \"create\",\r\n    queryOptions: {\r\n      enabled: accessControlEnabled,\r\n    },\r\n    params: {\r\n      resource,\r\n    },\r\n  });\r\n\r\n  const createButtonDisabledTitle = () => {\r\n    if (data?.can) return \"\";\r\n    else if (data?.reason) return data.reason;\r\n    else\r\n      return translate(\r\n        \"buttons.notAccessTitle\",\r\n        \"You don't have permission to access\"\r\n      );\r\n  };\r\n\r\n  const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\r\n\r\n  if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <ActiveLink\r\n      to={createUrl}\r\n      replace={false}\r\n      onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\r\n        if (data?.can === false) {\r\n          e.preventDefault();\r\n          return;\r\n        }\r\n        if (onClick) {\r\n          e.preventDefault();\r\n          onClick(e);\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        icon={<CreateIcon />}\r\n        disabled={data?.can === false}\r\n        title={createButtonDisabledTitle()}\r\n        {...rest}\r\n      >\r\n        {!hideText && (children ?? translate(\"buttons.create\", \"Create\"))}\r\n      </Button>\r\n    </ActiveLink>\r\n  );\r\n};\r\n", "import { useForm } from \"@refinedev/antd\"\r\nimport PatientsForm from \"~/components/patients/form\"\r\nimport EditDrawer from \"~/components/crud/EditDrawer\"\r\nimport { useSearchParams } from \"@remix-run/react\"\r\n\r\nexport default function PatientEdit({\r\n    open,\r\n    id,\r\n    redirect,\r\n}: {\r\n    open: boolean,\r\n    id: string,\r\n    redirect?: 'show' | 'edit' | 'create' | 'list',\r\n    initialData?: any\r\n}) {\r\n    const [searchParams] = useSearchParams()\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"edit\",\r\n        id: id,\r\n        redirect,\r\n        meta: {\r\n            populate: ['avatar'],\r\n        }\r\n    })\r\n    return <div>\r\n        <EditDrawer\r\n            open={open}\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <PatientsForm formProps={formProps}  />\r\n        </EditDrawer>\r\n    </div>\r\n}", "\r\nimport { mediaUploadMapper } from \"@refinedev/strapi-v4\"\r\nimport { Form, Input, Select, Space, Divider, Col, Row } from \"antd\"\r\nimport UploadAvatar from \"../controls/UploadAvatar\"\r\nimport { useSelect, } from \"@refinedev/antd\"\r\nimport dayjs from \"dayjs\"\r\nimport SelectSex from \"../controls/SelectSex\"\r\nimport DatePicker from \"../controls/DatePicker\"\r\n\r\n\r\nexport default function PatientsForm(\r\n    { formProps} : any\r\n) {\r\n    const { selectProps: countrySelectProps } = useSelect({\r\n        resource: \"countries\",\r\n        optionLabel: \"name\",\r\n        optionValue: \"id\",\r\n        pagination: {\r\n            mode: \"server\"\r\n        },\r\n    })\r\n\r\n    return <Form \r\n        {...formProps} \r\n        layout=\"vertical\"\r\n        onFinish={async (values) => {\r\n            formProps.onFinish?.(\r\n                mediaUploadMapper(values)\r\n            )\r\n        }}\r\n    >\r\n    <Form.Item label=\"Nombre\" required>\r\n        <Space.Compact block>\r\n            <Form.Item\r\n                name={[\"firstName\"]}\r\n                noStyle\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input size=\"large\" placeholder=\"Nombres\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name={[\"lastName\"]}\r\n                noStyle\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input size=\"large\" placeholder=\"Apellidos\"/>\r\n            </Form.Item>\r\n        </Space.Compact>\r\n    </Form.Item>\r\n    <Row gutter={24} align=\"middle\">\r\n        <Col flex=\"none\">\r\n            <Form.Item\r\n                name=\"avatar\"\r\n                noStyle\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <UploadAvatar  />\r\n            </Form.Item>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n            <Form.Item\r\n                label=\"Documento de identidad\"\r\n                name={[\"idCardNumber\"]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Fecha de nacimiento\"\r\n                name={[\"birthDate\"]}\r\n                getValueProps={(value) => ({\r\n                    value: value ? dayjs(value) : undefined,\r\n                })}\r\n            >\r\n                <DatePicker />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Sexo\"\r\n                style={{width: \"50%\"}}\r\n            >\r\n                <SelectSex/>\r\n            </Form.Item>\r\n        </Col>\r\n    </Row>\r\n    <Space.Compact block>\r\n        <Form.Item\r\n            label=\"Correo electr\u00F3nico\"\r\n            name={[\"email\"]}\r\n            rules={[{ type: 'email' }]}\r\n            style={{width: \"60%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n            label=\"Tel\u00E9fono\"\r\n            name={[\"phone\"]}\r\n            style={{width: \"40%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n    </Space.Compact>\r\n    <Divider>Direci\u00F3n</Divider>\r\n    <Form.Item\r\n        label=\"Pais\"\r\n        name={['country', 'id']}\r\n    >\r\n        <Select\r\n            placeholder=\"Selecione um pa\u00EDs\"\r\n            {...countrySelectProps} \r\n        />\r\n    </Form.Item>\r\n    <Space.Compact block>\r\n        <Form.Item\r\n            label=\"Estado\"\r\n            name={[\"state\"]}\r\n            style={{width: \"50%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n            label=\"Ciudad\"\r\n            name={[\"city\"]}\r\n            style={{width: \"50%\"}}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n    </Space.Compact>\r\n    <Form.Item \r\n        label=\"Direcci\u00F3n\"\r\n        name={[\"address\"]}\r\n    >\r\n        <Input.TextArea />\r\n    </Form.Item>\r\n</Form>\r\n}", "\r\nimport { LoadingOutlined, UploadOutlined } from '@ant-design/icons'\r\nimport { axiosInstance } from \"~/authProvider\"\r\nimport { useMatches } from \"@remix-run/react\"\r\nimport { useApiUrl } from \"@refinedev/core\"\r\nimport { useState } from \"react\"\r\nimport { Upload, Avatar, Spin } from \"antd\"\r\nimport { createStyles } from 'antd-style'\r\nimport { useFileUploadState } from '@refinedev/antd'\r\nimport { useEffect } from \"react\"\r\n\r\n\r\nconst useStyles = createStyles(({ token }: any) => ({\r\n    upload: {\r\n        position: \"relative\",\r\n        display: \"inline-block\",\r\n        '> .ant-upload': {\r\n            paddingLeft: '1rem',\r\n            paddingRight: '1rem',\r\n        },\r\n        '&:hover .uploadIcon': {\r\n            display: \"block\",\r\n        }\r\n    },\r\n    uploadIcon: {\r\n        position: \"absolute\",\r\n        top: \"calc(50% - 20px)\",\r\n        left: \"calc(50% - 20px)\",\r\n        color: \"white\",\r\n        fontSize: 40,\r\n        display: \"none\"\r\n    },\r\n    spin: {\r\n        position: \"absolute\",\r\n        top: \"calc(50% - 20px)\",\r\n        left: \"calc(50% - 20px)\",\r\n        \"> .ant-spin-dot\": {\r\n            fontSize: 40,\r\n        }\r\n    },\r\n    avatar: {\r\n    }\r\n}))\r\n\r\nexport default function UploadAvatar({\r\n    value,\r\n    onChange,\r\n    size =  156,\r\n}: {\r\n    value?: any,\r\n    size?: number,\r\n    onChange?: (info:any) => void,\r\n}) {\r\n    const { styles, cx } = useStyles()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [image, setImage]: any = useState()\r\n    const API_URL = useApiUrl()\r\n    const [rootLoaderData] = useMatches()\r\n    const { token }: any = rootLoaderData?.data || {}\r\n    if (token) {\r\n        axiosInstance.defaults.headers.common = {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n    }\r\n    const fileUploadState = useFileUploadState()\r\n    useEffect (() => {\r\n        if (value?.provider == 'local') {\r\n           const url = new URL(`${API_URL}/..${value.url}`)\r\n           setImage({\r\n                url: url.href,\r\n           })\r\n        }\r\n    }, [])  \r\n    \r\n    return <Upload.Dragger\r\n        listType=\"picture-card\"\r\n        className={styles.upload}\r\n        showUploadList={false}\r\n        customRequest={async (options: any) => {\r\n            // upload to strapi using axios\r\n            setIsLoading(true)\r\n            const { file, onSuccess, onError } = options\r\n            const formData = new FormData()\r\n            formData.append(\"files\", file)\r\n            // set image as base64\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = () => {\r\n                setImage({\r\n                    url: reader.result,\r\n                })\r\n            }\r\n            try {\r\n                const response = await axiosInstance.post(\r\n                    `${API_URL}/upload`,\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"multipart/form-data\",\r\n                        },\r\n                    }\r\n                )\r\n                onSuccess(response.data, file)\r\n            } catch (error) {\r\n                onError(error)\r\n            }\r\n            setIsLoading(false)\r\n        }}\r\n        onChange={async (info: any) => {\r\n            onChange?.(info)\r\n            fileUploadState.onChange?.(info)\r\n        }}\r\n        onRemove={async (file) => {\r\n            const {id} = file.response[0]\r\n            try {\r\n                await axiosInstance.delete(`${API_URL}/upload/files/${id}`)\r\n            } catch (error) {\r\n            }\r\n        }}\r\n        multiple={false}\r\n    >\r\n        <Avatar\r\n            src={image?.url}\r\n            size={size}\r\n        >\r\n        </Avatar>\r\n        {isLoading && <Spin\r\n            className={styles.spin} \r\n            indicator={<LoadingOutlined spin /> } />}\r\n        <UploadOutlined className={cx(styles.uploadIcon, 'uploadIcon')}/>\r\n    </Upload.Dragger>\r\n}", "import { Select } from \"antd\"\r\n\r\n\r\n\r\n\r\nexport default function SelectSex ({\r\n    value, \r\n    onChange,\r\n}: {\r\n    value?: string,\r\n    onChange?: (value: string) => void\r\n}) {\r\n    return <Select\r\n        value={value}\r\n        onChange={onChange}\r\n        style={{ width: '100%' }}\r\n        options={[\r\n            { label: 'Masculino', value: 'M' },\r\n            { label: 'Femenino', value: 'F' },\r\n        ]}\r\n    />\r\n}", "import { useNavigate } from \"@remix-run/react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Drawer, Space, Spin } from \"antd\"\r\nimport SaveButton from \"../buttons/SaveButton\"\r\n\r\n\r\nexport default function EditDrawer ({\r\n    children,\r\n    back=true,\r\n    title,\r\n    size = \"large\",\r\n    open,\r\n    onClose,\r\n    saveButtonProps,\r\n}: {\r\n    children: React.ReactNode\r\n    open: boolean\r\n    back?: boolean\r\n    title?: string\r\n    size?: \"default\" | \"large\" \r\n    onClose?: () => void,\r\n    saveButtonProps?: any\r\n}) {\r\n    const [_open, setOpen] = useState(false)\r\n    useEffect(() => {\r\n        setOpen(open)\r\n    }, [open])\r\n    const navigate = useNavigate()\r\n\r\n    const maxWidth = size === \"default\" ? '40rem' : size === \"large\" ? '60rem' : size === \"extraLarge\" ? '80rem' : '100%'\r\n\r\n    return <Drawer\r\n        title={title}\r\n        placement=\"right\"\r\n        width={'100%'}\r\n        contentWrapperStyle={{ maxWidth }}\r\n        mask={false}\r\n        open={_open}\r\n        destroyOnClose\r\n        onClose={() => {\r\n            if (back) {\r\n                navigate(-1)\r\n            }\r\n            onClose?.()\r\n        }}\r\n        footer={<Space>\r\n            <SaveButton\r\n                loading={saveButtonProps?.disabled}\r\n                {...saveButtonProps} />\r\n        </Space>}\r\n    >\r\n        <Spin spinning={saveButtonProps?.disabled} >\r\n        {children}\r\n        </Spin>\r\n    </Drawer>\r\n}", "import CreateDrawer from \"~/components/crud/CreateDrawer\"\r\nimport PatientsForm from \"~/components/patients/form\"\r\nimport { useForm } from \"@refinedev/antd\"\r\n\r\n\r\nexport default function Patients() {\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"create\"\r\n    })\r\n\r\n    return <div>\r\n        <CreateDrawer\r\n            open={true}\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <PatientsForm formProps={formProps}  />\r\n        </CreateDrawer>\r\n    </div>\r\n}\r\n", "\r\nimport {Button, Card, Descriptions, Divider, Space, Tabs, Typography} from \"antd\"\r\nimport { Outlet,  useParams, useSearchParams } from \"@remix-run/react\"\r\nimport TreatmentTable from \"~/components/patients/TreatmentsTable\"\r\nimport { AppointmentIcon, NoteIcon, TaskIcon, TreatmentIcon } from \"~/components/icons\"\r\nimport { Show } from \"~/components/crud/Show\"\r\nimport { useShow } from \"@refinedev/core\"\r\nimport type { TabsProps } from 'antd'\r\nimport dayjs from \"dayjs\"\r\nimport NoteCreate from \"~/components/notes/NoteCreate\"\r\nimport NoteList from \"~/components/notes/NoteList\"\r\nimport AvatarField from \"~/components/fields/AvatarField\"\r\nimport NoteEdit from \"~/components/notes/NoteEdit\"\r\n\r\n\r\n\r\n\r\nexport default function EditPage() {\r\n    const { id } = useParams()\r\n    const { queryResult } = useShow({\r\n        meta: {\r\n            populate: ['avatar'],\r\n        }\r\n    });\r\n    const { data, isLoading } = queryResult;\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    const patient = data?.data || {}\r\n\r\n    const tabItems: TabsProps['items'] = [\r\n        {\r\n            key: 'info',\r\n            label: 'Informaci\u00F3n',\r\n            children: <div>Informaci\u00F3n</div>\r\n        },\r\n        {\r\n            key: 'treatments',\r\n            label: 'Tratamientos',\r\n            children: <TreatmentTable patientId={id as string} />\r\n        },\r\n        {\r\n            key: 'notes',\r\n            label: 'Notas',\r\n            children: <NoteList patient={id as string} />\r\n        },\r\n    ]\r\n    \r\n    const handlerCreate = (type: string) => {\r\n        searchParams.set(type, 'create')\r\n        setSearchParams(searchParams)\r\n    }\r\n\r\n\r\n    const createOrEditNote = () => {\r\n        const closeHandler = () => {\r\n            searchParams.delete('note')\r\n            setSearchParams(searchParams)\r\n        }\r\n        const successHandler = () => {\r\n            searchParams.delete('note')\r\n            searchParams.set('tab', 'notes')\r\n            setSearchParams(searchParams)\r\n        }\r\n\r\n        if (searchParams.get('note') === 'create') {\r\n            return <NoteCreate \r\n                open\r\n                onClose={closeHandler}\r\n                onSuccess={successHandler}\r\n                patient={id as string} \r\n            />\r\n        } else if (searchParams.get('note')) {\r\n            return <NoteEdit \r\n                open\r\n                onClose={closeHandler}\r\n                onSuccess={successHandler}\r\n                noteId={searchParams.get('note') as string} \r\n            />\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    return <Show\r\n        isLoading={isLoading}\r\n        goBack={false}\r\n    >\r\n        <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '1rem',\r\n            }}>\r\n            <Card\r\n                actions={[\r\n                    <Typography.Text \r\n                        strong key=\"0\"\r\n                        style={{cursor: 'auto'}}\r\n                    >\r\n                        Crear\r\n                    </Typography.Text>,\r\n                    <Button type=\"link\" key=\"1\" icon={<TreatmentIcon />}>\r\n                            tratamiento\r\n                    </Button>,\r\n                    <Button type=\"link\" key=\"2\" icon={<AppointmentIcon />}>\r\n                        Cita\r\n                    </Button>,\r\n                    <Button type=\"link\" key=\"3\" icon={<TaskIcon />}>\r\n                        Tarea\r\n                    </Button>,\r\n                    <Button \r\n                        key=\"4\"\r\n                        type=\"link\" \r\n                        icon={<NoteIcon />}\r\n                        onClick={() => handlerCreate('note')}\r\n                    >\r\n                        Nota\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Space style={{\r\n                    display: 'flex',\r\n                    alignItems: 'initial',\r\n                }}>\r\n                    <AvatarField value={patient?.avatar} size={128} />\r\n                    <Divider type=\"vertical\" style={{ height: '100%' }}/>\r\n                    <Descriptions column={2}>\r\n                        <Descriptions.Item label=\"Edad\">\r\n                            <Space>\r\n                                {patient?.birthDate && dayjs().diff(dayjs(patient.birthDate), \"year\")} \r\n                                {patient?.birthDate && \" a\u00F1os\"}\r\n                                {patient?.birthDate && dayjs(patient.birthDate).format(\"LL\") }\r\n                            </Space>\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Sexo\">\r\n                            {patient?.sex === 'M' && 'Masculino'}\r\n                            {patient?.sex === 'F' && 'Femenino'}\r\n                        </Descriptions.Item >\r\n                        <Descriptions.Item span={2} label=\"Documento de Identidad\">\r\n                            {patient?.idCardNumber}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Tel\u00E9fono\">\r\n                            {patient?.phone}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Correo Electr\u00F3nico\">\r\n                            {patient?.email}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item span={2} label=\"Direcci\u00F3n\">\r\n                            {patient?.address}\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </Space>\r\n            </Card>\r\n            <div>\r\n                <Tabs\r\n                    animated={true}\r\n                    items={tabItems}\r\n                    activeKey={searchParams?.get('tab') || 'info'}\r\n                    onChange={(key) => {\r\n                        searchParams.set('tab', key)\r\n                        setSearchParams(searchParams)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Outlet />\r\n            </div>\r\n            {createOrEditNote()}\r\n        </div>\r\n    </Show>\r\n}\r\n", "import { useTable } from \"@refinedev/antd\";\r\n\r\nimport { Table, Space, Button } from \"antd\";\r\nimport { Link } from \"@remix-run/react\"\r\n\r\nexport default function TreatmentTable({\r\n    patientId\r\n}: {\r\n    patientId: string  \r\n}) {\r\n    const { tableProps } = useTable({\r\n        resource: \"dc-treatments\",\r\n        meta: {\r\n            populate: ['doctor', 'patient']\r\n        },\r\n        syncWithLocation: false,\r\n        filters: {\r\n            initial: [\r\n                {\r\n                    field: \"patient.id\",\r\n                    operator: \"eq\",\r\n                    value: patientId\r\n                }\r\n            ]\r\n        }\r\n    })\r\n    return <Table \r\n        {...tableProps} rowKey=\"id\"\r\n        columns={[\r\n            {\r\n                title: \"Nombre\",\r\n                render: (_, record) => <Link to={`${record.id}`}>{record.name}</Link>\r\n            },\r\n            {\r\n                title: \"Doctor\",\r\n                render: (_, record) => record?.doctor?.firstName + \" \" + record?.doctor?.lastName\r\n            }\r\n        ]}\r\n    />\r\n}\r\n", "import React from \"react\";\r\nimport {\r\n  useNavigation,\r\n  useTranslate,\r\n  userFriendlyResourceName,\r\n  useRefineContext,\r\n  useResource,\r\n  useToPath,\r\n  useRouterType,\r\n  useBack,\r\n  useGo,\r\n} from \"@refinedev/core\";\r\nimport {\r\n  EditButton,\r\n  DeleteButton,\r\n  RefreshButton,\r\n  ListButton,\r\n  Breadcrumb,\r\n  PageHeader,\r\n} from \"@refinedev/antd\";\r\nimport { Card, Space, Spin } from \"antd\";\r\nimport type { ShowProps } from \"@refinedev/antd\";\r\n\r\n/**\r\n * `<Show>` provides us a layout for displaying the page.\r\n * It does not contain any logic but adds extra functionalities like a refresh button.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/show} for more details.\r\n */\r\nexport const Show: React.FC<ShowProps> = ({\r\n  title,\r\n  canEdit,\r\n  canDelete,\r\n  isLoading = false,\r\n  children,\r\n  resource: resourceFromProps,\r\n  recordItemId,\r\n  dataProviderName,\r\n  breadcrumb: breadcrumbFromProps,\r\n  contentProps,\r\n  headerProps,\r\n  wrapperProps,\r\n  headerButtons,\r\n  footerButtons,\r\n  footerButtonProps,\r\n  headerButtonProps,\r\n  goBack: goBackFromProps = false,\r\n}) => {\r\n  const translate = useTranslate();\r\n  const { options: { breadcrumb: globalBreadcrumb } = {} } = useRefineContext();\r\n\r\n  const routerType = useRouterType();\r\n  const back = useBack();\r\n  const go = useGo();\r\n  const { goBack, list: legacyGoList } = useNavigation();\r\n\r\n  const { resource, action, id: idFromParams } = useResource(resourceFromProps);\r\n\r\n  const goListPath = useToPath({\r\n    resource,\r\n    action: \"list\",\r\n  });\r\n\r\n  const id = recordItemId ?? idFromParams;\r\n\r\n  const breadcrumb =\r\n    typeof breadcrumbFromProps === \"undefined\"\r\n      ? globalBreadcrumb\r\n      : breadcrumbFromProps;\r\n\r\n  const isDeleteButtonVisible =\r\n    canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\r\n  const isEditButtonVisible = canEdit ?? resource?.canEdit ?? !!resource?.edit;\r\n\r\n  const defaultHeaderButtons = (\r\n    <>\r\n      {!recordItemId && (\r\n        <ListButton\r\n          resource={\r\n            routerType === \"legacy\"\r\n              ? resource?.route\r\n              : resource?.identifier ?? resource?.name\r\n          }\r\n        />\r\n      )}\r\n      {isEditButtonVisible && (\r\n        <EditButton\r\n          {...(isLoading ? { disabled: true } : {})}\r\n          resource={\r\n            routerType === \"legacy\"\r\n              ? resource?.route\r\n              : resource?.identifier ?? resource?.name\r\n          }\r\n          recordItemId={id}\r\n        />\r\n      )}\r\n      {isDeleteButtonVisible && (\r\n        <DeleteButton\r\n          {...(isLoading ? { disabled: true } : {})}\r\n          resource={\r\n            routerType === \"legacy\"\r\n              ? resource?.route\r\n              : resource?.identifier ?? resource?.name\r\n          }\r\n          recordItemId={id}\r\n          onSuccess={() => {\r\n            if (routerType === \"legacy\") {\r\n              legacyGoList(resource?.route ?? resource?.name ?? \"\");\r\n            } else {\r\n              go({ to: goListPath });\r\n            }\r\n          }}\r\n          dataProviderName={dataProviderName}\r\n        />\r\n      )}\r\n      <RefreshButton\r\n        {...(isLoading ? { disabled: true } : {})}\r\n        resource={\r\n          routerType === \"legacy\"\r\n            ? resource?.route\r\n            : resource?.identifier ?? resource?.name\r\n        }\r\n        recordItemId={id}\r\n        dataProviderName={dataProviderName}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div {...(wrapperProps ?? {})}>\r\n      <PageHeader\r\n        ghost={false}\r\n        backIcon={goBackFromProps}\r\n        onBack={\r\n          action !== \"list\" && typeof action !== \"undefined\"\r\n            ? routerType === \"legacy\"\r\n              ? goBack\r\n              : back\r\n            : undefined\r\n        }\r\n        title={\r\n          title ??\r\n          translate(\r\n            `${resource?.name}.titles.show`,\r\n            `Show ${userFriendlyResourceName(\r\n              resource?.meta?.label ??\r\n                resource?.options?.label ??\r\n                resource?.label ??\r\n                resource?.name,\r\n              \"singular\"\r\n            )}`\r\n          )\r\n        }\r\n        extra={\r\n          <Space key=\"extra-buttons\" wrap {...(headerButtonProps ?? {})}>\r\n            {headerButtons\r\n              ? typeof headerButtons === \"function\"\r\n                ? headerButtons({\r\n                    defaultButtons: defaultHeaderButtons,\r\n                  })\r\n                : headerButtons\r\n              : defaultHeaderButtons}\r\n          </Space>\r\n        }\r\n        breadcrumb={\r\n          typeof breadcrumb !== \"undefined\" ? (\r\n            <>{breadcrumb}</> ?? undefined\r\n          ) : (\r\n            <Breadcrumb />\r\n          )\r\n        }\r\n        {...(headerProps ?? {})}\r\n      >\r\n        <Spin spinning={isLoading}>\r\n          <div style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '1rem',\r\n          }}>\r\n            {children}\r\n          </div>\r\n           {/*<Card\r\n             bordered={false}\r\n             actions={\r\n               footerButtons\r\n                 ? [\r\n                     <Space key=\"footer-buttons\" wrap {...footerButtonProps}>\r\n                       {typeof footerButtons === \"function\"\r\n                         ? footerButtons({\r\n                             defaultButtons: null,\r\n                           })\r\n                         : footerButtons}\r\n                     </Space>,\r\n                   ]\r\n                 : undefined\r\n             }\r\n             {...(contentProps ?? {})}\r\n           >\r\n             {children}\r\n           </Card>*/}\r\n        </Spin>\r\n      </PageHeader>\r\n    </div>\r\n  );\r\n};\r\n", "\r\n/*\r\ncreate drawere note\r\n*/\r\n\r\nimport { useForm } from \"@refinedev/antd\"\r\nimport CreateDrawer from \"../crud/CreateDrawer\"\r\nimport NoteForm from \"./NoteForm\"\r\n\r\nexport default function NoteCreate({\r\n    open,\r\n    patient,\r\n    onClose,\r\n    onSuccess\r\n}: {\r\n    open: boolean,\r\n    patient?: string,\r\n    onClose?: () => void,\r\n    onSuccess?: () => void,\r\n}) {\r\n\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"create\",\r\n        redirect: false,\r\n        resource: \"dc-notes\",\r\n        onMutationSuccess(data, variables, context) {\r\n            onSuccess?.()\r\n        },\r\n    })\r\n\r\n    return <div>\r\n        <CreateDrawer\r\n            open={open}\r\n            size=\"default\"\r\n            title=\"Crear nota\"\r\n            onClose={onClose}\r\n            back={false}\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <NoteForm \r\n                formProps={formProps}\r\n                patient={patient}\r\n            /> \r\n        </CreateDrawer>\r\n    </div>\r\n}", "import { Form } from \"antd\";\r\nimport RichEditor from \"../controls/RichEditor\";\r\n\r\n\r\n\r\nexport default function NoteForm ({ \r\n    formProps,\r\n    patient,\r\n} : {\r\n    formProps: any,\r\n    patient?: string,\r\n}) {\r\n\r\n    const handlerFinish = (values: any) => {\r\n        if (patient) {\r\n            values.patient = patient\r\n        }\r\n        formProps?.onFinish(values)\r\n    }\r\n    return <Form \r\n        {...formProps} \r\n        layout=\"vertical\"\r\n        onFinish={handlerFinish}\r\n    >\r\n        <Form.Item\r\n            name={[\"note\"]}\r\n            noStyle\r\n            rules={[{ required: true }]}\r\n        >\r\n            <RichEditor />\r\n        </Form.Item>\r\n    </Form>\r\n}", "import { Table } from \"antd\"\r\nimport { useTable } from \"@refinedev/antd\"\r\nimport { useEffect } from \"react\"\r\nimport { useSearchParams } from \"@remix-run/react\"\r\nimport DropdownActions from \"../buttons/DropdownActions\"\r\n\r\n\r\nexport default function NoteList({\r\n    patient\r\n}: {\r\n    patient?: string,\r\n}) {\r\n\r\n    const { tableQueryResult, setFilters, tableProps } = useTable({\r\n        resource: \"dc-notes\",\r\n        meta: {\r\n            populate: ['note'],\r\n        },\r\n        sorters: {\r\n            initial: [{\r\n                field: \"id\",\r\n                order: \"desc\"\r\n            }]\r\n        },\r\n        syncWithLocation: false,\r\n    })\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    useEffect(() => {\r\n        if (patient) {\r\n            setFilters([{\r\n                field: \"patient[id]\",\r\n                operator: \"eq\",\r\n                value: patient\r\n            }])\r\n        }\r\n    }, [patient])\r\n    return <Table\r\n        {...tableProps}\r\n        dataSource={tableQueryResult.data?.data}\r\n        rowKey=\"id\"\r\n        columns={[\r\n            {\r\n                title: 'Nota',\r\n                render: (_, record) => <div dangerouslySetInnerHTML={{ __html: record.note.html }} />\r\n            },\r\n            {\r\n                title: 'Fecha',\r\n                dataIndex: 'updatedAt',\r\n                render: (_, record) => <span>{new Date(record.createdAt).toLocaleDateString()}</span>\r\n            },\r\n            {\r\n                dataIndex: 'actions',\r\n                render: (_, record) => <div>\r\n                    <DropdownActions\r\n                        resource=\"dc-notes\"\r\n                        recordItemId={record.id}\r\n                        showItem={{\r\n                            hide: false\r\n                        }}\r\n                        editItem={{\r\n                            url: () =>  {\r\n                                searchParams.set('note', record.id as string)\r\n                                return `?${searchParams.toString()}`\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            }\r\n        ]}\r\n    />\r\n}", "\r\nimport { Avatar } from 'antd';\r\nimport { useState, useEffect } from 'react'\r\nimport { UserIcon } from '../icons'\r\nimport { useApiUrl } from \"@refinedev/core\"\r\n\r\n\r\n\r\nexport default function AvatarField({\r\n    value,\r\n    size\r\n}: { \r\n    value?: any,\r\n    size?: number\r\n}) {\r\n\r\n    const [urlImage, setUrlImage] = useState<string | null>(null)\r\n    const API_URL = useApiUrl()\r\n    useEffect(() => {\r\n        if (value?.provider == 'local') {\r\n            const url = new URL(`${API_URL}/..${value.url}`)\r\n            setUrlImage(url.href)\r\n         }\r\n    }, [value])\r\n\r\n    return <Avatar src={urlImage} size={size} icon={\r\n        !urlImage && <UserIcon />\r\n    }>\r\n    </Avatar>\r\n}", "import { useForm } from \"@refinedev/antd\"\r\nimport EditDrawer from \"../crud/EditDrawer\"\r\nimport NoteForm from \"./NoteForm\"\r\n\r\n\r\n\r\nexport default function NoteEdit({\r\n    open,\r\n    onClose,\r\n    onSuccess,\r\n    noteId,\r\n}: {\r\n    open: boolean,\r\n    onClose?: () => void,\r\n    onSuccess?: () => void,\r\n    noteId: string,\r\n}) {\r\n\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"edit\",\r\n        redirect: false,\r\n        resource: \"dc-notes\",\r\n        id: noteId,\r\n        meta: {\r\n            populate: ['note'],\r\n        },\r\n        onMutationSuccess(data, variables, context) {\r\n            onSuccess?.()\r\n        },\r\n    })\r\n\r\n    return <div>\r\n        <EditDrawer\r\n            open={open}\r\n            size=\"default\"\r\n            title=\"Editar nota\"\r\n            onClose={onClose}\r\n            back={false}\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <NoteForm \r\n                formProps={formProps}\r\n            /> \r\n        </EditDrawer>\r\n    </div>\r\n}\r\n\r\n", "import { PatientEdit } from \"~/components/patients\";\r\n\r\nexport default function EditPage() {\r\n    return <PatientEdit open redirect=\"show\" />\r\n}\r\n", "import { Table, Space, Button, InputNumber, Form } from \"antd\"\r\nimport LoadButton from \"~/components/procedures/LoadButton\"\r\nimport { CloseIcon, EditIcon } from \"~/components/icons\"\r\nimport { List, useEditableTable } from \"@refinedev/antd\"\r\nimport SaveButton from \"~/components/buttons/SaveButton\"\r\n\r\n\r\nexport default function Page() {\r\n    const {\r\n        tableProps,\r\n        formProps,\r\n        tableQueryResult,    \r\n        isEditing,\r\n        setId: setEditId,\r\n        saveButtonProps,\r\n        cancelButtonProps,\r\n        editButtonProps\r\n    } = useEditableTable({\r\n        syncWithLocation: true,\r\n    })\r\n\r\n    return <List\r\n        headerButtons={[\r\n            <LoadButton key=\"load\" onSuccess={tableQueryResult?.refetch}/>,\r\n        ]}\r\n    >\r\n        <Form {...formProps} disabled={saveButtonProps.disabled} >\r\n            <Table \r\n                {...tableProps} rowKey=\"id\"\r\n                columns={[\r\n                    {\r\n                        title: \"C\u00F3digo\",\r\n                        dataIndex: \"code\",\r\n                    },\r\n                    {\r\n                        title: \"Nombre\",\r\n                        dataIndex: \"name\",\r\n                    },\r\n                    {\r\n                        title: \"Categor\u00EDa\",\r\n                        dataIndex: \"category\",\r\n                    },\r\n                    {\r\n                        title: \"Precio\",\r\n                        dataIndex: \"price\",\r\n                        render: (_, record: any) => {\r\n                            if (isEditing(record.id)) {\r\n                                return  <Form.Item \r\n                                    name=\"price\"\r\n                                    noStyle\r\n                                >\r\n                                    <InputNumber prefix=\"$\" />\r\n                                </Form.Item>\r\n                            }\r\n                            return record.price\r\n                        }\r\n                    },\r\n                    {\r\n                        dataIndex: \"actions\",\r\n                        render: (_, record: any) => {\r\n                            if (isEditing(record.id)) {\r\n                                return <Space.Compact>\r\n                                    <SaveButton\r\n                                        hideText\r\n                                        type=\"link\"\r\n                                        {...saveButtonProps} />\r\n                                    <Button\r\n                                        danger\r\n                                        type=\"link\"\r\n                                        icon={<CloseIcon />}\r\n                                        {...cancelButtonProps} />\r\n                                </Space.Compact>\r\n                            }\r\n                            return <Space.Compact>\r\n                                <Button\r\n                                    {...editButtonProps(record.id)}\r\n                                    icon={<EditIcon />}\r\n                                    type=\"link\"\r\n                                />\r\n                            </Space.Compact>\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n        </Form>\r\n    </List>\r\n}\r\n", "import * as Icons from \"@ant-design/icons\";\r\nimport { useCustomMutation } from \"@refinedev/core\";\r\nimport { Button, Popconfirm } from \"antd\"\r\nimport { API_URL } from \"~/constants\"\r\n\r\n\r\n\r\nexport default function LoadProcedures ({\r\n    onSuccess,\r\n}: {\r\n    onSuccess?: () => void\r\n}){\r\n    const { mutate, isLoading } = useCustomMutation()\r\n    const handleLoad = () => {\r\n        mutate({\r\n            url: `${API_URL}/api/dc-procedures/load`,\r\n            method: \"post\",\r\n            values: {},\r\n            successNotification: (data, values, resource) => {\r\n                return {\r\n                    message: `Procedimientos cargados correctamente`,\r\n                    type: \"success\",\r\n                };\r\n            },\r\n        }, {\r\n            onSuccess: onSuccess,\r\n        })\r\n    }\r\n        \r\n    return <Popconfirm\r\n        title=\"\u00BFEst\u00E1 seguro de cargar o actualizar los procedimientos?\"\r\n        description=\"Se actualizar\u00E1n los procedimientos existentes y se cargar\u00E1n los nuevos\"\r\n        onConfirm={handleLoad}\r\n    >\r\n        <Button\r\n            loading={isLoading}\r\n            icon={<Icons.UploadOutlined />} \r\n        >\r\n            Cargar\r\n        </Button>\r\n    </Popconfirm>\r\n}", "import HeaderStatusField from \"~/components/treatments/fields/HeaderStatusField\"\r\nimport DropdownActions from \"~/components/buttons/DropdownActions\"\r\nimport { TreatmentEdit } from \"~/components/treatments\"\r\nimport ShowLink from \"~/components/buttons/ShowLink\"\r\nimport { Outlet, useSearchParams } from \"@remix-run/react\"\r\nimport { List, useTable, getDefaultSortOrder } from \"@refinedev/antd\"\r\nimport { Table } from \"antd\"\r\n\r\nexport default function Page() {\r\n  const { tableProps, } = useTable({\r\n    sorters: {\r\n      initial: [\r\n        { field: \"id\", order: \"desc\"}\r\n      ]\r\n    },\r\n    meta: {\r\n      populate: [\"doctor\", \"patient\"],\r\n    },\r\n  });\r\n  const [searchParams] = useSearchParams();\r\n  return (\r\n    <List>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey=\"id\"\r\n        columns={[\r\n          {\r\n            title: \"Nombre\",\r\n            render: (_, record) => (\r\n              <ShowLink recordItemId={record?.id}>{record.name}</ShowLink>\r\n            )\r\n          },\r\n          {\r\n            title: \"Estado\",\r\n            dataIndex: \"status\",\r\n            render: (_, record) => <HeaderStatusField value={record?.status} />,\r\n          },\r\n          {\r\n            title: \"Paciente\",\r\n            render: (_, record) =>\r\n              record?.patient?.firstName + \" \" + record?.patient?.lastName,\r\n          },\r\n          {\r\n            title: \"Doctor\",\r\n            render: (_, record) => {\r\n              if (record?.doctor) {\r\n                return (\r\n                  record?.doctor?.firstName + \" \" + record?.doctor?.lastName\r\n                );\r\n              }\r\n              return \"No asignado\";\r\n            },\r\n          },\r\n          {\r\n            dataIndex: \"actions\",\r\n            render: (_, record) => (\r\n              <DropdownActions recordItemId={record?.id} />\r\n            ),\r\n          },\r\n        ]}\r\n      />\r\n      <TreatmentEdit\r\n        resourceItemId={searchParams.get(\"edit\")}\r\n        open={!!searchParams.get(\"edit\")}\r\n        redirect=\"list\"\r\n      />\r\n      <Outlet />\r\n    </List>\r\n  );\r\n}\r\n", "import { Tag, Tooltip } from \"antd\"\r\nimport { TREATMENT_STATUS } from \"../constants\";\r\n\r\n\r\nexport default function HeaderStatusField({\r\n    value,\r\n}: {\r\n    items?: any[],\r\n    value?: string;\r\n    onChange?: (value: string) => void;\r\n}) {\r\n\r\n\r\n    const status = TREATMENT_STATUS.find(status => status.value === value)\r\n    \r\n\r\n    return <Tooltip title={status?.headerHelp}>\r\n        <Tag \r\n            color={status?.color}\r\n        >\r\n            {status?.label}\r\n        </Tag>\r\n    </Tooltip>\r\n}\r\n\r\n", "\r\n\r\n\r\n\r\nexport const TREATMENT_TYPES_ENUM = {\r\n    planned: 'planned',\r\n    accepted: 'accepted',\r\n    in_progress: 'in_progress',\r\n    finished: 'finished',\r\n    canceled: 'canceled'\r\n}\r\n\r\n\r\n/*\r\n    * This is a list of all the possible values for the treatment status\r\n    * hekp is an optional field that can be used to show a tooltip with more information in header status\r\n    *\r\n*/\r\nexport const TREATMENT_STATUS:Array<{\r\n    value: string,\r\n    label: string,\r\n    color: string,\r\n    headerHelp?: string\r\n}> = [\r\n    { \r\n        value: TREATMENT_TYPES_ENUM.planned, \r\n        label: 'Planeado', \r\n        color: 'blue',\r\n        headerHelp: 'El tratamiento est\u00E1 planeado, a la espera de ser aceptado por el paciente'\r\n    },\r\n    { \r\n        value: TREATMENT_TYPES_ENUM.accepted, \r\n        label: 'Aceptado', \r\n        color: 'green' ,\r\n        headerHelp: 'Algunos de los procedimientos del tratamiento han sido aceptados'\r\n    },\r\n    { \r\n        value: TREATMENT_TYPES_ENUM.in_progress, \r\n        label: 'En progreso', \r\n        color: 'orange',\r\n        headerHelp: 'Algunos de los procedimientos del tratamiento est\u00E1n en progreso'\r\n     },\r\n    { \r\n        value: TREATMENT_TYPES_ENUM.finished, \r\n        label: 'Finalizado', \r\n        color: 'red',\r\n        headerHelp: 'Todos los procedimientos del tratamiento han sido finalizados'\r\n    },\r\n    { \r\n        value: TREATMENT_TYPES_ENUM.canceled, \r\n        label: 'Cancelado', \r\n        color: 'gray',\r\n        headerHelp: 'Todos los procedimientos del tratamiento han sido cancelados'\r\n    }\r\n]\r\n", "import { useForm } from \"@refinedev/antd\";\r\nimport { useParams, useSearchParams } from \"@remix-run/react\"\r\nimport CreateDrawer from \"~/components/crud/CreateDrawer\"\r\nimport TreatmentForm from \"~/components/treatments/form\"\r\n\r\n\r\nconst RESOURCE = \"dc-treatments\"\r\n\r\nexport default function TreatmentEdit({\r\n    open,\r\n    redirect,\r\n    resourceItemId,\r\n}: {\r\n    open: boolean,\r\n    redirect?: 'show' | 'edit' | 'create' | 'list',\r\n    resourceItemId?: string|undefined|null\r\n}) {\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"edit\",\r\n        resource: RESOURCE,\r\n        id: resourceItemId as string,\r\n        redirect: redirect,\r\n        meta: {\r\n            populate: ['doctor', 'patient', 'items']\r\n        }\r\n    })\r\n\r\n    return <div>\r\n        <CreateDrawer\r\n            open={open}\r\n            size=\"extraLarge\"\r\n            saveButtonProps={saveButtonProps}\r\n        >\r\n            <TreatmentForm formProps={formProps} />\r\n        </CreateDrawer>\r\n    </div>\r\n}", "\r\nimport { Form, Input, Card, Space, Select, Row, Col, DatePicker, InputNumber, Button } from \"antd\"\r\nimport HeaderStatusControl from \"./controls/HeaderStatusControl\"\r\nimport ProceduresTable from \"./ProceduresList\"\r\nimport { useSelect } from \"@refinedev/antd\"\r\nimport { CreateIcon } from \"../icons\"\r\nimport ItemsTable from \"./ItemsTable\"\r\nimport { useState } from \"react\"\r\nimport dayjs from \"dayjs\"\r\nimport StatusSelectControl from \"./controls/StatusSelectControl\"\r\n\r\n\r\nexport default function TreatmentForm({ \r\n    formProps\r\n} : {\r\n    formProps: any\r\n}) {\r\n    const { selectProps: patientsSelectProps, queryResult: patientsQueryResult } = useSelect({\r\n        resource: \"dc-patients\",\r\n        pagination: {\r\n            mode: \"server\"\r\n        }\r\n    })\r\n    const { selectProps: doctorsSelectProps, queryResult: doctorsQueryResult } = useSelect({\r\n        resource: \"dc-doctors\",\r\n        pagination: {\r\n            mode: \"server\"\r\n        }\r\n    })\r\n\r\n    const [addProcedureOpen, setAddProcedureOpen] = useState(false)\r\n    const items = Form.useWatch('items', formProps.form)\r\n    return <Form \r\n        {...formProps} \r\n        layout=\"vertical\"\r\n        style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '1rem',\r\n        }}\r\n    >\r\n        <Row gutter={16}>\r\n            <Col span={16}>\r\n                <Card\r\n                    bordered={false}\r\n                >\r\n                    <Form.Item\r\n                        label=\"Nombre\"\r\n                        rules={[{ required: true, message: 'Por favor ingrese el nombre del tratamiento' }]}\r\n                        name={['name']}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Space.Compact block>\r\n                        <Form.Item\r\n                            style={{ flex: '-0 1 50%' }}\r\n                            label=\"Doctor\"\r\n                            rules={[{ required: true, message: 'Por favor seleccione un doctor' }]} \r\n                            name={['doctor', 'id']}>\r\n                            <Select\r\n                                placeholder=\"Selecione um doctor\"\r\n                                {...doctorsSelectProps}\r\n                                options={doctorsQueryResult?.data?.data?.map((doctor: any) => ({\r\n                                    label: doctor.firstName + \" \" + doctor.lastName,\r\n                                    value: doctor.id,\r\n                                }))}\r\n                        /> \r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            style={{ flex: '-0 1 50%' }}\r\n                            label=\"Paciente\"\r\n                            rules={[{ required: true, message: 'Por favor seleccione un paciente' }]}\r\n                            name={['patient', 'id']}\r\n                        >\r\n                            <Select \r\n                                placeholder=\"Selecione um paciente\"\r\n                                {...patientsSelectProps}\r\n                                options={patientsQueryResult?.data?.data?.map((patient: any) => ({\r\n                                    label: patient.firstName + \" \" + patient.lastName,\r\n                                    value: patient.id,\r\n                                }))}\r\n                            />\r\n                        </Form.Item>\r\n                    </Space.Compact>\r\n                </Card>\r\n            </Col>\r\n            <Col span={8}>\r\n                <Card\r\n                    bordered={false}\r\n                >   \r\n                    <Form.Item label=\"Estado\" name={['status']}>\r\n                        <HeaderStatusControl items={items} />\r\n                    </Form.Item>\r\n                    <Space.Compact block>\r\n                        <Form.Item \r\n                            label=\"Fecha de inicio\" \r\n                            name={['startDate']}\r\n                            style={{ flex: '-0 1 50%' }}\r\n                            getValueProps={(value) => ({\r\n                                value: value ? dayjs(value) : undefined\r\n                            })}\r\n                        >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item \r\n                            label=\"Fecha de finalizaci\u00F3n\" \r\n                            name={['endDate']}\r\n                            style={{ flex: '-0 1 50%' }}\r\n                            getValueProps={(value) => ({\r\n                                value: value ? dayjs(value) : undefined\r\n                            })}\r\n                        >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                    </Space.Compact>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <Form.List\r\n            name=\"items\"\r\n        >\r\n            {(fields, { add, remove }) => <>\r\n                <ProceduresTable \r\n                    open={addProcedureOpen} \r\n                    onClose={() => setAddProcedureOpen(false)}\r\n                    onAdd={(procedure: any) => { \r\n                    add({\r\n                        code: procedure.code,\r\n                        name: procedure.name,\r\n                        quantity: 1,\r\n                        priceBase: procedure.price,\r\n                        price: procedure.price,\r\n                        discount: 0,\r\n                        total: procedure.price,\r\n                        procedure: procedure.id,\r\n                    })\r\n                }} />\r\n                <ItemsTable\r\n                    dataSource={items}\r\n                    columns={[\r\n                        {\r\n                            title: 'C\u00F3digo',\r\n                            dataIndex: 'code',\r\n                            rowScope: 'row',\r\n                            fixed: 'left',\r\n                        },\r\n                        {\r\n                            title: 'Nombre',\r\n                            dataIndex: 'name',\r\n                            render: (_, record: any, index: number) => <Form.Item\r\n                                noStyle\r\n                                name={[index, 'name']}\r\n                            >\r\n                                <Input.TextArea autoSize />\r\n                            </Form.Item>,\r\n                        },\r\n                        {\r\n                            title: 'Estado',\r\n                            dataIndex: 'status',\r\n                            render: (_, record: any, index: number) => <Form.Item\r\n                                noStyle\r\n                                name={[index, 'status']}\r\n                            >\r\n                                <StatusSelectControl  />\r\n                            </Form.Item>,\r\n                        },\r\n                        {\r\n                            title: 'Cantidad',\r\n                            dataIndex: 'quantity',\r\n                            render: (_, record: any, index: number) => <Form.Item\r\n                                noStyle\r\n                                name={[index, 'quantity']}\r\n                            >\r\n                                <InputNumber\r\n                                    placeholder=\"0\"\r\n                                    onChange={(value) => {\r\n                                        formProps.form?.setFieldValue(['items', index, 'total'], value as number * record.price)\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                        },\r\n                        {\r\n                            title: 'Precio / Descuento / Precio final',\r\n                            dataIndex: 'price',\r\n                            render: (_, record: any, index: number) => <Space.Compact>\r\n                                <Form.Item noStyle name={[index, 'priceBase']}>\r\n                                    <InputNumber\r\n                                        prefix=\"$\" \r\n                                        placeholder=\"0.00\"\r\n                                        precision={2}\r\n                                        onChange={(value) => {\r\n                                            //  cal price with two decimals\r\n                                            const price = Math.round((value as number * record.quantity) * 100) / 100\r\n                                            formProps.form?.setFieldValue(['items', index, 'price'], price)\r\n                                            // set total\r\n                                            const quantity = formProps.form?.getFieldValue(['items', index, 'quantity'])\r\n                                            formProps.form?.setFieldValue(['items', index, 'total'], quantity as number * price)\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item noStyle name={[index, 'discount']}>\r\n                                    <InputNumber \r\n                                        prefix=\"%\"\r\n                                        placeholder=\"0.00\"\r\n                                        style={{ \r\n                                            borderRadius: 0,\r\n                                            marginLeft: -3.5,\r\n                                        }}\r\n                                        onChange={(value) => {\r\n                                            // cal price with two decimals\r\n                                            const price = Math.round((record.priceBase * record.quantity * (100 - (value as number)) / 100) * 100) / 100\r\n                                            formProps.form?.setFieldValue(['items', index, 'price'], price)\r\n                                            // set total\r\n                                            const quantity = formProps.form?.getFieldValue(['items', index, 'quantity'])\r\n                                            formProps.form?.setFieldValue(['items', index, 'total'], quantity as number * price)\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item noStyle name={[index, 'price']}>\r\n                                    <InputNumber \r\n                                        prefix=\"$\"\r\n                                        placeholder=\"0.00\"\r\n                                        style={{\r\n                                            borderTopLeftRadius: 0,\r\n                                            borderBottomLeftRadius: 0,\r\n                                        }}\r\n                                        onChange={(value: any) => {\r\n                                            // cal discount with two decimals\r\n                                            const discount = Math.round((100 - (value as number * 100 / record.priceBase)) * 100) / 100\r\n                                            formProps.form?.setFieldValue(['items', index, 'discount'], discount)\r\n                                            // set total\r\n                                            const quantity = formProps.form?.getFieldValue(['items', index, 'quantity'])\r\n                                            formProps.form?.setFieldValue(['items', index, 'total'], quantity as number * value as number)\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Space.Compact>\r\n                        },\r\n                        {\r\n                            title: 'Total',\r\n                            dataIndex: 'total',\r\n                            render: (_: any, record: any, index: number) => <Form.Item\r\n                                noStyle\r\n                                name={[index, 'total']}\r\n                            >\r\n                                <InputNumber\r\n                                    disabled\r\n                                    prefix=\"$\"\r\n                                    placeholder=\"0.00\"\r\n                                />\r\n                            </Form.Item>,\r\n                            fixed: 'right',\r\n                        },\r\n                    ]}\r\n                    footer={() => <Button key=\"1\" \r\n                        type=\"dashed\" \r\n                        block \r\n                        icon={<CreateIcon />} onClick={() => setAddProcedureOpen(true)}\r\n                    >\r\n                        Agregar procedimiento\r\n                    </Button>}\r\n                />\r\n            </>}\r\n        </Form.List>\r\n    </Form>\r\n}", "import { useEffect } from \"react\"\r\nimport { TREATMENT_TYPES_ENUM } from \"../constants\";\r\nimport HeaderStatusField from \"../fields/HeaderStatusField\";\r\n\r\n\r\nexport default function HeaderStatusControl({\r\n    items,\r\n    value,\r\n    onChange\r\n}: {\r\n    items?: any[],\r\n    value?: string;\r\n    onChange?: (value: string) => void;\r\n}) {\r\n\r\n    // show canceled status if only all items are canceled\r\n    // show finished status if all items are finished\r\n    // show in_progress status if any item is in_progress\r\n    // show acepted status if any item is acepted\r\n    // show planned status if any item is planned\r\n    useEffect(() => {\r\n        if (items) {\r\n            let statusValue: string = TREATMENT_TYPES_ENUM.planned\r\n            if (items.every(item => item.status === TREATMENT_TYPES_ENUM.canceled)) {\r\n                statusValue = TREATMENT_TYPES_ENUM.canceled\r\n            }\r\n            else if (items.every(item => item.status === TREATMENT_TYPES_ENUM.finished)) {\r\n                statusValue = TREATMENT_TYPES_ENUM.finished\r\n            }\r\n            else if (items.some(item => item.status === TREATMENT_TYPES_ENUM.in_progress)) {\r\n                statusValue = TREATMENT_TYPES_ENUM.in_progress\r\n            }\r\n            else if (items.some(item => item.status === TREATMENT_TYPES_ENUM.accepted)) {\r\n                statusValue = TREATMENT_TYPES_ENUM.accepted\r\n            }\r\n            onChange?.(statusValue)\r\n        }\r\n    }, [items])\r\n    \r\n\r\n    return <HeaderStatusField value={value} />\r\n}\r\n\r\n", "import { useTable } from \"@refinedev/antd\";\r\nimport * as Icons from \"@ant-design/icons\";\r\nimport { Table, Button, Drawer, Input, Spin } from \"antd\";\r\nimport { useSearchParams } from \"@remix-run/react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDebounce } from \"usehooks-ts\"\r\n\r\nconst RESOURCE = \"dc-procedures\"\r\n\r\n\r\nexport default function ProceduresTable({\r\n    onAdd,\r\n    open,\r\n    onClose\r\n}: {\r\n    onAdd: (procedure: any) => void,\r\n    open: boolean,\r\n    onClose: () => void\r\n}) {\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n    const [query, setQuery] = useState<string>(\"\")\r\n    const debouncedQuery = useDebounce<string>(query, 200)\r\n\r\n    const {\r\n        tableProps,\r\n        tableQueryResult,\r\n        setFilters: setTableFilters,\r\n    } = useTable({\r\n        resource: RESOURCE,\r\n        syncWithLocation: false\r\n    })\r\n    useEffect(() => {\r\n        setTableFilters([\r\n            {\r\n                operator: \"or\",\r\n                value: [\r\n                    {\r\n                        field: \"name\",\r\n                        operator: \"contains\",\r\n                        value: query\r\n                    },\r\n                    {\r\n                        field: \"code\",\r\n                        operator: \"startswith\",\r\n                        value: query\r\n                    }\r\n                ]\r\n            }\r\n        ])\r\n    }, [debouncedQuery])\r\n    \r\n    return <Drawer \r\n        open={open}\r\n        size=\"large\"\r\n        title={\r\n            <Input\r\n                size=\"large\"\r\n                value={query}\r\n                suffix={\r\n                    tableQueryResult?.isLoading || tableQueryResult?.isRefetching ? <Spin indicator={<Icons.LoadingOutlined  />} /> :\r\n                <Icons.SearchOutlined />\r\n                }\r\n                onChange={(e) => {\r\n                    setQuery(e.target.value)\r\n                }}\r\n                placeholder=\"Buscar procedimiento...\"\r\n            />\r\n        }\r\n        mask={false}\r\n        onClose={() => {\r\n            onClose()\r\n        }}\r\n    >\r\n        <Table \r\n            {...tableProps} rowKey=\"id\"\r\n            columns={[\r\n                {\r\n                    render: (_, record: any) => {\r\n                        return <Button\r\n                            icon={<Icons.PlusOutlined />}\r\n                            type=\"text\"\r\n                            onClick={() => {\r\n                                onAdd(record)\r\n                            }}\r\n                        >\r\n                            Agregar\r\n                        </Button>\r\n                    }\r\n                },\r\n                {\r\n                    title: \"C\u00F3digo\",\r\n                    dataIndex: \"code\",\r\n                },\r\n                {\r\n                    title: \"Nombre\",\r\n                    dataIndex: \"name\",\r\n                },\r\n                {\r\n                    title: \"Categor\u00EDa\",\r\n                    dataIndex: \"category\",\r\n                },\r\n                {\r\n                    title: \"Precio\",\r\n                    dataIndex: \"price\",\r\n                    render: (_, record: any) => `$ ${record.price}`\r\n                },\r\n            ]}\r\n        />\r\n    </Drawer>\r\n}\r\n", "import { Table, Typography } from \"antd\"\r\nimport type { TableProps } from \"antd\"\r\n\r\n\r\n\r\nexport default function ItemsTable ({\r\n    dataSource,\r\n    columns,\r\n    footer,\r\n    size = 'small',\r\n}: {\r\n    dataSource?: TableProps<any>['dataSource'],\r\n    columns?: TableProps<any>['columns'],\r\n    footer?: TableProps<any>['footer'],\r\n    size?: TableProps<any>['size'],\r\n}) {\r\n    return <Table\r\n        size={size}\r\n        dataSource={dataSource?.map((item: any, index: number) => ({key: index, ...item}))}\r\n        pagination={false}\r\n        summary={(currentData) => {\r\n            // round to 2 decimals\r\n            const total = Math.round(currentData?.reduce((acc: number, item: any) => acc + item.total, 0) * 100) / 100\r\n            return <Table.Summary.Row>\r\n                <Table.Summary.Cell index={0} colSpan={3} />\r\n                <Table.Summary.Cell index={1}>\r\n                <Typography.Title level={5} style={{textAlign: 'right',}}>\r\n                    Total\r\n                    </Typography.Title>\r\n                </Table.Summary.Cell>\r\n                <Table.Summary.Cell index={2}>\r\n                    <Typography.Title level={5}>\r\n                    {total | 0}\r\n                    </Typography.Title>\r\n                </Table.Summary.Cell>\r\n            </Table.Summary.Row>\r\n        }}\r\n        columns={columns}\r\n        footer={footer}\r\n    />\r\n}\r\n", "import { TREATMENT_STATUS, TREATMENT_TYPES_ENUM } from \"../constants\"\r\nimport { Select, Tag } from \"antd\"\r\n\r\n\r\nconst TagSelect = ({\r\n    value\r\n}: { \r\n    value: string,\r\n}) => {\r\n    const status = TREATMENT_STATUS.find(status => status.value === value)\r\n    return <Tag \r\n        style={{ \r\n            marginRight: 3,\r\n            lineHeight: '2em',\r\n        }}\r\n        color={status?.color}\r\n    >\r\n        {status?.label}\r\n    </Tag>\r\n}\r\n    \r\n\r\nexport default function StatusSelectControl({\r\n    value,\r\n    onChange\r\n}: {\r\n    value?: string;\r\n    onChange?: (value: string) => void;\r\n}) {\r\n    return <Select\r\n        value={value}\r\n        onChange={(value: any) => onChange?.(value)}\r\n        defaultValue=\"planned\"\r\n        placeholder=\"Selecciona un estado\"\r\n        bordered={false}\r\n        options={[\r\n            { label: <TagSelect value={TREATMENT_TYPES_ENUM.planned} />, value: TREATMENT_TYPES_ENUM.planned },\r\n            { label: <TagSelect value={TREATMENT_TYPES_ENUM.accepted} />, value: TREATMENT_TYPES_ENUM.accepted },\r\n            { label: <TagSelect value={TREATMENT_TYPES_ENUM.in_progress} />, value: TREATMENT_TYPES_ENUM.in_progress },\r\n            { label: <TagSelect value={TREATMENT_TYPES_ENUM.finished} />, value: TREATMENT_TYPES_ENUM.finished },\r\n            { label: <TagSelect value={TREATMENT_TYPES_ENUM.canceled} />, value: TREATMENT_TYPES_ENUM.canceled },\r\n        ]}\r\n    />\r\n}\r\n", "\r\nimport { useForm } from \"@refinedev/antd\"\r\nimport { Create } from \"~/components/crud/Create\"\r\nimport CreateDrawer from \"~/components/crud/CreateDrawer\"\r\nimport TreatmentForm from \"~/components/treatments/form\"\r\n\r\n\r\nexport default function Treatments() {\r\n    const { formProps, saveButtonProps } = useForm({\r\n        action: \"create\",\r\n    })\r\n    return <CreateDrawer\r\n        open\r\n        saveButtonProps={saveButtonProps}\r\n    >\r\n        <TreatmentForm formProps={formProps} />\r\n    </CreateDrawer>\r\n}", "\r\nimport ItemsTable from \"~/components/treatments/ItemsTable\"\r\nimport { TREATMENT_STATUS } from \"~/components/treatments/constants\"\r\nimport { Show } from \"~/components/crud/Show\"\r\nimport { Card, Col, Descriptions, Row, Tag } from \"antd\"\r\nimport { Outlet } from \"@remix-run/react\"\r\nimport { useShow } from \"@refinedev/core\"\r\nimport DateField from \"~/components/fields/DateField\"\r\nimport HeaderStatusControl from \"~/components/treatments/controls/HeaderStatusControl\"\r\n\r\n\r\nexport default function EditPage() {\r\n    \r\n    const { queryResult } = useShow({\r\n        meta: {\r\n            populate: ['doctor', 'patient', 'items']\r\n        }\r\n    });\r\n\r\n    const treatment = queryResult?.data?.data\r\n\r\n    return <Show\r\n        isLoading={queryResult?.isLoading}\r\n    >\r\n        <Row gutter={16}>\r\n            <Col span={16}>\r\n                <Card\r\n                    bordered={false}\r\n                >\r\n                    <Descriptions \r\n                        layout=\"vertical\"\r\n                        column={2}\r\n                    >   \r\n                        <Descriptions.Item label=\"Nombre\" span={2}>{treatment?.name}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Doctor\">{treatment?.doctor?.firstName} {treatment?.doctor?.lastName}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"Paciente\">{treatment?.patient?.firstName} {treatment?.patient?.lastName}</Descriptions.Item>\r\n                    </Descriptions>\r\n                </Card>\r\n            </Col>\r\n            <Col span={8}>\r\n                <Card\r\n                    bordered={false}\r\n                >\r\n                    <Descriptions \r\n                        layout=\"vertical\"\r\n                        column={2}\r\n                    >\r\n                        <Descriptions.Item \r\n                            label=\"Estado\"\r\n                            span={2}\r\n                        >\r\n                            <HeaderStatusControl value={treatment?.status} />\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Fecha de creaci\u00F3n\">\r\n                            <DateField value={treatment?.createdAt} />\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Fecha de actualizaci\u00F3n\">\r\n                            <DateField value={treatment?.createdAt} />\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        <ItemsTable\r\n            dataSource={treatment?.items}\r\n            size=\"large\"\r\n            columns={[\r\n                {\r\n                    title: 'C\u00F3digo',\r\n                    dataIndex: 'code',\r\n                    rowScope: 'row',\r\n                    fixed: 'left',\r\n                },\r\n                {\r\n                    title: 'Nombre',\r\n                    dataIndex: 'name',\r\n                },\r\n                {\r\n                    title: 'Estado',\r\n                    dataIndex: 'status',\r\n                    render: (_, record) => {\r\n                        const status = TREATMENT_STATUS.find(status => status.value === record.status)\r\n                        return <Tag color={status?.color}>{status?.label}</Tag>\r\n                    }\r\n                },\r\n                {\r\n                    title: 'Cantidad',\r\n                    dataIndex: 'quantity',\r\n                },\r\n                {\r\n                    title: 'Precio / Descuento / Precio final',\r\n                    dataIndex: 'price',\r\n                },\r\n                {\r\n                    title: 'Total',\r\n                    dataIndex: 'total'\r\n                },\r\n            ]}\r\n        />\r\n        <Outlet />\r\n    </Show>\r\n}\r\n", "import React from \"react\";\r\nimport { Tooltip, Typography } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\r\nimport type { DateFieldProps } from \"@refinedev/antd\";\r\n\r\ndayjs.extend(LocalizedFormat);\r\n\r\nconst defaultLocale = dayjs.locale();\r\n\r\n/**\r\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format.\r\n *\r\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/fields/date} for more details.\r\n */\r\nexport default function DateField({\r\n  value,\r\n  locales,\r\n  format: dateFormat = \"L\",\r\n  ...rest\r\n}: DateFieldProps) {\r\n\r\n    return <Tooltip title={dayjs(value).locale(locales || defaultLocale).format(\"LLLL\")}>\r\n        <Typography.Text {...rest}>\r\n            {dayjs(value)\r\n            .locale(locales || defaultLocale)\r\n            .format(dateFormat)}\r\n        </Typography.Text>\r\n    </Tooltip>\r\n};\r\n", "import { TreatmentEdit } from \"~/components/treatments\"\r\n\r\nexport default function Patients() {\r\n    return <TreatmentEdit\r\n        open\r\n        redirect=\"show\"\r\n    />\r\n}", "import { NavigateToResource } from \"@refinedev/remix-router\";\r\n\r\nimport type { LoaderArgs } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { authProvider } from \"~/authProvider\";\r\n\r\n/**\r\n * Since we don't have any routes for the index page, we're redirecting the user to the first resource.\r\n *\r\n * This can also be done using the `loader` function and `redirect`.\r\n */\r\nexport default function Index() {\r\n    return <NavigateToResource resource=\"products\" />;\r\n}\r\n\r\n/**\r\n * We're checking if the current session is authenticated.\r\n * If not, we're redirecting the user to the login page.\r\n * This is applied for all routes that are nested under this layout (_protected).\r\n */\r\nexport async function loader({ request }: LoaderArgs) {\r\n    const { authenticated, redirectTo } = await authProvider.check(request);\r\n\r\n    if (!authenticated) {\r\n        throw redirect(redirectTo ?? \"/login\");\r\n    }\r\n\r\n    return {};\r\n}\r\n", "export default {'version':'4269f4b4','entry':{'module':'/build/entry.client-MIPOAG4B.js','imports':['/build/_shared/chunk-Z3FKYRHQ.js','/build/_shared/chunk-AAUB3VJJ.js','/build/_shared/chunk-SXVCOPFL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-MC5245WV.js','imports':['/build/_shared/chunk-S3KZDA2I.js','/build/_shared/chunk-25GCUGQX.js','/build/_shared/chunk-3PP2XFET.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_apps':{'id':'routes/_apps','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_apps-MIKPGR5R.js','imports':['/build/_shared/chunk-FWP43RFX.js','/build/_shared/chunk-G2NHGESR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_apps.apps':{'id':'routes/_apps.apps','parentId':'routes/_apps','path':'apps','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_apps.apps-6NQXARNC.js','imports':['/build/_shared/chunk-RYUJL3ZR.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_apps.apps.create':{'id':'routes/_apps.apps.create','parentId':'routes/_apps.apps','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_apps.apps.create-CTTSXJOR.js','imports':['/build/_shared/chunk-FCLAUPAQ.js','/build/_shared/chunk-ESIZUYZA.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_auth':{'id':'routes/_auth','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_auth-RMAVJSQJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_auth.login':{'id':'routes/_auth.login','parentId':'routes/_auth','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_auth.login-VM2ZWP5X.js','imports':['/build/_shared/chunk-G2NHGESR.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_auth.register':{'id':'routes/_auth.register','parentId':'routes/_auth','path':'register','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_auth.register-FUG5XQTO.js','imports':['/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout':{'id':'routes/_layout','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout-4DGCY4CN.js','imports':['/build/_shared/chunk-FWP43RFX.js','/build/_shared/chunk-G2NHGESR.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.$':{'id':'routes/_layout.$','parentId':'routes/_layout','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.$-F22OV6AR.js','imports':['/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout._index':{'id':'routes/_layout._index','parentId':'routes/_layout','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_layout._index-2JRHNKR4.js','imports':['/build/_shared/chunk-S3KZDA2I.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.calendar':{'id':'routes/_layout.calendar','parentId':'routes/_layout','path':'calendar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.calendar-GWYCOMKQ.js','imports':['/build/_shared/chunk-B46A3QGN.js','/build/_shared/chunk-VDVY6QK7.js','/build/_shared/chunk-FCLAUPAQ.js','/build/_shared/chunk-ESIZUYZA.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.doctors':{'id':'routes/_layout.doctors','parentId':'routes/_layout','path':'doctors','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.doctors-ALTXRTCR.js','imports':['/build/_shared/chunk-RJBVN35E.js','/build/_shared/chunk-RYUJL3ZR.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.doctors.create':{'id':'routes/_layout.doctors.create','parentId':'routes/_layout.doctors','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.doctors.create-ESXN3J4N.js','imports':['/build/_shared/chunk-FCLAUPAQ.js','/build/_shared/chunk-ESIZUYZA.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.patients':{'id':'routes/_layout.patients','parentId':'routes/_layout','path':'patients','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.patients-QGTHNLNX.js','imports':['/build/_shared/chunk-UU4MNXDV.js','/build/_shared/chunk-BOWJ34R6.js','/build/_shared/chunk-B46A3QGN.js','/build/_shared/chunk-YVON52LQ.js','/build/_shared/chunk-25GCUGQX.js','/build/_shared/chunk-3PP2XFET.js','/build/_shared/chunk-RYUJL3ZR.js','/build/_shared/chunk-ESIZUYZA.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.patients.create':{'id':'routes/_layout.patients.create','parentId':'routes/_layout.patients','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.patients.create-ZE24JYKV.js','imports':['/build/_shared/chunk-FCLAUPAQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.patients_.$id':{'id':'routes/_layout.patients_.$id','parentId':'routes/_layout','path':'patients/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.patients_.$id-KX3A56EV.js','imports':['/build/_shared/chunk-SG6G33CI.js','/build/_shared/chunk-VDVY6QK7.js','/build/_shared/chunk-YVON52LQ.js','/build/_shared/chunk-RYUJL3ZR.js','/build/_shared/chunk-FCLAUPAQ.js','/build/_shared/chunk-ESIZUYZA.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.patients_.$id.edit':{'id':'routes/_layout.patients_.$id.edit','parentId':'routes/_layout.patients_.$id','path':'edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.patients_.$id.edit-S7Z4ZMAD.js','imports':['/build/_shared/chunk-UU4MNXDV.js','/build/_shared/chunk-BOWJ34R6.js','/build/_shared/chunk-B46A3QGN.js','/build/_shared/chunk-25GCUGQX.js','/build/_shared/chunk-3PP2XFET.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.procedures':{'id':'routes/_layout.procedures','parentId':'routes/_layout','path':'procedures','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.procedures-QO7M6QPU.js','imports':['/build/_shared/chunk-3PP2XFET.js','/build/_shared/chunk-ESIZUYZA.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.treatments':{'id':'routes/_layout.treatments','parentId':'routes/_layout','path':'treatments','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.treatments-46SPD4XG.js','imports':['/build/_shared/chunk-NUJE5ZII.js','/build/_shared/chunk-S4PLKFQF.js','/build/_shared/chunk-TQYIPUTV.js','/build/_shared/chunk-RJBVN35E.js','/build/_shared/chunk-RYUJL3ZR.js','/build/_shared/chunk-FCLAUPAQ.js','/build/_shared/chunk-ESIZUYZA.js','/build/_shared/chunk-42V7ATAM.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.treatments.create':{'id':'routes/_layout.treatments.create','parentId':'routes/_layout.treatments','path':'create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.treatments.create-7KQ5AGYJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.treatments_.$id':{'id':'routes/_layout.treatments_.$id','parentId':'routes/_layout','path':'treatments/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.treatments_.$id-ZCOWTZ5T.js','imports':['/build/_shared/chunk-TQYIPUTV.js','/build/_shared/chunk-SG6G33CI.js','/build/_shared/chunk-2PIAA6S4.js','/build/_shared/chunk-I2QWIXQL.js','/build/_shared/chunk-MSYOSMY6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_layout.treatments_.$id.edit':{'id':'routes/_layout.treatments_.$id.edit','parentId':'routes/_layout.treatments_.$id','path':'edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_layout.treatments_.$id.edit-X3JZMYUO.js','imports':['/build/_shared/chunk-NUJE5ZII.js','/build/_shared/chunk-S4PLKFQF.js','/build/_shared/chunk-FCLAUPAQ.js','/build/_shared/chunk-ESIZUYZA.js','/build/_shared/chunk-42V7ATAM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-4269F4B4.js'};", "\nimport * as entryServer from \"C:\\\\projects\\\\my\\\\cloudbit-dc\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\_apps.tsx\";\nimport * as route2 from \"./routes\\\\_apps.apps.tsx\";\nimport * as route3 from \"./routes\\\\_apps.apps.create.tsx\";\nimport * as route4 from \"./routes\\\\_auth.tsx\";\nimport * as route5 from \"./routes\\\\_auth.login.tsx\";\nimport * as route6 from \"./routes\\\\_auth.register.tsx\";\nimport * as route7 from \"./routes\\\\_layout.tsx\";\nimport * as route8 from \"./routes\\\\_layout.$.tsx\";\nimport * as route9 from \"./routes\\\\_layout.calendar.tsx\";\nimport * as route10 from \"./routes\\\\_layout.doctors.tsx\";\nimport * as route11 from \"./routes\\\\_layout.doctors.create.tsx\";\nimport * as route12 from \"./routes\\\\_layout.patients.tsx\";\nimport * as route13 from \"./routes\\\\_layout.patients.create.tsx\";\nimport * as route14 from \"./routes\\\\_layout.patients_.$id.tsx\";\nimport * as route15 from \"./routes\\\\_layout.patients_.$id.edit.tsx\";\nimport * as route16 from \"./routes\\\\_layout.procedures.tsx\";\nimport * as route17 from \"./routes\\\\_layout.treatments.tsx\";\nimport * as route18 from \"./routes\\\\_layout.treatments.create.tsx\";\nimport * as route19 from \"./routes\\\\_layout.treatments_.$id.tsx\";\nimport * as route20 from \"./routes\\\\_layout.treatments_.$id.edit.tsx\";\nimport * as route21 from \"./routes\\\\_layout._index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_apps\": {\n      id: \"routes/_apps\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_apps.apps\": {\n      id: \"routes/_apps.apps\",\n      parentId: \"routes/_apps\",\n      path: \"apps\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_apps.apps.create\": {\n      id: \"routes/_apps.apps.create\",\n      parentId: \"routes/_apps.apps\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/_auth\": {\n      id: \"routes/_auth\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_auth.login\": {\n      id: \"routes/_auth.login\",\n      parentId: \"routes/_auth\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/_auth.register\": {\n      id: \"routes/_auth.register\",\n      parentId: \"routes/_auth\",\n      path: \"register\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/_layout\": {\n      id: \"routes/_layout\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/_layout.$\": {\n      id: \"routes/_layout.$\",\n      parentId: \"routes/_layout\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/_layout.calendar\": {\n      id: \"routes/_layout.calendar\",\n      parentId: \"routes/_layout\",\n      path: \"calendar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/_layout.doctors\": {\n      id: \"routes/_layout.doctors\",\n      parentId: \"routes/_layout\",\n      path: \"doctors\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/_layout.doctors.create\": {\n      id: \"routes/_layout.doctors.create\",\n      parentId: \"routes/_layout.doctors\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/_layout.patients\": {\n      id: \"routes/_layout.patients\",\n      parentId: \"routes/_layout\",\n      path: \"patients\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/_layout.patients.create\": {\n      id: \"routes/_layout.patients.create\",\n      parentId: \"routes/_layout.patients\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/_layout.patients_.$id\": {\n      id: \"routes/_layout.patients_.$id\",\n      parentId: \"routes/_layout\",\n      path: \"patients/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/_layout.patients_.$id.edit\": {\n      id: \"routes/_layout.patients_.$id.edit\",\n      parentId: \"routes/_layout.patients_.$id\",\n      path: \"edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/_layout.procedures\": {\n      id: \"routes/_layout.procedures\",\n      parentId: \"routes/_layout\",\n      path: \"procedures\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/_layout.treatments\": {\n      id: \"routes/_layout.treatments\",\n      parentId: \"routes/_layout\",\n      path: \"treatments\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/_layout.treatments.create\": {\n      id: \"routes/_layout.treatments.create\",\n      parentId: \"routes/_layout.treatments\",\n      path: \"create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/_layout.treatments_.$id\": {\n      id: \"routes/_layout.treatments_.$id\",\n      parentId: \"routes/_layout\",\n      path: \"treatments/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/_layout.treatments_.$id.edit\": {\n      id: \"routes/_layout.treatments_.$id.edit\",\n      parentId: \"routes/_layout.treatments_.$id\",\n      path: \"edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/_layout._index\": {\n      id: \"routes/_layout._index\",\n      parentId: \"routes/_layout\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route21\n    }\n  };"],
  "mappings": "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",
  "names": ["StyleProviderStyle", "import_react", "import_jsx_dev_runtime", "Icon", "Icon", "Icon", "import_antd", "axios", "Cookies", "import_react", "import_jsx_dev_runtime", "esES", "import_strapi_v4", "import_node", "cookie", "import_jsx_dev_runtime", "dayjs", "localizedFormat", "timezone", "routerProvider", "loader", "import_node", "import_react", "import_antd", "import_antd", "import_core", "import_jsx_dev_runtime", "authProvider", "AntdLayout", "import_core", "import_antd", "import_core", "import_antd", "import_jsx_dev_runtime", "useToken", "Link", "import_icons", "import_antd", "import_jsx_dev_runtime", "useToken", "meta", "Link", "authProvider", "selectedKey", "import_jsx_dev_runtime", "Title", "AntdLayout", "import_jsx_dev_runtime", "loader", "import_antd", "import_react", "import_core", "import_antd", "import_core", "import_icons", "import_antd", "import_jsx_dev_runtime", "meta", "import_react", "import_jsx_dev_runtime", "meta", "React", "import_jsx_dev_runtime", "ListAnt", "import_antd", "import_antd", "import_jsx_dev_runtime", "import_react", "import_antd", "import_core", "import_antd", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "import_core", "import_antd", "import_jsx_dev_runtime", "useToken", "Link", "authProvider", "import_jsx_dev_runtime", "LoginPage", "import_core", "import_antd", "import_jsx_dev_runtime", "Text", "useToken", "Link", "authProvider", "ThemedTitle", "data", "import_jsx_dev_runtime", "LoginPage", "BaseLayout", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "BaseLayout", "loader", "layout_exports", "import_antd", "import_jsx_dev_runtime", "links", "import_antd", "import_dayjs", "import_react", "import_jsx_dev_runtime", "localizer", "view", "dayjs", "import_react_big_calendar", "import_antd", "import_antd", "import_antd", "import_dayjs", "import_jsx_dev_runtime", "DatePickerAnt", "dayjs", "value", "import_antd", "import_dayjs", "import_jsx_dev_runtime", "TimePickerAnt", "dayjs", "value", "import_antd", "import_jsx_dev_runtime", "import_antd", "import_jsx_dev_runtime", "import_antd", "import_jsx_dev_runtime", "import_react", "import_antd", "import_jsx_dev_runtime", "import_rich_text", "import_list", "import_code", "import_link", "import_list", "import_LexicalComposerContext", "import_lexical", "import_react", "import_jsx_dev_runtime", "import_antd", "import_lexical", "import_jsx_dev_runtime", "LexicalErrorBoundary", "json", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_react_big_calendar", "import_antd", "import_react", "import_dayjs", "import_antd_style", "import_antd", "import_jsx_dev_runtime", "dayjs", "links", "import_antd", "import_core", "import_antd", "import_react", "import_jsx_dev_runtime", "meta", "import_react", "import_antd", "import_dayjs", "import_jsx_dev_runtime", "dayjs", "Patients", "import_antd", "import_dayjs", "import_jsx_dev_runtime", "dayjs", "import_antd", "import_jsx_dev_runtime", "Patients", "Patients", "import_react", "import_core", "import_icons", "import_antd", "import_jsx_dev_runtime", "meta", "import_core", "import_antd", "import_jsx_dev_runtime", "meta", "Link", "import_antd", "import_strapi_v4", "import_antd", "import_icons", "import_react", "import_core", "import_antd", "import_antd_style", "import_jsx_dev_runtime", "API_URL", "import_antd", "import_dayjs", "import_antd", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "dayjs", "import_react", "import_antd", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "redirect", "import_antd", "import_dayjs", "import_jsx_dev_runtime", "Patients", "dayjs", "Patients", "import_antd", "import_jsx_dev_runtime", "Patients", "import_antd", "import_react", "import_antd", "import_react", "import_jsx_dev_runtime", "import_core", "import_antd", "import_jsx_dev_runtime", "import_core", "import_dayjs", "import_antd", "import_antd", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_antd", "import_react", "import_jsx_dev_runtime", "import_antd", "import_react", "import_core", "import_jsx_dev_runtime", "API_URL", "import_antd", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "dayjs", "EditPage", "import_jsx_dev_runtime", "EditPage", "import_antd", "import_core", "import_antd", "import_jsx_dev_runtime", "import_antd", "import_jsx_dev_runtime", "Page", "import_antd", "import_jsx_dev_runtime", "status", "import_antd", "import_antd", "import_react", "import_jsx_dev_runtime", "import_antd", "Icons", "import_react", "import_jsx_dev_runtime", "import_antd", "import_antd", "import_jsx_dev_runtime", "import_react", "import_dayjs", "import_antd", "import_jsx_dev_runtime", "status", "value", "import_jsx_dev_runtime", "dayjs", "_a", "_b", "_c", "import_jsx_dev_runtime", "RESOURCE", "redirect", "import_react", "import_antd", "import_jsx_dev_runtime", "Page", "import_antd", "import_jsx_dev_runtime", "EditPage", "import_antd", "import_react", "import_core", "import_antd", "import_dayjs", "import_localizedFormat", "import_jsx_dev_runtime", "dayjs", "LocalizedFormat", "import_jsx_dev_runtime", "EditPage", "status", "Patients", "import_jsx_dev_runtime", "Patients", "Index", "loader", "import_remix_router", "import_node", "import_jsx_dev_runtime", "Index", "loader", "layout_exports"]
}
